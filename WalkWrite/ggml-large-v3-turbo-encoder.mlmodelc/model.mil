program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.1.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 128, 3000]> logmel_data) {
            tensor<string, []> var_84_pad_type_0 = const()[name = tensor<string, []>("op_84_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_84_pad_0 = const()[name = tensor<string, []>("op_84_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [1]> var_84_strides_0 = const()[name = tensor<string, []>("op_84_strides_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, [1]> var_84_dilations_0 = const()[name = tensor<string, []>("op_84_dilations_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> var_84_groups_0 = const()[name = tensor<string, []>("op_84_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> logmel_data_to_fp16_dtype_0 = const()[name = tensor<string, []>("logmel_data_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1280, 128, 3]> weight_3_to_fp16 = const()[name = tensor<string, []>("weight_3_to_fp16"), val = tensor<fp16, [1280, 128, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1280]> bias_3_to_fp16 = const()[name = tensor<string, []>("bias_3_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(983168)))];
            tensor<fp16, [1, 128, 3000]> logmel_data_to_fp16 = cast(dtype = logmel_data_to_fp16_dtype_0, x = logmel_data)[name = tensor<string, []>("cast_131")];
            tensor<fp16, [1, 1280, 3000]> var_84_cast_fp16 = conv(bias = bias_3_to_fp16, dilations = var_84_dilations_0, groups = var_84_groups_0, pad = var_84_pad_0, pad_type = var_84_pad_type_0, strides = var_84_strides_0, weight = weight_3_to_fp16, x = logmel_data_to_fp16)[name = tensor<string, []>("op_84_cast_fp16")];
            tensor<string, []> input_1_mode_0 = const()[name = tensor<string, []>("input_1_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1280, 3000]> input_1_cast_fp16 = gelu(mode = input_1_mode_0, x = var_84_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<string, []> var_102_pad_type_0 = const()[name = tensor<string, []>("op_102_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_102_pad_0 = const()[name = tensor<string, []>("op_102_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [1]> var_102_strides_0 = const()[name = tensor<string, []>("op_102_strides_0"), val = tensor<int32, [1]>([2])];
            tensor<int32, [1]> var_102_dilations_0 = const()[name = tensor<string, []>("op_102_dilations_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> var_102_groups_0 = const()[name = tensor<string, []>("op_102_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 3]> weight_7_to_fp16 = const()[name = tensor<string, []>("weight_7_to_fp16"), val = tensor<fp16, [1280, 1280, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(985792)))];
            tensor<fp16, [1280]> bias_7_to_fp16 = const()[name = tensor<string, []>("bias_7_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10816256)))];
            tensor<fp16, [1, 1280, 1500]> var_102_cast_fp16 = conv(bias = bias_7_to_fp16, dilations = var_102_dilations_0, groups = var_102_groups_0, pad = var_102_pad_0, pad_type = var_102_pad_type_0, strides = var_102_strides_0, weight = weight_7_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("op_102_cast_fp16")];
            tensor<string, []> x_3_mode_0 = const()[name = tensor<string, []>("x_3_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1280, 1500]> x_3_cast_fp16 = gelu(mode = x_3_mode_0, x = var_102_cast_fp16)[name = tensor<string, []>("x_3_cast_fp16")];
            tensor<fp16, [1280, 1500]> var_107_to_fp16 = const()[name = tensor<string, []>("op_107_to_fp16"), val = tensor<fp16, [1280, 1500]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10818880)))];
            tensor<fp16, [1, 1280, 1500]> var_109_cast_fp16 = add(x = x_3_cast_fp16, y = var_107_to_fp16)[name = tensor<string, []>("op_109_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_109_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, []> var_124 = const()[name = tensor<string, []>("op_124"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_3_axes_0 = const()[name = tensor<string, []>("input_3_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_3_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14658944)))];
            tensor<fp16, [1280]> input_3_beta_0_to_fp16 = const()[name = tensor<string, []>("input_3_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14661568)))];
            tensor<fp16, []> var_140_to_fp16 = const()[name = tensor<string, []>("op_140_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_3_cast_fp16 = layer_norm(axes = input_3_axes_0, beta = input_3_beta_0_to_fp16, epsilon = var_140_to_fp16, gamma = input_3_gamma_0_to_fp16, x = inputs_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<string, []> q_1_pad_type_0 = const()[name = tensor<string, []>("q_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_1_strides_0 = const()[name = tensor<string, []>("q_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_1_pad_0 = const()[name = tensor<string, []>("q_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_1_dilations_0 = const()[name = tensor<string, []>("q_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_1_groups_0 = const()[name = tensor<string, []>("q_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_175_weight_0_to_fp16 = const()[name = tensor<string, []>("op_175_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14664192)))];
            tensor<fp16, [1280]> var_175_bias_0_to_fp16 = const()[name = tensor<string, []>("op_175_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17941056)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_175_cast_fp16 = conv(bias = var_175_bias_0_to_fp16, dilations = q_1_dilations_0, groups = q_1_groups_0, pad = q_1_pad_0, pad_type = q_1_pad_type_0, strides = q_1_strides_0, weight = var_175_weight_0_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("op_175_cast_fp16")];
            tensor<string, []> k_1_pad_type_0 = const()[name = tensor<string, []>("k_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_1_strides_0 = const()[name = tensor<string, []>("k_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_1_pad_0 = const()[name = tensor<string, []>("k_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_1_dilations_0 = const()[name = tensor<string, []>("k_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_1_groups_0 = const()[name = tensor<string, []>("k_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_0_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17943680)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_1_cast_fp16 = conv(dilations = k_1_dilations_0, groups = k_1_groups_0, pad = k_1_pad_0, pad_type = k_1_pad_type_0, strides = k_1_strides_0, weight = blocks_0_attn_key_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("k_1_cast_fp16")];
            tensor<string, []> var_173_pad_type_0 = const()[name = tensor<string, []>("op_173_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_173_strides_0 = const()[name = tensor<string, []>("op_173_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_173_pad_0 = const()[name = tensor<string, []>("op_173_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_173_dilations_0 = const()[name = tensor<string, []>("op_173_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_173_groups_0 = const()[name = tensor<string, []>("op_173_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_0_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21220544)))];
            tensor<fp16, [1280]> blocks_0_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24497408)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_173_cast_fp16 = conv(bias = blocks_0_attn_value_bias_to_fp16, dilations = var_173_dilations_0, groups = var_173_groups_0, pad = var_173_pad_0, pad_type = var_173_pad_type_0, strides = var_173_strides_0, weight = blocks_0_attn_value_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("op_173_cast_fp16")];
            tensor<int32, [20]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_176_axis_0 = const()[name = tensor<string, []>("op_176_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_176_cast_fp16_19 = split(axis = var_176_axis_0, split_sizes = tile_0, x = var_175_cast_fp16)[name = tensor<string, []>("op_176_cast_fp16")];
            tensor<int32, [4]> var_197_perm_0 = const()[name = tensor<string, []>("op_197_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_198_axis_0 = const()[name = tensor<string, []>("op_198_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_197_cast_fp16 = transpose(perm = var_197_perm_0, x = k_1_cast_fp16)[name = tensor<string, []>("transpose_32")];
            tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_198_cast_fp16_19 = split(axis = var_198_axis_0, split_sizes = tile_1, x = var_197_cast_fp16)[name = tensor<string, []>("op_198_cast_fp16")];
            tensor<int32, [20]> tile_2 = const()[name = tensor<string, []>("tile_2"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_219_axis_0 = const()[name = tensor<string, []>("op_219_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_219_cast_fp16_19 = split(axis = var_219_axis_0, split_sizes = tile_2, x = var_173_cast_fp16)[name = tensor<string, []>("op_219_cast_fp16")];
            tensor<string, []> aw_1_equation_0 = const()[name = tensor<string, []>("aw_1_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1_cast_fp16 = einsum(equation = aw_1_equation_0, values = (var_198_cast_fp16_0, var_176_cast_fp16_0))[name = tensor<string, []>("aw_1_cast_fp16")];
            tensor<string, []> aw_3_equation_0 = const()[name = tensor<string, []>("aw_3_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_3_cast_fp16 = einsum(equation = aw_3_equation_0, values = (var_198_cast_fp16_1, var_176_cast_fp16_1))[name = tensor<string, []>("aw_3_cast_fp16")];
            tensor<string, []> aw_5_equation_0 = const()[name = tensor<string, []>("aw_5_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_5_cast_fp16 = einsum(equation = aw_5_equation_0, values = (var_198_cast_fp16_2, var_176_cast_fp16_2))[name = tensor<string, []>("aw_5_cast_fp16")];
            tensor<string, []> aw_7_equation_0 = const()[name = tensor<string, []>("aw_7_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_7_cast_fp16 = einsum(equation = aw_7_equation_0, values = (var_198_cast_fp16_3, var_176_cast_fp16_3))[name = tensor<string, []>("aw_7_cast_fp16")];
            tensor<string, []> aw_9_equation_0 = const()[name = tensor<string, []>("aw_9_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_9_cast_fp16 = einsum(equation = aw_9_equation_0, values = (var_198_cast_fp16_4, var_176_cast_fp16_4))[name = tensor<string, []>("aw_9_cast_fp16")];
            tensor<string, []> aw_11_equation_0 = const()[name = tensor<string, []>("aw_11_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_11_cast_fp16 = einsum(equation = aw_11_equation_0, values = (var_198_cast_fp16_5, var_176_cast_fp16_5))[name = tensor<string, []>("aw_11_cast_fp16")];
            tensor<string, []> aw_13_equation_0 = const()[name = tensor<string, []>("aw_13_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_13_cast_fp16 = einsum(equation = aw_13_equation_0, values = (var_198_cast_fp16_6, var_176_cast_fp16_6))[name = tensor<string, []>("aw_13_cast_fp16")];
            tensor<string, []> aw_15_equation_0 = const()[name = tensor<string, []>("aw_15_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_15_cast_fp16 = einsum(equation = aw_15_equation_0, values = (var_198_cast_fp16_7, var_176_cast_fp16_7))[name = tensor<string, []>("aw_15_cast_fp16")];
            tensor<string, []> aw_17_equation_0 = const()[name = tensor<string, []>("aw_17_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_17_cast_fp16 = einsum(equation = aw_17_equation_0, values = (var_198_cast_fp16_8, var_176_cast_fp16_8))[name = tensor<string, []>("aw_17_cast_fp16")];
            tensor<string, []> aw_19_equation_0 = const()[name = tensor<string, []>("aw_19_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_19_cast_fp16 = einsum(equation = aw_19_equation_0, values = (var_198_cast_fp16_9, var_176_cast_fp16_9))[name = tensor<string, []>("aw_19_cast_fp16")];
            tensor<string, []> aw_21_equation_0 = const()[name = tensor<string, []>("aw_21_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_21_cast_fp16 = einsum(equation = aw_21_equation_0, values = (var_198_cast_fp16_10, var_176_cast_fp16_10))[name = tensor<string, []>("aw_21_cast_fp16")];
            tensor<string, []> aw_23_equation_0 = const()[name = tensor<string, []>("aw_23_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_23_cast_fp16 = einsum(equation = aw_23_equation_0, values = (var_198_cast_fp16_11, var_176_cast_fp16_11))[name = tensor<string, []>("aw_23_cast_fp16")];
            tensor<string, []> aw_25_equation_0 = const()[name = tensor<string, []>("aw_25_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_25_cast_fp16 = einsum(equation = aw_25_equation_0, values = (var_198_cast_fp16_12, var_176_cast_fp16_12))[name = tensor<string, []>("aw_25_cast_fp16")];
            tensor<string, []> aw_27_equation_0 = const()[name = tensor<string, []>("aw_27_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_27_cast_fp16 = einsum(equation = aw_27_equation_0, values = (var_198_cast_fp16_13, var_176_cast_fp16_13))[name = tensor<string, []>("aw_27_cast_fp16")];
            tensor<string, []> aw_29_equation_0 = const()[name = tensor<string, []>("aw_29_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_29_cast_fp16 = einsum(equation = aw_29_equation_0, values = (var_198_cast_fp16_14, var_176_cast_fp16_14))[name = tensor<string, []>("aw_29_cast_fp16")];
            tensor<string, []> aw_31_equation_0 = const()[name = tensor<string, []>("aw_31_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_31_cast_fp16 = einsum(equation = aw_31_equation_0, values = (var_198_cast_fp16_15, var_176_cast_fp16_15))[name = tensor<string, []>("aw_31_cast_fp16")];
            tensor<string, []> aw_33_equation_0 = const()[name = tensor<string, []>("aw_33_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_33_cast_fp16 = einsum(equation = aw_33_equation_0, values = (var_198_cast_fp16_16, var_176_cast_fp16_16))[name = tensor<string, []>("aw_33_cast_fp16")];
            tensor<string, []> aw_35_equation_0 = const()[name = tensor<string, []>("aw_35_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_35_cast_fp16 = einsum(equation = aw_35_equation_0, values = (var_198_cast_fp16_17, var_176_cast_fp16_17))[name = tensor<string, []>("aw_35_cast_fp16")];
            tensor<string, []> aw_37_equation_0 = const()[name = tensor<string, []>("aw_37_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_37_cast_fp16 = einsum(equation = aw_37_equation_0, values = (var_198_cast_fp16_18, var_176_cast_fp16_18))[name = tensor<string, []>("aw_37_cast_fp16")];
            tensor<string, []> aw_39_equation_0 = const()[name = tensor<string, []>("aw_39_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_39_cast_fp16 = einsum(equation = aw_39_equation_0, values = (var_198_cast_fp16_19, var_176_cast_fp16_19))[name = tensor<string, []>("aw_39_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_280_cast_fp16 = softmax(axis = var_124, x = aw_1_cast_fp16)[name = tensor<string, []>("op_280_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_281_cast_fp16 = softmax(axis = var_124, x = aw_3_cast_fp16)[name = tensor<string, []>("op_281_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_282_cast_fp16 = softmax(axis = var_124, x = aw_5_cast_fp16)[name = tensor<string, []>("op_282_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_283_cast_fp16 = softmax(axis = var_124, x = aw_7_cast_fp16)[name = tensor<string, []>("op_283_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_284_cast_fp16 = softmax(axis = var_124, x = aw_9_cast_fp16)[name = tensor<string, []>("op_284_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_285_cast_fp16 = softmax(axis = var_124, x = aw_11_cast_fp16)[name = tensor<string, []>("op_285_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_286_cast_fp16 = softmax(axis = var_124, x = aw_13_cast_fp16)[name = tensor<string, []>("op_286_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_287_cast_fp16 = softmax(axis = var_124, x = aw_15_cast_fp16)[name = tensor<string, []>("op_287_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_288_cast_fp16 = softmax(axis = var_124, x = aw_17_cast_fp16)[name = tensor<string, []>("op_288_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_289_cast_fp16 = softmax(axis = var_124, x = aw_19_cast_fp16)[name = tensor<string, []>("op_289_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_290_cast_fp16 = softmax(axis = var_124, x = aw_21_cast_fp16)[name = tensor<string, []>("op_290_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_291_cast_fp16 = softmax(axis = var_124, x = aw_23_cast_fp16)[name = tensor<string, []>("op_291_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_292_cast_fp16 = softmax(axis = var_124, x = aw_25_cast_fp16)[name = tensor<string, []>("op_292_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_293_cast_fp16 = softmax(axis = var_124, x = aw_27_cast_fp16)[name = tensor<string, []>("op_293_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_294_cast_fp16 = softmax(axis = var_124, x = aw_29_cast_fp16)[name = tensor<string, []>("op_294_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_295_cast_fp16 = softmax(axis = var_124, x = aw_31_cast_fp16)[name = tensor<string, []>("op_295_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_296_cast_fp16 = softmax(axis = var_124, x = aw_33_cast_fp16)[name = tensor<string, []>("op_296_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_297_cast_fp16 = softmax(axis = var_124, x = aw_35_cast_fp16)[name = tensor<string, []>("op_297_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_298_cast_fp16 = softmax(axis = var_124, x = aw_37_cast_fp16)[name = tensor<string, []>("op_298_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_299_cast_fp16 = softmax(axis = var_124, x = aw_39_cast_fp16)[name = tensor<string, []>("op_299_cast_fp16")];
            tensor<string, []> var_301_equation_0 = const()[name = tensor<string, []>("op_301_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_301_cast_fp16 = einsum(equation = var_301_equation_0, values = (var_219_cast_fp16_0, var_280_cast_fp16))[name = tensor<string, []>("op_301_cast_fp16")];
            tensor<string, []> var_303_equation_0 = const()[name = tensor<string, []>("op_303_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_303_cast_fp16 = einsum(equation = var_303_equation_0, values = (var_219_cast_fp16_1, var_281_cast_fp16))[name = tensor<string, []>("op_303_cast_fp16")];
            tensor<string, []> var_305_equation_0 = const()[name = tensor<string, []>("op_305_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_305_cast_fp16 = einsum(equation = var_305_equation_0, values = (var_219_cast_fp16_2, var_282_cast_fp16))[name = tensor<string, []>("op_305_cast_fp16")];
            tensor<string, []> var_307_equation_0 = const()[name = tensor<string, []>("op_307_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_307_cast_fp16 = einsum(equation = var_307_equation_0, values = (var_219_cast_fp16_3, var_283_cast_fp16))[name = tensor<string, []>("op_307_cast_fp16")];
            tensor<string, []> var_309_equation_0 = const()[name = tensor<string, []>("op_309_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_309_cast_fp16 = einsum(equation = var_309_equation_0, values = (var_219_cast_fp16_4, var_284_cast_fp16))[name = tensor<string, []>("op_309_cast_fp16")];
            tensor<string, []> var_311_equation_0 = const()[name = tensor<string, []>("op_311_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_311_cast_fp16 = einsum(equation = var_311_equation_0, values = (var_219_cast_fp16_5, var_285_cast_fp16))[name = tensor<string, []>("op_311_cast_fp16")];
            tensor<string, []> var_313_equation_0 = const()[name = tensor<string, []>("op_313_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_313_cast_fp16 = einsum(equation = var_313_equation_0, values = (var_219_cast_fp16_6, var_286_cast_fp16))[name = tensor<string, []>("op_313_cast_fp16")];
            tensor<string, []> var_315_equation_0 = const()[name = tensor<string, []>("op_315_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_315_cast_fp16 = einsum(equation = var_315_equation_0, values = (var_219_cast_fp16_7, var_287_cast_fp16))[name = tensor<string, []>("op_315_cast_fp16")];
            tensor<string, []> var_317_equation_0 = const()[name = tensor<string, []>("op_317_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_317_cast_fp16 = einsum(equation = var_317_equation_0, values = (var_219_cast_fp16_8, var_288_cast_fp16))[name = tensor<string, []>("op_317_cast_fp16")];
            tensor<string, []> var_319_equation_0 = const()[name = tensor<string, []>("op_319_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_319_cast_fp16 = einsum(equation = var_319_equation_0, values = (var_219_cast_fp16_9, var_289_cast_fp16))[name = tensor<string, []>("op_319_cast_fp16")];
            tensor<string, []> var_321_equation_0 = const()[name = tensor<string, []>("op_321_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_321_cast_fp16 = einsum(equation = var_321_equation_0, values = (var_219_cast_fp16_10, var_290_cast_fp16))[name = tensor<string, []>("op_321_cast_fp16")];
            tensor<string, []> var_323_equation_0 = const()[name = tensor<string, []>("op_323_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_323_cast_fp16 = einsum(equation = var_323_equation_0, values = (var_219_cast_fp16_11, var_291_cast_fp16))[name = tensor<string, []>("op_323_cast_fp16")];
            tensor<string, []> var_325_equation_0 = const()[name = tensor<string, []>("op_325_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_325_cast_fp16 = einsum(equation = var_325_equation_0, values = (var_219_cast_fp16_12, var_292_cast_fp16))[name = tensor<string, []>("op_325_cast_fp16")];
            tensor<string, []> var_327_equation_0 = const()[name = tensor<string, []>("op_327_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_327_cast_fp16 = einsum(equation = var_327_equation_0, values = (var_219_cast_fp16_13, var_293_cast_fp16))[name = tensor<string, []>("op_327_cast_fp16")];
            tensor<string, []> var_329_equation_0 = const()[name = tensor<string, []>("op_329_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_329_cast_fp16 = einsum(equation = var_329_equation_0, values = (var_219_cast_fp16_14, var_294_cast_fp16))[name = tensor<string, []>("op_329_cast_fp16")];
            tensor<string, []> var_331_equation_0 = const()[name = tensor<string, []>("op_331_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_331_cast_fp16 = einsum(equation = var_331_equation_0, values = (var_219_cast_fp16_15, var_295_cast_fp16))[name = tensor<string, []>("op_331_cast_fp16")];
            tensor<string, []> var_333_equation_0 = const()[name = tensor<string, []>("op_333_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_333_cast_fp16 = einsum(equation = var_333_equation_0, values = (var_219_cast_fp16_16, var_296_cast_fp16))[name = tensor<string, []>("op_333_cast_fp16")];
            tensor<string, []> var_335_equation_0 = const()[name = tensor<string, []>("op_335_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_335_cast_fp16 = einsum(equation = var_335_equation_0, values = (var_219_cast_fp16_17, var_297_cast_fp16))[name = tensor<string, []>("op_335_cast_fp16")];
            tensor<string, []> var_337_equation_0 = const()[name = tensor<string, []>("op_337_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_337_cast_fp16 = einsum(equation = var_337_equation_0, values = (var_219_cast_fp16_18, var_298_cast_fp16))[name = tensor<string, []>("op_337_cast_fp16")];
            tensor<string, []> var_339_equation_0 = const()[name = tensor<string, []>("op_339_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_339_cast_fp16 = einsum(equation = var_339_equation_0, values = (var_219_cast_fp16_19, var_299_cast_fp16))[name = tensor<string, []>("op_339_cast_fp16")];
            tensor<bool, []> input_5_interleave_0 = const()[name = tensor<string, []>("input_5_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_5_cast_fp16 = concat(axis = var_124, interleave = input_5_interleave_0, values = (var_301_cast_fp16, var_303_cast_fp16, var_305_cast_fp16, var_307_cast_fp16, var_309_cast_fp16, var_311_cast_fp16, var_313_cast_fp16, var_315_cast_fp16, var_317_cast_fp16, var_319_cast_fp16, var_321_cast_fp16, var_323_cast_fp16, var_325_cast_fp16, var_327_cast_fp16, var_329_cast_fp16, var_331_cast_fp16, var_333_cast_fp16, var_335_cast_fp16, var_337_cast_fp16, var_339_cast_fp16))[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<string, []> var_348_pad_type_0 = const()[name = tensor<string, []>("op_348_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_348_strides_0 = const()[name = tensor<string, []>("op_348_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_348_pad_0 = const()[name = tensor<string, []>("op_348_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_348_dilations_0 = const()[name = tensor<string, []>("op_348_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_348_groups_0 = const()[name = tensor<string, []>("op_348_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_0_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24500032)))];
            tensor<fp16, [1280]> blocks_0_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27776896)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_348_cast_fp16 = conv(bias = blocks_0_attn_out_bias_to_fp16, dilations = var_348_dilations_0, groups = var_348_groups_0, pad = var_348_pad_0, pad_type = var_348_pad_type_0, strides = var_348_strides_0, weight = blocks_0_attn_out_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("op_348_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = var_348_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> input_7_axes_0 = const()[name = tensor<string, []>("input_7_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_7_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27779520)))];
            tensor<fp16, [1280]> input_7_beta_0_to_fp16 = const()[name = tensor<string, []>("input_7_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27782144)))];
            tensor<fp16, []> var_358_to_fp16 = const()[name = tensor<string, []>("op_358_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_7_cast_fp16 = layer_norm(axes = input_7_axes_0, beta = input_7_beta_0_to_fp16, epsilon = var_358_to_fp16, gamma = input_7_gamma_0_to_fp16, x = inputs_3_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_9_strides_0 = const()[name = tensor<string, []>("input_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_9_dilations_0 = const()[name = tensor<string, []>("input_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_9_groups_0 = const()[name = tensor<string, []>("input_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_0_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27784768)))];
            tensor<fp16, [5120]> blocks_0_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40892032)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_9_cast_fp16 = conv(bias = blocks_0_mlp_0_bias_to_fp16, dilations = input_9_dilations_0, groups = input_9_groups_0, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = input_9_strides_0, weight = blocks_0_mlp_0_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<string, []> input_11_mode_0 = const()[name = tensor<string, []>("input_11_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_11_cast_fp16 = gelu(mode = input_11_mode_0, x = input_9_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<string, []> var_384_pad_type_0 = const()[name = tensor<string, []>("op_384_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_384_strides_0 = const()[name = tensor<string, []>("op_384_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_384_pad_0 = const()[name = tensor<string, []>("op_384_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_384_dilations_0 = const()[name = tensor<string, []>("op_384_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_384_groups_0 = const()[name = tensor<string, []>("op_384_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_0_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40902336)))];
            tensor<fp16, [1280]> blocks_0_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54009600)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_384_cast_fp16 = conv(bias = blocks_0_mlp_2_bias_to_fp16, dilations = var_384_dilations_0, groups = var_384_groups_0, pad = var_384_pad_0, pad_type = var_384_pad_type_0, strides = var_384_strides_0, weight = blocks_0_mlp_2_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("op_384_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = var_384_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, []> var_393 = const()[name = tensor<string, []>("op_393"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_13_axes_0 = const()[name = tensor<string, []>("input_13_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_13_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54012224)))];
            tensor<fp16, [1280]> input_13_beta_0_to_fp16 = const()[name = tensor<string, []>("input_13_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54014848)))];
            tensor<fp16, []> var_409_to_fp16 = const()[name = tensor<string, []>("op_409_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_13_cast_fp16 = layer_norm(axes = input_13_axes_0, beta = input_13_beta_0_to_fp16, epsilon = var_409_to_fp16, gamma = input_13_gamma_0_to_fp16, x = inputs_5_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<string, []> q_3_pad_type_0 = const()[name = tensor<string, []>("q_3_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_3_strides_0 = const()[name = tensor<string, []>("q_3_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_3_pad_0 = const()[name = tensor<string, []>("q_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_3_dilations_0 = const()[name = tensor<string, []>("q_3_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_3_groups_0 = const()[name = tensor<string, []>("q_3_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_444_weight_0_to_fp16 = const()[name = tensor<string, []>("op_444_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54017472)))];
            tensor<fp16, [1280]> var_444_bias_0_to_fp16 = const()[name = tensor<string, []>("op_444_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57294336)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_444_cast_fp16 = conv(bias = var_444_bias_0_to_fp16, dilations = q_3_dilations_0, groups = q_3_groups_0, pad = q_3_pad_0, pad_type = q_3_pad_type_0, strides = q_3_strides_0, weight = var_444_weight_0_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("op_444_cast_fp16")];
            tensor<string, []> k_3_pad_type_0 = const()[name = tensor<string, []>("k_3_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_3_strides_0 = const()[name = tensor<string, []>("k_3_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_3_pad_0 = const()[name = tensor<string, []>("k_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_3_dilations_0 = const()[name = tensor<string, []>("k_3_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_3_groups_0 = const()[name = tensor<string, []>("k_3_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_1_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57296960)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_3_cast_fp16 = conv(dilations = k_3_dilations_0, groups = k_3_groups_0, pad = k_3_pad_0, pad_type = k_3_pad_type_0, strides = k_3_strides_0, weight = blocks_1_attn_key_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("k_3_cast_fp16")];
            tensor<string, []> var_442_pad_type_0 = const()[name = tensor<string, []>("op_442_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_442_strides_0 = const()[name = tensor<string, []>("op_442_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_442_pad_0 = const()[name = tensor<string, []>("op_442_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_442_dilations_0 = const()[name = tensor<string, []>("op_442_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_442_groups_0 = const()[name = tensor<string, []>("op_442_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_1_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60573824)))];
            tensor<fp16, [1280]> blocks_1_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63850688)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_442_cast_fp16 = conv(bias = blocks_1_attn_value_bias_to_fp16, dilations = var_442_dilations_0, groups = var_442_groups_0, pad = var_442_pad_0, pad_type = var_442_pad_type_0, strides = var_442_strides_0, weight = blocks_1_attn_value_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("op_442_cast_fp16")];
            tensor<int32, [20]> tile_3 = const()[name = tensor<string, []>("tile_3"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_445_axis_0 = const()[name = tensor<string, []>("op_445_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_445_cast_fp16_19 = split(axis = var_445_axis_0, split_sizes = tile_3, x = var_444_cast_fp16)[name = tensor<string, []>("op_445_cast_fp16")];
            tensor<int32, [4]> var_466_perm_0 = const()[name = tensor<string, []>("op_466_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_4 = const()[name = tensor<string, []>("tile_4"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_467_axis_0 = const()[name = tensor<string, []>("op_467_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_466_cast_fp16 = transpose(perm = var_466_perm_0, x = k_3_cast_fp16)[name = tensor<string, []>("transpose_31")];
            tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_467_cast_fp16_19 = split(axis = var_467_axis_0, split_sizes = tile_4, x = var_466_cast_fp16)[name = tensor<string, []>("op_467_cast_fp16")];
            tensor<int32, [20]> tile_5 = const()[name = tensor<string, []>("tile_5"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_488_axis_0 = const()[name = tensor<string, []>("op_488_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_488_cast_fp16_19 = split(axis = var_488_axis_0, split_sizes = tile_5, x = var_442_cast_fp16)[name = tensor<string, []>("op_488_cast_fp16")];
            tensor<string, []> aw_41_equation_0 = const()[name = tensor<string, []>("aw_41_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_41_cast_fp16 = einsum(equation = aw_41_equation_0, values = (var_467_cast_fp16_0, var_445_cast_fp16_0))[name = tensor<string, []>("aw_41_cast_fp16")];
            tensor<string, []> aw_43_equation_0 = const()[name = tensor<string, []>("aw_43_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_43_cast_fp16 = einsum(equation = aw_43_equation_0, values = (var_467_cast_fp16_1, var_445_cast_fp16_1))[name = tensor<string, []>("aw_43_cast_fp16")];
            tensor<string, []> aw_45_equation_0 = const()[name = tensor<string, []>("aw_45_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_45_cast_fp16 = einsum(equation = aw_45_equation_0, values = (var_467_cast_fp16_2, var_445_cast_fp16_2))[name = tensor<string, []>("aw_45_cast_fp16")];
            tensor<string, []> aw_47_equation_0 = const()[name = tensor<string, []>("aw_47_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_47_cast_fp16 = einsum(equation = aw_47_equation_0, values = (var_467_cast_fp16_3, var_445_cast_fp16_3))[name = tensor<string, []>("aw_47_cast_fp16")];
            tensor<string, []> aw_49_equation_0 = const()[name = tensor<string, []>("aw_49_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_49_cast_fp16 = einsum(equation = aw_49_equation_0, values = (var_467_cast_fp16_4, var_445_cast_fp16_4))[name = tensor<string, []>("aw_49_cast_fp16")];
            tensor<string, []> aw_51_equation_0 = const()[name = tensor<string, []>("aw_51_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_51_cast_fp16 = einsum(equation = aw_51_equation_0, values = (var_467_cast_fp16_5, var_445_cast_fp16_5))[name = tensor<string, []>("aw_51_cast_fp16")];
            tensor<string, []> aw_53_equation_0 = const()[name = tensor<string, []>("aw_53_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_53_cast_fp16 = einsum(equation = aw_53_equation_0, values = (var_467_cast_fp16_6, var_445_cast_fp16_6))[name = tensor<string, []>("aw_53_cast_fp16")];
            tensor<string, []> aw_55_equation_0 = const()[name = tensor<string, []>("aw_55_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_55_cast_fp16 = einsum(equation = aw_55_equation_0, values = (var_467_cast_fp16_7, var_445_cast_fp16_7))[name = tensor<string, []>("aw_55_cast_fp16")];
            tensor<string, []> aw_57_equation_0 = const()[name = tensor<string, []>("aw_57_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_57_cast_fp16 = einsum(equation = aw_57_equation_0, values = (var_467_cast_fp16_8, var_445_cast_fp16_8))[name = tensor<string, []>("aw_57_cast_fp16")];
            tensor<string, []> aw_59_equation_0 = const()[name = tensor<string, []>("aw_59_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_59_cast_fp16 = einsum(equation = aw_59_equation_0, values = (var_467_cast_fp16_9, var_445_cast_fp16_9))[name = tensor<string, []>("aw_59_cast_fp16")];
            tensor<string, []> aw_61_equation_0 = const()[name = tensor<string, []>("aw_61_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_61_cast_fp16 = einsum(equation = aw_61_equation_0, values = (var_467_cast_fp16_10, var_445_cast_fp16_10))[name = tensor<string, []>("aw_61_cast_fp16")];
            tensor<string, []> aw_63_equation_0 = const()[name = tensor<string, []>("aw_63_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_63_cast_fp16 = einsum(equation = aw_63_equation_0, values = (var_467_cast_fp16_11, var_445_cast_fp16_11))[name = tensor<string, []>("aw_63_cast_fp16")];
            tensor<string, []> aw_65_equation_0 = const()[name = tensor<string, []>("aw_65_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_65_cast_fp16 = einsum(equation = aw_65_equation_0, values = (var_467_cast_fp16_12, var_445_cast_fp16_12))[name = tensor<string, []>("aw_65_cast_fp16")];
            tensor<string, []> aw_67_equation_0 = const()[name = tensor<string, []>("aw_67_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_67_cast_fp16 = einsum(equation = aw_67_equation_0, values = (var_467_cast_fp16_13, var_445_cast_fp16_13))[name = tensor<string, []>("aw_67_cast_fp16")];
            tensor<string, []> aw_69_equation_0 = const()[name = tensor<string, []>("aw_69_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_69_cast_fp16 = einsum(equation = aw_69_equation_0, values = (var_467_cast_fp16_14, var_445_cast_fp16_14))[name = tensor<string, []>("aw_69_cast_fp16")];
            tensor<string, []> aw_71_equation_0 = const()[name = tensor<string, []>("aw_71_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_71_cast_fp16 = einsum(equation = aw_71_equation_0, values = (var_467_cast_fp16_15, var_445_cast_fp16_15))[name = tensor<string, []>("aw_71_cast_fp16")];
            tensor<string, []> aw_73_equation_0 = const()[name = tensor<string, []>("aw_73_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_73_cast_fp16 = einsum(equation = aw_73_equation_0, values = (var_467_cast_fp16_16, var_445_cast_fp16_16))[name = tensor<string, []>("aw_73_cast_fp16")];
            tensor<string, []> aw_75_equation_0 = const()[name = tensor<string, []>("aw_75_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_75_cast_fp16 = einsum(equation = aw_75_equation_0, values = (var_467_cast_fp16_17, var_445_cast_fp16_17))[name = tensor<string, []>("aw_75_cast_fp16")];
            tensor<string, []> aw_77_equation_0 = const()[name = tensor<string, []>("aw_77_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_77_cast_fp16 = einsum(equation = aw_77_equation_0, values = (var_467_cast_fp16_18, var_445_cast_fp16_18))[name = tensor<string, []>("aw_77_cast_fp16")];
            tensor<string, []> aw_79_equation_0 = const()[name = tensor<string, []>("aw_79_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_79_cast_fp16 = einsum(equation = aw_79_equation_0, values = (var_467_cast_fp16_19, var_445_cast_fp16_19))[name = tensor<string, []>("aw_79_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_549_cast_fp16 = softmax(axis = var_393, x = aw_41_cast_fp16)[name = tensor<string, []>("op_549_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_550_cast_fp16 = softmax(axis = var_393, x = aw_43_cast_fp16)[name = tensor<string, []>("op_550_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_551_cast_fp16 = softmax(axis = var_393, x = aw_45_cast_fp16)[name = tensor<string, []>("op_551_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_552_cast_fp16 = softmax(axis = var_393, x = aw_47_cast_fp16)[name = tensor<string, []>("op_552_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_553_cast_fp16 = softmax(axis = var_393, x = aw_49_cast_fp16)[name = tensor<string, []>("op_553_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_554_cast_fp16 = softmax(axis = var_393, x = aw_51_cast_fp16)[name = tensor<string, []>("op_554_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_555_cast_fp16 = softmax(axis = var_393, x = aw_53_cast_fp16)[name = tensor<string, []>("op_555_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_556_cast_fp16 = softmax(axis = var_393, x = aw_55_cast_fp16)[name = tensor<string, []>("op_556_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_557_cast_fp16 = softmax(axis = var_393, x = aw_57_cast_fp16)[name = tensor<string, []>("op_557_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_558_cast_fp16 = softmax(axis = var_393, x = aw_59_cast_fp16)[name = tensor<string, []>("op_558_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_559_cast_fp16 = softmax(axis = var_393, x = aw_61_cast_fp16)[name = tensor<string, []>("op_559_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_560_cast_fp16 = softmax(axis = var_393, x = aw_63_cast_fp16)[name = tensor<string, []>("op_560_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_561_cast_fp16 = softmax(axis = var_393, x = aw_65_cast_fp16)[name = tensor<string, []>("op_561_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_562_cast_fp16 = softmax(axis = var_393, x = aw_67_cast_fp16)[name = tensor<string, []>("op_562_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_563_cast_fp16 = softmax(axis = var_393, x = aw_69_cast_fp16)[name = tensor<string, []>("op_563_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_564_cast_fp16 = softmax(axis = var_393, x = aw_71_cast_fp16)[name = tensor<string, []>("op_564_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_565_cast_fp16 = softmax(axis = var_393, x = aw_73_cast_fp16)[name = tensor<string, []>("op_565_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_566_cast_fp16 = softmax(axis = var_393, x = aw_75_cast_fp16)[name = tensor<string, []>("op_566_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_567_cast_fp16 = softmax(axis = var_393, x = aw_77_cast_fp16)[name = tensor<string, []>("op_567_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_568_cast_fp16 = softmax(axis = var_393, x = aw_79_cast_fp16)[name = tensor<string, []>("op_568_cast_fp16")];
            tensor<string, []> var_570_equation_0 = const()[name = tensor<string, []>("op_570_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_570_cast_fp16 = einsum(equation = var_570_equation_0, values = (var_488_cast_fp16_0, var_549_cast_fp16))[name = tensor<string, []>("op_570_cast_fp16")];
            tensor<string, []> var_572_equation_0 = const()[name = tensor<string, []>("op_572_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_572_cast_fp16 = einsum(equation = var_572_equation_0, values = (var_488_cast_fp16_1, var_550_cast_fp16))[name = tensor<string, []>("op_572_cast_fp16")];
            tensor<string, []> var_574_equation_0 = const()[name = tensor<string, []>("op_574_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_574_cast_fp16 = einsum(equation = var_574_equation_0, values = (var_488_cast_fp16_2, var_551_cast_fp16))[name = tensor<string, []>("op_574_cast_fp16")];
            tensor<string, []> var_576_equation_0 = const()[name = tensor<string, []>("op_576_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_576_cast_fp16 = einsum(equation = var_576_equation_0, values = (var_488_cast_fp16_3, var_552_cast_fp16))[name = tensor<string, []>("op_576_cast_fp16")];
            tensor<string, []> var_578_equation_0 = const()[name = tensor<string, []>("op_578_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_578_cast_fp16 = einsum(equation = var_578_equation_0, values = (var_488_cast_fp16_4, var_553_cast_fp16))[name = tensor<string, []>("op_578_cast_fp16")];
            tensor<string, []> var_580_equation_0 = const()[name = tensor<string, []>("op_580_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_580_cast_fp16 = einsum(equation = var_580_equation_0, values = (var_488_cast_fp16_5, var_554_cast_fp16))[name = tensor<string, []>("op_580_cast_fp16")];
            tensor<string, []> var_582_equation_0 = const()[name = tensor<string, []>("op_582_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_582_cast_fp16 = einsum(equation = var_582_equation_0, values = (var_488_cast_fp16_6, var_555_cast_fp16))[name = tensor<string, []>("op_582_cast_fp16")];
            tensor<string, []> var_584_equation_0 = const()[name = tensor<string, []>("op_584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_584_cast_fp16 = einsum(equation = var_584_equation_0, values = (var_488_cast_fp16_7, var_556_cast_fp16))[name = tensor<string, []>("op_584_cast_fp16")];
            tensor<string, []> var_586_equation_0 = const()[name = tensor<string, []>("op_586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_586_cast_fp16 = einsum(equation = var_586_equation_0, values = (var_488_cast_fp16_8, var_557_cast_fp16))[name = tensor<string, []>("op_586_cast_fp16")];
            tensor<string, []> var_588_equation_0 = const()[name = tensor<string, []>("op_588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_588_cast_fp16 = einsum(equation = var_588_equation_0, values = (var_488_cast_fp16_9, var_558_cast_fp16))[name = tensor<string, []>("op_588_cast_fp16")];
            tensor<string, []> var_590_equation_0 = const()[name = tensor<string, []>("op_590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_590_cast_fp16 = einsum(equation = var_590_equation_0, values = (var_488_cast_fp16_10, var_559_cast_fp16))[name = tensor<string, []>("op_590_cast_fp16")];
            tensor<string, []> var_592_equation_0 = const()[name = tensor<string, []>("op_592_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_592_cast_fp16 = einsum(equation = var_592_equation_0, values = (var_488_cast_fp16_11, var_560_cast_fp16))[name = tensor<string, []>("op_592_cast_fp16")];
            tensor<string, []> var_594_equation_0 = const()[name = tensor<string, []>("op_594_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_594_cast_fp16 = einsum(equation = var_594_equation_0, values = (var_488_cast_fp16_12, var_561_cast_fp16))[name = tensor<string, []>("op_594_cast_fp16")];
            tensor<string, []> var_596_equation_0 = const()[name = tensor<string, []>("op_596_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_596_cast_fp16 = einsum(equation = var_596_equation_0, values = (var_488_cast_fp16_13, var_562_cast_fp16))[name = tensor<string, []>("op_596_cast_fp16")];
            tensor<string, []> var_598_equation_0 = const()[name = tensor<string, []>("op_598_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_598_cast_fp16 = einsum(equation = var_598_equation_0, values = (var_488_cast_fp16_14, var_563_cast_fp16))[name = tensor<string, []>("op_598_cast_fp16")];
            tensor<string, []> var_600_equation_0 = const()[name = tensor<string, []>("op_600_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_600_cast_fp16 = einsum(equation = var_600_equation_0, values = (var_488_cast_fp16_15, var_564_cast_fp16))[name = tensor<string, []>("op_600_cast_fp16")];
            tensor<string, []> var_602_equation_0 = const()[name = tensor<string, []>("op_602_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_602_cast_fp16 = einsum(equation = var_602_equation_0, values = (var_488_cast_fp16_16, var_565_cast_fp16))[name = tensor<string, []>("op_602_cast_fp16")];
            tensor<string, []> var_604_equation_0 = const()[name = tensor<string, []>("op_604_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_604_cast_fp16 = einsum(equation = var_604_equation_0, values = (var_488_cast_fp16_17, var_566_cast_fp16))[name = tensor<string, []>("op_604_cast_fp16")];
            tensor<string, []> var_606_equation_0 = const()[name = tensor<string, []>("op_606_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_606_cast_fp16 = einsum(equation = var_606_equation_0, values = (var_488_cast_fp16_18, var_567_cast_fp16))[name = tensor<string, []>("op_606_cast_fp16")];
            tensor<string, []> var_608_equation_0 = const()[name = tensor<string, []>("op_608_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_608_cast_fp16 = einsum(equation = var_608_equation_0, values = (var_488_cast_fp16_19, var_568_cast_fp16))[name = tensor<string, []>("op_608_cast_fp16")];
            tensor<bool, []> input_15_interleave_0 = const()[name = tensor<string, []>("input_15_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_15_cast_fp16 = concat(axis = var_393, interleave = input_15_interleave_0, values = (var_570_cast_fp16, var_572_cast_fp16, var_574_cast_fp16, var_576_cast_fp16, var_578_cast_fp16, var_580_cast_fp16, var_582_cast_fp16, var_584_cast_fp16, var_586_cast_fp16, var_588_cast_fp16, var_590_cast_fp16, var_592_cast_fp16, var_594_cast_fp16, var_596_cast_fp16, var_598_cast_fp16, var_600_cast_fp16, var_602_cast_fp16, var_604_cast_fp16, var_606_cast_fp16, var_608_cast_fp16))[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<string, []> var_617_pad_type_0 = const()[name = tensor<string, []>("op_617_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_617_strides_0 = const()[name = tensor<string, []>("op_617_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_617_pad_0 = const()[name = tensor<string, []>("op_617_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_617_dilations_0 = const()[name = tensor<string, []>("op_617_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_617_groups_0 = const()[name = tensor<string, []>("op_617_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_1_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63853312)))];
            tensor<fp16, [1280]> blocks_1_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67130176)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_617_cast_fp16 = conv(bias = blocks_1_attn_out_bias_to_fp16, dilations = var_617_dilations_0, groups = var_617_groups_0, pad = var_617_pad_0, pad_type = var_617_pad_type_0, strides = var_617_strides_0, weight = blocks_1_attn_out_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("op_617_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = var_617_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, [1]> input_17_axes_0 = const()[name = tensor<string, []>("input_17_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_17_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67132800)))];
            tensor<fp16, [1280]> input_17_beta_0_to_fp16 = const()[name = tensor<string, []>("input_17_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67135424)))];
            tensor<fp16, []> var_627_to_fp16 = const()[name = tensor<string, []>("op_627_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_17_cast_fp16 = layer_norm(axes = input_17_axes_0, beta = input_17_beta_0_to_fp16, epsilon = var_627_to_fp16, gamma = input_17_gamma_0_to_fp16, x = inputs_7_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_pad_type_0 = const()[name = tensor<string, []>("input_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_19_strides_0 = const()[name = tensor<string, []>("input_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_19_pad_0 = const()[name = tensor<string, []>("input_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_19_dilations_0 = const()[name = tensor<string, []>("input_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_19_groups_0 = const()[name = tensor<string, []>("input_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_1_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67138048)))];
            tensor<fp16, [5120]> blocks_1_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80245312)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_19_cast_fp16 = conv(bias = blocks_1_mlp_0_bias_to_fp16, dilations = input_19_dilations_0, groups = input_19_groups_0, pad = input_19_pad_0, pad_type = input_19_pad_type_0, strides = input_19_strides_0, weight = blocks_1_mlp_0_weight_to_fp16, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<string, []> input_21_mode_0 = const()[name = tensor<string, []>("input_21_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_21_cast_fp16 = gelu(mode = input_21_mode_0, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<string, []> var_653_pad_type_0 = const()[name = tensor<string, []>("op_653_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_653_strides_0 = const()[name = tensor<string, []>("op_653_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_653_pad_0 = const()[name = tensor<string, []>("op_653_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_653_dilations_0 = const()[name = tensor<string, []>("op_653_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_653_groups_0 = const()[name = tensor<string, []>("op_653_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_1_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80255616)))];
            tensor<fp16, [1280]> blocks_1_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93362880)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_653_cast_fp16 = conv(bias = blocks_1_mlp_2_bias_to_fp16, dilations = var_653_dilations_0, groups = var_653_groups_0, pad = var_653_pad_0, pad_type = var_653_pad_type_0, strides = var_653_strides_0, weight = blocks_1_mlp_2_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("op_653_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = var_653_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, []> var_662 = const()[name = tensor<string, []>("op_662"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_23_axes_0 = const()[name = tensor<string, []>("input_23_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_23_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93365504)))];
            tensor<fp16, [1280]> input_23_beta_0_to_fp16 = const()[name = tensor<string, []>("input_23_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93368128)))];
            tensor<fp16, []> var_678_to_fp16 = const()[name = tensor<string, []>("op_678_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_23_cast_fp16 = layer_norm(axes = input_23_axes_0, beta = input_23_beta_0_to_fp16, epsilon = var_678_to_fp16, gamma = input_23_gamma_0_to_fp16, x = inputs_9_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<string, []> q_5_pad_type_0 = const()[name = tensor<string, []>("q_5_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_5_strides_0 = const()[name = tensor<string, []>("q_5_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_5_pad_0 = const()[name = tensor<string, []>("q_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_5_dilations_0 = const()[name = tensor<string, []>("q_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_5_groups_0 = const()[name = tensor<string, []>("q_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_713_weight_0_to_fp16 = const()[name = tensor<string, []>("op_713_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93370752)))];
            tensor<fp16, [1280]> var_713_bias_0_to_fp16 = const()[name = tensor<string, []>("op_713_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96647616)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_713_cast_fp16 = conv(bias = var_713_bias_0_to_fp16, dilations = q_5_dilations_0, groups = q_5_groups_0, pad = q_5_pad_0, pad_type = q_5_pad_type_0, strides = q_5_strides_0, weight = var_713_weight_0_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("op_713_cast_fp16")];
            tensor<string, []> k_5_pad_type_0 = const()[name = tensor<string, []>("k_5_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_5_strides_0 = const()[name = tensor<string, []>("k_5_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_5_pad_0 = const()[name = tensor<string, []>("k_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_5_dilations_0 = const()[name = tensor<string, []>("k_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_5_groups_0 = const()[name = tensor<string, []>("k_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_2_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96650240)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_5_cast_fp16 = conv(dilations = k_5_dilations_0, groups = k_5_groups_0, pad = k_5_pad_0, pad_type = k_5_pad_type_0, strides = k_5_strides_0, weight = blocks_2_attn_key_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("k_5_cast_fp16")];
            tensor<string, []> var_711_pad_type_0 = const()[name = tensor<string, []>("op_711_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_711_strides_0 = const()[name = tensor<string, []>("op_711_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_711_pad_0 = const()[name = tensor<string, []>("op_711_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_711_dilations_0 = const()[name = tensor<string, []>("op_711_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_711_groups_0 = const()[name = tensor<string, []>("op_711_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_2_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99927104)))];
            tensor<fp16, [1280]> blocks_2_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103203968)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_711_cast_fp16 = conv(bias = blocks_2_attn_value_bias_to_fp16, dilations = var_711_dilations_0, groups = var_711_groups_0, pad = var_711_pad_0, pad_type = var_711_pad_type_0, strides = var_711_strides_0, weight = blocks_2_attn_value_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("op_711_cast_fp16")];
            tensor<int32, [20]> tile_6 = const()[name = tensor<string, []>("tile_6"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_714_axis_0 = const()[name = tensor<string, []>("op_714_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_714_cast_fp16_19 = split(axis = var_714_axis_0, split_sizes = tile_6, x = var_713_cast_fp16)[name = tensor<string, []>("op_714_cast_fp16")];
            tensor<int32, [4]> var_735_perm_0 = const()[name = tensor<string, []>("op_735_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_7 = const()[name = tensor<string, []>("tile_7"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_736_axis_0 = const()[name = tensor<string, []>("op_736_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_735_cast_fp16 = transpose(perm = var_735_perm_0, x = k_5_cast_fp16)[name = tensor<string, []>("transpose_30")];
            tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_736_cast_fp16_19 = split(axis = var_736_axis_0, split_sizes = tile_7, x = var_735_cast_fp16)[name = tensor<string, []>("op_736_cast_fp16")];
            tensor<int32, [20]> tile_8 = const()[name = tensor<string, []>("tile_8"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_757_axis_0 = const()[name = tensor<string, []>("op_757_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16_19 = split(axis = var_757_axis_0, split_sizes = tile_8, x = var_711_cast_fp16)[name = tensor<string, []>("op_757_cast_fp16")];
            tensor<string, []> aw_81_equation_0 = const()[name = tensor<string, []>("aw_81_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_81_cast_fp16 = einsum(equation = aw_81_equation_0, values = (var_736_cast_fp16_0, var_714_cast_fp16_0))[name = tensor<string, []>("aw_81_cast_fp16")];
            tensor<string, []> aw_83_equation_0 = const()[name = tensor<string, []>("aw_83_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_83_cast_fp16 = einsum(equation = aw_83_equation_0, values = (var_736_cast_fp16_1, var_714_cast_fp16_1))[name = tensor<string, []>("aw_83_cast_fp16")];
            tensor<string, []> aw_85_equation_0 = const()[name = tensor<string, []>("aw_85_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_85_cast_fp16 = einsum(equation = aw_85_equation_0, values = (var_736_cast_fp16_2, var_714_cast_fp16_2))[name = tensor<string, []>("aw_85_cast_fp16")];
            tensor<string, []> aw_87_equation_0 = const()[name = tensor<string, []>("aw_87_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_87_cast_fp16 = einsum(equation = aw_87_equation_0, values = (var_736_cast_fp16_3, var_714_cast_fp16_3))[name = tensor<string, []>("aw_87_cast_fp16")];
            tensor<string, []> aw_89_equation_0 = const()[name = tensor<string, []>("aw_89_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_89_cast_fp16 = einsum(equation = aw_89_equation_0, values = (var_736_cast_fp16_4, var_714_cast_fp16_4))[name = tensor<string, []>("aw_89_cast_fp16")];
            tensor<string, []> aw_91_equation_0 = const()[name = tensor<string, []>("aw_91_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_91_cast_fp16 = einsum(equation = aw_91_equation_0, values = (var_736_cast_fp16_5, var_714_cast_fp16_5))[name = tensor<string, []>("aw_91_cast_fp16")];
            tensor<string, []> aw_93_equation_0 = const()[name = tensor<string, []>("aw_93_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_93_cast_fp16 = einsum(equation = aw_93_equation_0, values = (var_736_cast_fp16_6, var_714_cast_fp16_6))[name = tensor<string, []>("aw_93_cast_fp16")];
            tensor<string, []> aw_95_equation_0 = const()[name = tensor<string, []>("aw_95_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_95_cast_fp16 = einsum(equation = aw_95_equation_0, values = (var_736_cast_fp16_7, var_714_cast_fp16_7))[name = tensor<string, []>("aw_95_cast_fp16")];
            tensor<string, []> aw_97_equation_0 = const()[name = tensor<string, []>("aw_97_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_97_cast_fp16 = einsum(equation = aw_97_equation_0, values = (var_736_cast_fp16_8, var_714_cast_fp16_8))[name = tensor<string, []>("aw_97_cast_fp16")];
            tensor<string, []> aw_99_equation_0 = const()[name = tensor<string, []>("aw_99_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_99_cast_fp16 = einsum(equation = aw_99_equation_0, values = (var_736_cast_fp16_9, var_714_cast_fp16_9))[name = tensor<string, []>("aw_99_cast_fp16")];
            tensor<string, []> aw_101_equation_0 = const()[name = tensor<string, []>("aw_101_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_101_cast_fp16 = einsum(equation = aw_101_equation_0, values = (var_736_cast_fp16_10, var_714_cast_fp16_10))[name = tensor<string, []>("aw_101_cast_fp16")];
            tensor<string, []> aw_103_equation_0 = const()[name = tensor<string, []>("aw_103_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_103_cast_fp16 = einsum(equation = aw_103_equation_0, values = (var_736_cast_fp16_11, var_714_cast_fp16_11))[name = tensor<string, []>("aw_103_cast_fp16")];
            tensor<string, []> aw_105_equation_0 = const()[name = tensor<string, []>("aw_105_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_105_cast_fp16 = einsum(equation = aw_105_equation_0, values = (var_736_cast_fp16_12, var_714_cast_fp16_12))[name = tensor<string, []>("aw_105_cast_fp16")];
            tensor<string, []> aw_107_equation_0 = const()[name = tensor<string, []>("aw_107_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_107_cast_fp16 = einsum(equation = aw_107_equation_0, values = (var_736_cast_fp16_13, var_714_cast_fp16_13))[name = tensor<string, []>("aw_107_cast_fp16")];
            tensor<string, []> aw_109_equation_0 = const()[name = tensor<string, []>("aw_109_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_109_cast_fp16 = einsum(equation = aw_109_equation_0, values = (var_736_cast_fp16_14, var_714_cast_fp16_14))[name = tensor<string, []>("aw_109_cast_fp16")];
            tensor<string, []> aw_111_equation_0 = const()[name = tensor<string, []>("aw_111_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_111_cast_fp16 = einsum(equation = aw_111_equation_0, values = (var_736_cast_fp16_15, var_714_cast_fp16_15))[name = tensor<string, []>("aw_111_cast_fp16")];
            tensor<string, []> aw_113_equation_0 = const()[name = tensor<string, []>("aw_113_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_113_cast_fp16 = einsum(equation = aw_113_equation_0, values = (var_736_cast_fp16_16, var_714_cast_fp16_16))[name = tensor<string, []>("aw_113_cast_fp16")];
            tensor<string, []> aw_115_equation_0 = const()[name = tensor<string, []>("aw_115_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_115_cast_fp16 = einsum(equation = aw_115_equation_0, values = (var_736_cast_fp16_17, var_714_cast_fp16_17))[name = tensor<string, []>("aw_115_cast_fp16")];
            tensor<string, []> aw_117_equation_0 = const()[name = tensor<string, []>("aw_117_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_117_cast_fp16 = einsum(equation = aw_117_equation_0, values = (var_736_cast_fp16_18, var_714_cast_fp16_18))[name = tensor<string, []>("aw_117_cast_fp16")];
            tensor<string, []> aw_119_equation_0 = const()[name = tensor<string, []>("aw_119_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_119_cast_fp16 = einsum(equation = aw_119_equation_0, values = (var_736_cast_fp16_19, var_714_cast_fp16_19))[name = tensor<string, []>("aw_119_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_818_cast_fp16 = softmax(axis = var_662, x = aw_81_cast_fp16)[name = tensor<string, []>("op_818_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_819_cast_fp16 = softmax(axis = var_662, x = aw_83_cast_fp16)[name = tensor<string, []>("op_819_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_820_cast_fp16 = softmax(axis = var_662, x = aw_85_cast_fp16)[name = tensor<string, []>("op_820_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_821_cast_fp16 = softmax(axis = var_662, x = aw_87_cast_fp16)[name = tensor<string, []>("op_821_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_822_cast_fp16 = softmax(axis = var_662, x = aw_89_cast_fp16)[name = tensor<string, []>("op_822_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_823_cast_fp16 = softmax(axis = var_662, x = aw_91_cast_fp16)[name = tensor<string, []>("op_823_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_824_cast_fp16 = softmax(axis = var_662, x = aw_93_cast_fp16)[name = tensor<string, []>("op_824_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_825_cast_fp16 = softmax(axis = var_662, x = aw_95_cast_fp16)[name = tensor<string, []>("op_825_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_826_cast_fp16 = softmax(axis = var_662, x = aw_97_cast_fp16)[name = tensor<string, []>("op_826_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_827_cast_fp16 = softmax(axis = var_662, x = aw_99_cast_fp16)[name = tensor<string, []>("op_827_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_828_cast_fp16 = softmax(axis = var_662, x = aw_101_cast_fp16)[name = tensor<string, []>("op_828_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_829_cast_fp16 = softmax(axis = var_662, x = aw_103_cast_fp16)[name = tensor<string, []>("op_829_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_830_cast_fp16 = softmax(axis = var_662, x = aw_105_cast_fp16)[name = tensor<string, []>("op_830_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_831_cast_fp16 = softmax(axis = var_662, x = aw_107_cast_fp16)[name = tensor<string, []>("op_831_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_832_cast_fp16 = softmax(axis = var_662, x = aw_109_cast_fp16)[name = tensor<string, []>("op_832_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_833_cast_fp16 = softmax(axis = var_662, x = aw_111_cast_fp16)[name = tensor<string, []>("op_833_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_834_cast_fp16 = softmax(axis = var_662, x = aw_113_cast_fp16)[name = tensor<string, []>("op_834_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_835_cast_fp16 = softmax(axis = var_662, x = aw_115_cast_fp16)[name = tensor<string, []>("op_835_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_836_cast_fp16 = softmax(axis = var_662, x = aw_117_cast_fp16)[name = tensor<string, []>("op_836_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_837_cast_fp16 = softmax(axis = var_662, x = aw_119_cast_fp16)[name = tensor<string, []>("op_837_cast_fp16")];
            tensor<string, []> var_839_equation_0 = const()[name = tensor<string, []>("op_839_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_839_cast_fp16 = einsum(equation = var_839_equation_0, values = (var_757_cast_fp16_0, var_818_cast_fp16))[name = tensor<string, []>("op_839_cast_fp16")];
            tensor<string, []> var_841_equation_0 = const()[name = tensor<string, []>("op_841_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_841_cast_fp16 = einsum(equation = var_841_equation_0, values = (var_757_cast_fp16_1, var_819_cast_fp16))[name = tensor<string, []>("op_841_cast_fp16")];
            tensor<string, []> var_843_equation_0 = const()[name = tensor<string, []>("op_843_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_843_cast_fp16 = einsum(equation = var_843_equation_0, values = (var_757_cast_fp16_2, var_820_cast_fp16))[name = tensor<string, []>("op_843_cast_fp16")];
            tensor<string, []> var_845_equation_0 = const()[name = tensor<string, []>("op_845_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_845_cast_fp16 = einsum(equation = var_845_equation_0, values = (var_757_cast_fp16_3, var_821_cast_fp16))[name = tensor<string, []>("op_845_cast_fp16")];
            tensor<string, []> var_847_equation_0 = const()[name = tensor<string, []>("op_847_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_847_cast_fp16 = einsum(equation = var_847_equation_0, values = (var_757_cast_fp16_4, var_822_cast_fp16))[name = tensor<string, []>("op_847_cast_fp16")];
            tensor<string, []> var_849_equation_0 = const()[name = tensor<string, []>("op_849_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_849_cast_fp16 = einsum(equation = var_849_equation_0, values = (var_757_cast_fp16_5, var_823_cast_fp16))[name = tensor<string, []>("op_849_cast_fp16")];
            tensor<string, []> var_851_equation_0 = const()[name = tensor<string, []>("op_851_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_851_cast_fp16 = einsum(equation = var_851_equation_0, values = (var_757_cast_fp16_6, var_824_cast_fp16))[name = tensor<string, []>("op_851_cast_fp16")];
            tensor<string, []> var_853_equation_0 = const()[name = tensor<string, []>("op_853_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_853_cast_fp16 = einsum(equation = var_853_equation_0, values = (var_757_cast_fp16_7, var_825_cast_fp16))[name = tensor<string, []>("op_853_cast_fp16")];
            tensor<string, []> var_855_equation_0 = const()[name = tensor<string, []>("op_855_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_855_cast_fp16 = einsum(equation = var_855_equation_0, values = (var_757_cast_fp16_8, var_826_cast_fp16))[name = tensor<string, []>("op_855_cast_fp16")];
            tensor<string, []> var_857_equation_0 = const()[name = tensor<string, []>("op_857_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_857_cast_fp16 = einsum(equation = var_857_equation_0, values = (var_757_cast_fp16_9, var_827_cast_fp16))[name = tensor<string, []>("op_857_cast_fp16")];
            tensor<string, []> var_859_equation_0 = const()[name = tensor<string, []>("op_859_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_859_cast_fp16 = einsum(equation = var_859_equation_0, values = (var_757_cast_fp16_10, var_828_cast_fp16))[name = tensor<string, []>("op_859_cast_fp16")];
            tensor<string, []> var_861_equation_0 = const()[name = tensor<string, []>("op_861_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_861_cast_fp16 = einsum(equation = var_861_equation_0, values = (var_757_cast_fp16_11, var_829_cast_fp16))[name = tensor<string, []>("op_861_cast_fp16")];
            tensor<string, []> var_863_equation_0 = const()[name = tensor<string, []>("op_863_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_863_cast_fp16 = einsum(equation = var_863_equation_0, values = (var_757_cast_fp16_12, var_830_cast_fp16))[name = tensor<string, []>("op_863_cast_fp16")];
            tensor<string, []> var_865_equation_0 = const()[name = tensor<string, []>("op_865_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_865_cast_fp16 = einsum(equation = var_865_equation_0, values = (var_757_cast_fp16_13, var_831_cast_fp16))[name = tensor<string, []>("op_865_cast_fp16")];
            tensor<string, []> var_867_equation_0 = const()[name = tensor<string, []>("op_867_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_867_cast_fp16 = einsum(equation = var_867_equation_0, values = (var_757_cast_fp16_14, var_832_cast_fp16))[name = tensor<string, []>("op_867_cast_fp16")];
            tensor<string, []> var_869_equation_0 = const()[name = tensor<string, []>("op_869_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_869_cast_fp16 = einsum(equation = var_869_equation_0, values = (var_757_cast_fp16_15, var_833_cast_fp16))[name = tensor<string, []>("op_869_cast_fp16")];
            tensor<string, []> var_871_equation_0 = const()[name = tensor<string, []>("op_871_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16 = einsum(equation = var_871_equation_0, values = (var_757_cast_fp16_16, var_834_cast_fp16))[name = tensor<string, []>("op_871_cast_fp16")];
            tensor<string, []> var_873_equation_0 = const()[name = tensor<string, []>("op_873_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_873_cast_fp16 = einsum(equation = var_873_equation_0, values = (var_757_cast_fp16_17, var_835_cast_fp16))[name = tensor<string, []>("op_873_cast_fp16")];
            tensor<string, []> var_875_equation_0 = const()[name = tensor<string, []>("op_875_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_875_cast_fp16 = einsum(equation = var_875_equation_0, values = (var_757_cast_fp16_18, var_836_cast_fp16))[name = tensor<string, []>("op_875_cast_fp16")];
            tensor<string, []> var_877_equation_0 = const()[name = tensor<string, []>("op_877_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_877_cast_fp16 = einsum(equation = var_877_equation_0, values = (var_757_cast_fp16_19, var_837_cast_fp16))[name = tensor<string, []>("op_877_cast_fp16")];
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_25_cast_fp16 = concat(axis = var_662, interleave = input_25_interleave_0, values = (var_839_cast_fp16, var_841_cast_fp16, var_843_cast_fp16, var_845_cast_fp16, var_847_cast_fp16, var_849_cast_fp16, var_851_cast_fp16, var_853_cast_fp16, var_855_cast_fp16, var_857_cast_fp16, var_859_cast_fp16, var_861_cast_fp16, var_863_cast_fp16, var_865_cast_fp16, var_867_cast_fp16, var_869_cast_fp16, var_871_cast_fp16, var_873_cast_fp16, var_875_cast_fp16, var_877_cast_fp16))[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<string, []> var_886_pad_type_0 = const()[name = tensor<string, []>("op_886_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_886_strides_0 = const()[name = tensor<string, []>("op_886_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_886_pad_0 = const()[name = tensor<string, []>("op_886_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_886_dilations_0 = const()[name = tensor<string, []>("op_886_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_886_groups_0 = const()[name = tensor<string, []>("op_886_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_2_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103206592)))];
            tensor<fp16, [1280]> blocks_2_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106483456)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_886_cast_fp16 = conv(bias = blocks_2_attn_out_bias_to_fp16, dilations = var_886_dilations_0, groups = var_886_groups_0, pad = var_886_pad_0, pad_type = var_886_pad_type_0, strides = var_886_strides_0, weight = blocks_2_attn_out_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("op_886_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = var_886_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> input_27_axes_0 = const()[name = tensor<string, []>("input_27_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_27_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106486080)))];
            tensor<fp16, [1280]> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106488704)))];
            tensor<fp16, []> var_896_to_fp16 = const()[name = tensor<string, []>("op_896_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_27_cast_fp16 = layer_norm(axes = input_27_axes_0, beta = input_27_beta_0_to_fp16, epsilon = var_896_to_fp16, gamma = input_27_gamma_0_to_fp16, x = inputs_11_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_29_strides_0 = const()[name = tensor<string, []>("input_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_29_dilations_0 = const()[name = tensor<string, []>("input_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_29_groups_0 = const()[name = tensor<string, []>("input_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_2_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106491328)))];
            tensor<fp16, [5120]> blocks_2_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119598592)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_29_cast_fp16 = conv(bias = blocks_2_mlp_0_bias_to_fp16, dilations = input_29_dilations_0, groups = input_29_groups_0, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = input_29_strides_0, weight = blocks_2_mlp_0_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<string, []> input_31_mode_0 = const()[name = tensor<string, []>("input_31_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_31_cast_fp16 = gelu(mode = input_31_mode_0, x = input_29_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<string, []> var_922_pad_type_0 = const()[name = tensor<string, []>("op_922_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_922_strides_0 = const()[name = tensor<string, []>("op_922_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_922_pad_0 = const()[name = tensor<string, []>("op_922_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_922_dilations_0 = const()[name = tensor<string, []>("op_922_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_922_groups_0 = const()[name = tensor<string, []>("op_922_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_2_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119608896)))];
            tensor<fp16, [1280]> blocks_2_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132716160)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_922_cast_fp16 = conv(bias = blocks_2_mlp_2_bias_to_fp16, dilations = var_922_dilations_0, groups = var_922_groups_0, pad = var_922_pad_0, pad_type = var_922_pad_type_0, strides = var_922_strides_0, weight = blocks_2_mlp_2_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("op_922_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = var_922_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_33_axes_0 = const()[name = tensor<string, []>("input_33_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_33_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132718784)))];
            tensor<fp16, [1280]> input_33_beta_0_to_fp16 = const()[name = tensor<string, []>("input_33_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132721408)))];
            tensor<fp16, []> var_947_to_fp16 = const()[name = tensor<string, []>("op_947_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_33_cast_fp16 = layer_norm(axes = input_33_axes_0, beta = input_33_beta_0_to_fp16, epsilon = var_947_to_fp16, gamma = input_33_gamma_0_to_fp16, x = inputs_13_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<string, []> q_7_pad_type_0 = const()[name = tensor<string, []>("q_7_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_7_strides_0 = const()[name = tensor<string, []>("q_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_7_pad_0 = const()[name = tensor<string, []>("q_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_7_dilations_0 = const()[name = tensor<string, []>("q_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_7_groups_0 = const()[name = tensor<string, []>("q_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_982_weight_0_to_fp16 = const()[name = tensor<string, []>("op_982_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132724032)))];
            tensor<fp16, [1280]> var_982_bias_0_to_fp16 = const()[name = tensor<string, []>("op_982_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(136000896)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_982_cast_fp16 = conv(bias = var_982_bias_0_to_fp16, dilations = q_7_dilations_0, groups = q_7_groups_0, pad = q_7_pad_0, pad_type = q_7_pad_type_0, strides = q_7_strides_0, weight = var_982_weight_0_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("op_982_cast_fp16")];
            tensor<string, []> k_7_pad_type_0 = const()[name = tensor<string, []>("k_7_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_7_strides_0 = const()[name = tensor<string, []>("k_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_7_pad_0 = const()[name = tensor<string, []>("k_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_7_dilations_0 = const()[name = tensor<string, []>("k_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_7_groups_0 = const()[name = tensor<string, []>("k_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_3_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(136003520)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_7_cast_fp16 = conv(dilations = k_7_dilations_0, groups = k_7_groups_0, pad = k_7_pad_0, pad_type = k_7_pad_type_0, strides = k_7_strides_0, weight = blocks_3_attn_key_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("k_7_cast_fp16")];
            tensor<string, []> var_980_pad_type_0 = const()[name = tensor<string, []>("op_980_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_980_strides_0 = const()[name = tensor<string, []>("op_980_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_980_pad_0 = const()[name = tensor<string, []>("op_980_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_980_dilations_0 = const()[name = tensor<string, []>("op_980_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_980_groups_0 = const()[name = tensor<string, []>("op_980_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_3_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(139280384)))];
            tensor<fp16, [1280]> blocks_3_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142557248)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_980_cast_fp16 = conv(bias = blocks_3_attn_value_bias_to_fp16, dilations = var_980_dilations_0, groups = var_980_groups_0, pad = var_980_pad_0, pad_type = var_980_pad_type_0, strides = var_980_strides_0, weight = blocks_3_attn_value_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("op_980_cast_fp16")];
            tensor<int32, [20]> tile_9 = const()[name = tensor<string, []>("tile_9"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_983_axis_0 = const()[name = tensor<string, []>("op_983_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_983_cast_fp16_19 = split(axis = var_983_axis_0, split_sizes = tile_9, x = var_982_cast_fp16)[name = tensor<string, []>("op_983_cast_fp16")];
            tensor<int32, [4]> var_1004_perm_0 = const()[name = tensor<string, []>("op_1004_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_10 = const()[name = tensor<string, []>("tile_10"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1005_axis_0 = const()[name = tensor<string, []>("op_1005_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_1004_cast_fp16 = transpose(perm = var_1004_perm_0, x = k_7_cast_fp16)[name = tensor<string, []>("transpose_29")];
            tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_1005_cast_fp16_19 = split(axis = var_1005_axis_0, split_sizes = tile_10, x = var_1004_cast_fp16)[name = tensor<string, []>("op_1005_cast_fp16")];
            tensor<int32, [20]> tile_11 = const()[name = tensor<string, []>("tile_11"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1026_axis_0 = const()[name = tensor<string, []>("op_1026_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1026_cast_fp16_19 = split(axis = var_1026_axis_0, split_sizes = tile_11, x = var_980_cast_fp16)[name = tensor<string, []>("op_1026_cast_fp16")];
            tensor<string, []> aw_121_equation_0 = const()[name = tensor<string, []>("aw_121_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_121_cast_fp16 = einsum(equation = aw_121_equation_0, values = (var_1005_cast_fp16_0, var_983_cast_fp16_0))[name = tensor<string, []>("aw_121_cast_fp16")];
            tensor<string, []> aw_123_equation_0 = const()[name = tensor<string, []>("aw_123_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_123_cast_fp16 = einsum(equation = aw_123_equation_0, values = (var_1005_cast_fp16_1, var_983_cast_fp16_1))[name = tensor<string, []>("aw_123_cast_fp16")];
            tensor<string, []> aw_125_equation_0 = const()[name = tensor<string, []>("aw_125_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_125_cast_fp16 = einsum(equation = aw_125_equation_0, values = (var_1005_cast_fp16_2, var_983_cast_fp16_2))[name = tensor<string, []>("aw_125_cast_fp16")];
            tensor<string, []> aw_127_equation_0 = const()[name = tensor<string, []>("aw_127_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_127_cast_fp16 = einsum(equation = aw_127_equation_0, values = (var_1005_cast_fp16_3, var_983_cast_fp16_3))[name = tensor<string, []>("aw_127_cast_fp16")];
            tensor<string, []> aw_129_equation_0 = const()[name = tensor<string, []>("aw_129_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_129_cast_fp16 = einsum(equation = aw_129_equation_0, values = (var_1005_cast_fp16_4, var_983_cast_fp16_4))[name = tensor<string, []>("aw_129_cast_fp16")];
            tensor<string, []> aw_131_equation_0 = const()[name = tensor<string, []>("aw_131_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_131_cast_fp16 = einsum(equation = aw_131_equation_0, values = (var_1005_cast_fp16_5, var_983_cast_fp16_5))[name = tensor<string, []>("aw_131_cast_fp16")];
            tensor<string, []> aw_133_equation_0 = const()[name = tensor<string, []>("aw_133_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_133_cast_fp16 = einsum(equation = aw_133_equation_0, values = (var_1005_cast_fp16_6, var_983_cast_fp16_6))[name = tensor<string, []>("aw_133_cast_fp16")];
            tensor<string, []> aw_135_equation_0 = const()[name = tensor<string, []>("aw_135_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_135_cast_fp16 = einsum(equation = aw_135_equation_0, values = (var_1005_cast_fp16_7, var_983_cast_fp16_7))[name = tensor<string, []>("aw_135_cast_fp16")];
            tensor<string, []> aw_137_equation_0 = const()[name = tensor<string, []>("aw_137_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_137_cast_fp16 = einsum(equation = aw_137_equation_0, values = (var_1005_cast_fp16_8, var_983_cast_fp16_8))[name = tensor<string, []>("aw_137_cast_fp16")];
            tensor<string, []> aw_139_equation_0 = const()[name = tensor<string, []>("aw_139_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_139_cast_fp16 = einsum(equation = aw_139_equation_0, values = (var_1005_cast_fp16_9, var_983_cast_fp16_9))[name = tensor<string, []>("aw_139_cast_fp16")];
            tensor<string, []> aw_141_equation_0 = const()[name = tensor<string, []>("aw_141_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_141_cast_fp16 = einsum(equation = aw_141_equation_0, values = (var_1005_cast_fp16_10, var_983_cast_fp16_10))[name = tensor<string, []>("aw_141_cast_fp16")];
            tensor<string, []> aw_143_equation_0 = const()[name = tensor<string, []>("aw_143_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_143_cast_fp16 = einsum(equation = aw_143_equation_0, values = (var_1005_cast_fp16_11, var_983_cast_fp16_11))[name = tensor<string, []>("aw_143_cast_fp16")];
            tensor<string, []> aw_145_equation_0 = const()[name = tensor<string, []>("aw_145_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_145_cast_fp16 = einsum(equation = aw_145_equation_0, values = (var_1005_cast_fp16_12, var_983_cast_fp16_12))[name = tensor<string, []>("aw_145_cast_fp16")];
            tensor<string, []> aw_147_equation_0 = const()[name = tensor<string, []>("aw_147_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_147_cast_fp16 = einsum(equation = aw_147_equation_0, values = (var_1005_cast_fp16_13, var_983_cast_fp16_13))[name = tensor<string, []>("aw_147_cast_fp16")];
            tensor<string, []> aw_149_equation_0 = const()[name = tensor<string, []>("aw_149_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_149_cast_fp16 = einsum(equation = aw_149_equation_0, values = (var_1005_cast_fp16_14, var_983_cast_fp16_14))[name = tensor<string, []>("aw_149_cast_fp16")];
            tensor<string, []> aw_151_equation_0 = const()[name = tensor<string, []>("aw_151_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_151_cast_fp16 = einsum(equation = aw_151_equation_0, values = (var_1005_cast_fp16_15, var_983_cast_fp16_15))[name = tensor<string, []>("aw_151_cast_fp16")];
            tensor<string, []> aw_153_equation_0 = const()[name = tensor<string, []>("aw_153_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_153_cast_fp16 = einsum(equation = aw_153_equation_0, values = (var_1005_cast_fp16_16, var_983_cast_fp16_16))[name = tensor<string, []>("aw_153_cast_fp16")];
            tensor<string, []> aw_155_equation_0 = const()[name = tensor<string, []>("aw_155_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_155_cast_fp16 = einsum(equation = aw_155_equation_0, values = (var_1005_cast_fp16_17, var_983_cast_fp16_17))[name = tensor<string, []>("aw_155_cast_fp16")];
            tensor<string, []> aw_157_equation_0 = const()[name = tensor<string, []>("aw_157_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_157_cast_fp16 = einsum(equation = aw_157_equation_0, values = (var_1005_cast_fp16_18, var_983_cast_fp16_18))[name = tensor<string, []>("aw_157_cast_fp16")];
            tensor<string, []> aw_159_equation_0 = const()[name = tensor<string, []>("aw_159_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_159_cast_fp16 = einsum(equation = aw_159_equation_0, values = (var_1005_cast_fp16_19, var_983_cast_fp16_19))[name = tensor<string, []>("aw_159_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1087_cast_fp16 = softmax(axis = var_931, x = aw_121_cast_fp16)[name = tensor<string, []>("op_1087_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1088_cast_fp16 = softmax(axis = var_931, x = aw_123_cast_fp16)[name = tensor<string, []>("op_1088_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1089_cast_fp16 = softmax(axis = var_931, x = aw_125_cast_fp16)[name = tensor<string, []>("op_1089_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1090_cast_fp16 = softmax(axis = var_931, x = aw_127_cast_fp16)[name = tensor<string, []>("op_1090_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1091_cast_fp16 = softmax(axis = var_931, x = aw_129_cast_fp16)[name = tensor<string, []>("op_1091_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1092_cast_fp16 = softmax(axis = var_931, x = aw_131_cast_fp16)[name = tensor<string, []>("op_1092_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1093_cast_fp16 = softmax(axis = var_931, x = aw_133_cast_fp16)[name = tensor<string, []>("op_1093_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1094_cast_fp16 = softmax(axis = var_931, x = aw_135_cast_fp16)[name = tensor<string, []>("op_1094_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1095_cast_fp16 = softmax(axis = var_931, x = aw_137_cast_fp16)[name = tensor<string, []>("op_1095_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1096_cast_fp16 = softmax(axis = var_931, x = aw_139_cast_fp16)[name = tensor<string, []>("op_1096_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1097_cast_fp16 = softmax(axis = var_931, x = aw_141_cast_fp16)[name = tensor<string, []>("op_1097_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1098_cast_fp16 = softmax(axis = var_931, x = aw_143_cast_fp16)[name = tensor<string, []>("op_1098_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1099_cast_fp16 = softmax(axis = var_931, x = aw_145_cast_fp16)[name = tensor<string, []>("op_1099_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1100_cast_fp16 = softmax(axis = var_931, x = aw_147_cast_fp16)[name = tensor<string, []>("op_1100_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1101_cast_fp16 = softmax(axis = var_931, x = aw_149_cast_fp16)[name = tensor<string, []>("op_1101_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1102_cast_fp16 = softmax(axis = var_931, x = aw_151_cast_fp16)[name = tensor<string, []>("op_1102_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1103_cast_fp16 = softmax(axis = var_931, x = aw_153_cast_fp16)[name = tensor<string, []>("op_1103_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1104_cast_fp16 = softmax(axis = var_931, x = aw_155_cast_fp16)[name = tensor<string, []>("op_1104_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1105_cast_fp16 = softmax(axis = var_931, x = aw_157_cast_fp16)[name = tensor<string, []>("op_1105_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1106_cast_fp16 = softmax(axis = var_931, x = aw_159_cast_fp16)[name = tensor<string, []>("op_1106_cast_fp16")];
            tensor<string, []> var_1108_equation_0 = const()[name = tensor<string, []>("op_1108_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16 = einsum(equation = var_1108_equation_0, values = (var_1026_cast_fp16_0, var_1087_cast_fp16))[name = tensor<string, []>("op_1108_cast_fp16")];
            tensor<string, []> var_1110_equation_0 = const()[name = tensor<string, []>("op_1110_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1110_cast_fp16 = einsum(equation = var_1110_equation_0, values = (var_1026_cast_fp16_1, var_1088_cast_fp16))[name = tensor<string, []>("op_1110_cast_fp16")];
            tensor<string, []> var_1112_equation_0 = const()[name = tensor<string, []>("op_1112_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1112_cast_fp16 = einsum(equation = var_1112_equation_0, values = (var_1026_cast_fp16_2, var_1089_cast_fp16))[name = tensor<string, []>("op_1112_cast_fp16")];
            tensor<string, []> var_1114_equation_0 = const()[name = tensor<string, []>("op_1114_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1114_cast_fp16 = einsum(equation = var_1114_equation_0, values = (var_1026_cast_fp16_3, var_1090_cast_fp16))[name = tensor<string, []>("op_1114_cast_fp16")];
            tensor<string, []> var_1116_equation_0 = const()[name = tensor<string, []>("op_1116_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1116_cast_fp16 = einsum(equation = var_1116_equation_0, values = (var_1026_cast_fp16_4, var_1091_cast_fp16))[name = tensor<string, []>("op_1116_cast_fp16")];
            tensor<string, []> var_1118_equation_0 = const()[name = tensor<string, []>("op_1118_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1118_cast_fp16 = einsum(equation = var_1118_equation_0, values = (var_1026_cast_fp16_5, var_1092_cast_fp16))[name = tensor<string, []>("op_1118_cast_fp16")];
            tensor<string, []> var_1120_equation_0 = const()[name = tensor<string, []>("op_1120_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1120_cast_fp16 = einsum(equation = var_1120_equation_0, values = (var_1026_cast_fp16_6, var_1093_cast_fp16))[name = tensor<string, []>("op_1120_cast_fp16")];
            tensor<string, []> var_1122_equation_0 = const()[name = tensor<string, []>("op_1122_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1122_cast_fp16 = einsum(equation = var_1122_equation_0, values = (var_1026_cast_fp16_7, var_1094_cast_fp16))[name = tensor<string, []>("op_1122_cast_fp16")];
            tensor<string, []> var_1124_equation_0 = const()[name = tensor<string, []>("op_1124_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1124_cast_fp16 = einsum(equation = var_1124_equation_0, values = (var_1026_cast_fp16_8, var_1095_cast_fp16))[name = tensor<string, []>("op_1124_cast_fp16")];
            tensor<string, []> var_1126_equation_0 = const()[name = tensor<string, []>("op_1126_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1126_cast_fp16 = einsum(equation = var_1126_equation_0, values = (var_1026_cast_fp16_9, var_1096_cast_fp16))[name = tensor<string, []>("op_1126_cast_fp16")];
            tensor<string, []> var_1128_equation_0 = const()[name = tensor<string, []>("op_1128_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1128_cast_fp16 = einsum(equation = var_1128_equation_0, values = (var_1026_cast_fp16_10, var_1097_cast_fp16))[name = tensor<string, []>("op_1128_cast_fp16")];
            tensor<string, []> var_1130_equation_0 = const()[name = tensor<string, []>("op_1130_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1130_cast_fp16 = einsum(equation = var_1130_equation_0, values = (var_1026_cast_fp16_11, var_1098_cast_fp16))[name = tensor<string, []>("op_1130_cast_fp16")];
            tensor<string, []> var_1132_equation_0 = const()[name = tensor<string, []>("op_1132_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1132_cast_fp16 = einsum(equation = var_1132_equation_0, values = (var_1026_cast_fp16_12, var_1099_cast_fp16))[name = tensor<string, []>("op_1132_cast_fp16")];
            tensor<string, []> var_1134_equation_0 = const()[name = tensor<string, []>("op_1134_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1134_cast_fp16 = einsum(equation = var_1134_equation_0, values = (var_1026_cast_fp16_13, var_1100_cast_fp16))[name = tensor<string, []>("op_1134_cast_fp16")];
            tensor<string, []> var_1136_equation_0 = const()[name = tensor<string, []>("op_1136_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1136_cast_fp16 = einsum(equation = var_1136_equation_0, values = (var_1026_cast_fp16_14, var_1101_cast_fp16))[name = tensor<string, []>("op_1136_cast_fp16")];
            tensor<string, []> var_1138_equation_0 = const()[name = tensor<string, []>("op_1138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1138_cast_fp16 = einsum(equation = var_1138_equation_0, values = (var_1026_cast_fp16_15, var_1102_cast_fp16))[name = tensor<string, []>("op_1138_cast_fp16")];
            tensor<string, []> var_1140_equation_0 = const()[name = tensor<string, []>("op_1140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1140_cast_fp16 = einsum(equation = var_1140_equation_0, values = (var_1026_cast_fp16_16, var_1103_cast_fp16))[name = tensor<string, []>("op_1140_cast_fp16")];
            tensor<string, []> var_1142_equation_0 = const()[name = tensor<string, []>("op_1142_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1142_cast_fp16 = einsum(equation = var_1142_equation_0, values = (var_1026_cast_fp16_17, var_1104_cast_fp16))[name = tensor<string, []>("op_1142_cast_fp16")];
            tensor<string, []> var_1144_equation_0 = const()[name = tensor<string, []>("op_1144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1144_cast_fp16 = einsum(equation = var_1144_equation_0, values = (var_1026_cast_fp16_18, var_1105_cast_fp16))[name = tensor<string, []>("op_1144_cast_fp16")];
            tensor<string, []> var_1146_equation_0 = const()[name = tensor<string, []>("op_1146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1146_cast_fp16 = einsum(equation = var_1146_equation_0, values = (var_1026_cast_fp16_19, var_1106_cast_fp16))[name = tensor<string, []>("op_1146_cast_fp16")];
            tensor<bool, []> input_35_interleave_0 = const()[name = tensor<string, []>("input_35_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_35_cast_fp16 = concat(axis = var_931, interleave = input_35_interleave_0, values = (var_1108_cast_fp16, var_1110_cast_fp16, var_1112_cast_fp16, var_1114_cast_fp16, var_1116_cast_fp16, var_1118_cast_fp16, var_1120_cast_fp16, var_1122_cast_fp16, var_1124_cast_fp16, var_1126_cast_fp16, var_1128_cast_fp16, var_1130_cast_fp16, var_1132_cast_fp16, var_1134_cast_fp16, var_1136_cast_fp16, var_1138_cast_fp16, var_1140_cast_fp16, var_1142_cast_fp16, var_1144_cast_fp16, var_1146_cast_fp16))[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<string, []> var_1155_pad_type_0 = const()[name = tensor<string, []>("op_1155_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1155_strides_0 = const()[name = tensor<string, []>("op_1155_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1155_pad_0 = const()[name = tensor<string, []>("op_1155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1155_dilations_0 = const()[name = tensor<string, []>("op_1155_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1155_groups_0 = const()[name = tensor<string, []>("op_1155_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_3_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142559872)))];
            tensor<fp16, [1280]> blocks_3_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145836736)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1155_cast_fp16 = conv(bias = blocks_3_attn_out_bias_to_fp16, dilations = var_1155_dilations_0, groups = var_1155_groups_0, pad = var_1155_pad_0, pad_type = var_1155_pad_type_0, strides = var_1155_strides_0, weight = blocks_3_attn_out_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("op_1155_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = var_1155_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> input_37_axes_0 = const()[name = tensor<string, []>("input_37_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_37_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145839360)))];
            tensor<fp16, [1280]> input_37_beta_0_to_fp16 = const()[name = tensor<string, []>("input_37_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145841984)))];
            tensor<fp16, []> var_1165_to_fp16 = const()[name = tensor<string, []>("op_1165_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_37_cast_fp16 = layer_norm(axes = input_37_axes_0, beta = input_37_beta_0_to_fp16, epsilon = var_1165_to_fp16, gamma = input_37_gamma_0_to_fp16, x = inputs_15_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_39_strides_0 = const()[name = tensor<string, []>("input_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_39_dilations_0 = const()[name = tensor<string, []>("input_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_39_groups_0 = const()[name = tensor<string, []>("input_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_3_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145844608)))];
            tensor<fp16, [5120]> blocks_3_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(158951872)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_39_cast_fp16 = conv(bias = blocks_3_mlp_0_bias_to_fp16, dilations = input_39_dilations_0, groups = input_39_groups_0, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = input_39_strides_0, weight = blocks_3_mlp_0_weight_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<string, []> input_41_mode_0 = const()[name = tensor<string, []>("input_41_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_41_cast_fp16 = gelu(mode = input_41_mode_0, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<string, []> var_1191_pad_type_0 = const()[name = tensor<string, []>("op_1191_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1191_strides_0 = const()[name = tensor<string, []>("op_1191_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1191_pad_0 = const()[name = tensor<string, []>("op_1191_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1191_dilations_0 = const()[name = tensor<string, []>("op_1191_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1191_groups_0 = const()[name = tensor<string, []>("op_1191_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_3_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(158962176)))];
            tensor<fp16, [1280]> blocks_3_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(172069440)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1191_cast_fp16 = conv(bias = blocks_3_mlp_2_bias_to_fp16, dilations = var_1191_dilations_0, groups = var_1191_groups_0, pad = var_1191_pad_0, pad_type = var_1191_pad_type_0, strides = var_1191_strides_0, weight = blocks_3_mlp_2_weight_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("op_1191_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = var_1191_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, []> var_1200 = const()[name = tensor<string, []>("op_1200"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_43_axes_0 = const()[name = tensor<string, []>("input_43_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_43_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(172072064)))];
            tensor<fp16, [1280]> input_43_beta_0_to_fp16 = const()[name = tensor<string, []>("input_43_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(172074688)))];
            tensor<fp16, []> var_1216_to_fp16 = const()[name = tensor<string, []>("op_1216_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_43_cast_fp16 = layer_norm(axes = input_43_axes_0, beta = input_43_beta_0_to_fp16, epsilon = var_1216_to_fp16, gamma = input_43_gamma_0_to_fp16, x = inputs_17_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<string, []> q_9_pad_type_0 = const()[name = tensor<string, []>("q_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_9_strides_0 = const()[name = tensor<string, []>("q_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_9_pad_0 = const()[name = tensor<string, []>("q_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_9_dilations_0 = const()[name = tensor<string, []>("q_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_9_groups_0 = const()[name = tensor<string, []>("q_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_1251_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1251_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(172077312)))];
            tensor<fp16, [1280]> var_1251_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1251_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(175354176)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1251_cast_fp16 = conv(bias = var_1251_bias_0_to_fp16, dilations = q_9_dilations_0, groups = q_9_groups_0, pad = q_9_pad_0, pad_type = q_9_pad_type_0, strides = q_9_strides_0, weight = var_1251_weight_0_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("op_1251_cast_fp16")];
            tensor<string, []> k_9_pad_type_0 = const()[name = tensor<string, []>("k_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_9_strides_0 = const()[name = tensor<string, []>("k_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_9_pad_0 = const()[name = tensor<string, []>("k_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_9_dilations_0 = const()[name = tensor<string, []>("k_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_9_groups_0 = const()[name = tensor<string, []>("k_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_4_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(175356800)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_9_cast_fp16 = conv(dilations = k_9_dilations_0, groups = k_9_groups_0, pad = k_9_pad_0, pad_type = k_9_pad_type_0, strides = k_9_strides_0, weight = blocks_4_attn_key_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("k_9_cast_fp16")];
            tensor<string, []> var_1249_pad_type_0 = const()[name = tensor<string, []>("op_1249_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1249_strides_0 = const()[name = tensor<string, []>("op_1249_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1249_pad_0 = const()[name = tensor<string, []>("op_1249_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1249_dilations_0 = const()[name = tensor<string, []>("op_1249_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1249_groups_0 = const()[name = tensor<string, []>("op_1249_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_4_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178633664)))];
            tensor<fp16, [1280]> blocks_4_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(181910528)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1249_cast_fp16 = conv(bias = blocks_4_attn_value_bias_to_fp16, dilations = var_1249_dilations_0, groups = var_1249_groups_0, pad = var_1249_pad_0, pad_type = var_1249_pad_type_0, strides = var_1249_strides_0, weight = blocks_4_attn_value_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("op_1249_cast_fp16")];
            tensor<int32, [20]> tile_12 = const()[name = tensor<string, []>("tile_12"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1252_axis_0 = const()[name = tensor<string, []>("op_1252_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1252_cast_fp16_19 = split(axis = var_1252_axis_0, split_sizes = tile_12, x = var_1251_cast_fp16)[name = tensor<string, []>("op_1252_cast_fp16")];
            tensor<int32, [4]> var_1273_perm_0 = const()[name = tensor<string, []>("op_1273_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_13 = const()[name = tensor<string, []>("tile_13"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1274_axis_0 = const()[name = tensor<string, []>("op_1274_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_1273_cast_fp16 = transpose(perm = var_1273_perm_0, x = k_9_cast_fp16)[name = tensor<string, []>("transpose_28")];
            tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_1274_cast_fp16_19 = split(axis = var_1274_axis_0, split_sizes = tile_13, x = var_1273_cast_fp16)[name = tensor<string, []>("op_1274_cast_fp16")];
            tensor<int32, [20]> tile_14 = const()[name = tensor<string, []>("tile_14"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1295_axis_0 = const()[name = tensor<string, []>("op_1295_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1295_cast_fp16_19 = split(axis = var_1295_axis_0, split_sizes = tile_14, x = var_1249_cast_fp16)[name = tensor<string, []>("op_1295_cast_fp16")];
            tensor<string, []> aw_161_equation_0 = const()[name = tensor<string, []>("aw_161_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_161_cast_fp16 = einsum(equation = aw_161_equation_0, values = (var_1274_cast_fp16_0, var_1252_cast_fp16_0))[name = tensor<string, []>("aw_161_cast_fp16")];
            tensor<string, []> aw_163_equation_0 = const()[name = tensor<string, []>("aw_163_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_163_cast_fp16 = einsum(equation = aw_163_equation_0, values = (var_1274_cast_fp16_1, var_1252_cast_fp16_1))[name = tensor<string, []>("aw_163_cast_fp16")];
            tensor<string, []> aw_165_equation_0 = const()[name = tensor<string, []>("aw_165_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_165_cast_fp16 = einsum(equation = aw_165_equation_0, values = (var_1274_cast_fp16_2, var_1252_cast_fp16_2))[name = tensor<string, []>("aw_165_cast_fp16")];
            tensor<string, []> aw_167_equation_0 = const()[name = tensor<string, []>("aw_167_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_167_cast_fp16 = einsum(equation = aw_167_equation_0, values = (var_1274_cast_fp16_3, var_1252_cast_fp16_3))[name = tensor<string, []>("aw_167_cast_fp16")];
            tensor<string, []> aw_169_equation_0 = const()[name = tensor<string, []>("aw_169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_169_cast_fp16 = einsum(equation = aw_169_equation_0, values = (var_1274_cast_fp16_4, var_1252_cast_fp16_4))[name = tensor<string, []>("aw_169_cast_fp16")];
            tensor<string, []> aw_171_equation_0 = const()[name = tensor<string, []>("aw_171_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_171_cast_fp16 = einsum(equation = aw_171_equation_0, values = (var_1274_cast_fp16_5, var_1252_cast_fp16_5))[name = tensor<string, []>("aw_171_cast_fp16")];
            tensor<string, []> aw_173_equation_0 = const()[name = tensor<string, []>("aw_173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_173_cast_fp16 = einsum(equation = aw_173_equation_0, values = (var_1274_cast_fp16_6, var_1252_cast_fp16_6))[name = tensor<string, []>("aw_173_cast_fp16")];
            tensor<string, []> aw_175_equation_0 = const()[name = tensor<string, []>("aw_175_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_175_cast_fp16 = einsum(equation = aw_175_equation_0, values = (var_1274_cast_fp16_7, var_1252_cast_fp16_7))[name = tensor<string, []>("aw_175_cast_fp16")];
            tensor<string, []> aw_177_equation_0 = const()[name = tensor<string, []>("aw_177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_177_cast_fp16 = einsum(equation = aw_177_equation_0, values = (var_1274_cast_fp16_8, var_1252_cast_fp16_8))[name = tensor<string, []>("aw_177_cast_fp16")];
            tensor<string, []> aw_179_equation_0 = const()[name = tensor<string, []>("aw_179_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_179_cast_fp16 = einsum(equation = aw_179_equation_0, values = (var_1274_cast_fp16_9, var_1252_cast_fp16_9))[name = tensor<string, []>("aw_179_cast_fp16")];
            tensor<string, []> aw_181_equation_0 = const()[name = tensor<string, []>("aw_181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_181_cast_fp16 = einsum(equation = aw_181_equation_0, values = (var_1274_cast_fp16_10, var_1252_cast_fp16_10))[name = tensor<string, []>("aw_181_cast_fp16")];
            tensor<string, []> aw_183_equation_0 = const()[name = tensor<string, []>("aw_183_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_183_cast_fp16 = einsum(equation = aw_183_equation_0, values = (var_1274_cast_fp16_11, var_1252_cast_fp16_11))[name = tensor<string, []>("aw_183_cast_fp16")];
            tensor<string, []> aw_185_equation_0 = const()[name = tensor<string, []>("aw_185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_185_cast_fp16 = einsum(equation = aw_185_equation_0, values = (var_1274_cast_fp16_12, var_1252_cast_fp16_12))[name = tensor<string, []>("aw_185_cast_fp16")];
            tensor<string, []> aw_187_equation_0 = const()[name = tensor<string, []>("aw_187_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_187_cast_fp16 = einsum(equation = aw_187_equation_0, values = (var_1274_cast_fp16_13, var_1252_cast_fp16_13))[name = tensor<string, []>("aw_187_cast_fp16")];
            tensor<string, []> aw_189_equation_0 = const()[name = tensor<string, []>("aw_189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_189_cast_fp16 = einsum(equation = aw_189_equation_0, values = (var_1274_cast_fp16_14, var_1252_cast_fp16_14))[name = tensor<string, []>("aw_189_cast_fp16")];
            tensor<string, []> aw_191_equation_0 = const()[name = tensor<string, []>("aw_191_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_191_cast_fp16 = einsum(equation = aw_191_equation_0, values = (var_1274_cast_fp16_15, var_1252_cast_fp16_15))[name = tensor<string, []>("aw_191_cast_fp16")];
            tensor<string, []> aw_193_equation_0 = const()[name = tensor<string, []>("aw_193_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_193_cast_fp16 = einsum(equation = aw_193_equation_0, values = (var_1274_cast_fp16_16, var_1252_cast_fp16_16))[name = tensor<string, []>("aw_193_cast_fp16")];
            tensor<string, []> aw_195_equation_0 = const()[name = tensor<string, []>("aw_195_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_195_cast_fp16 = einsum(equation = aw_195_equation_0, values = (var_1274_cast_fp16_17, var_1252_cast_fp16_17))[name = tensor<string, []>("aw_195_cast_fp16")];
            tensor<string, []> aw_197_equation_0 = const()[name = tensor<string, []>("aw_197_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_197_cast_fp16 = einsum(equation = aw_197_equation_0, values = (var_1274_cast_fp16_18, var_1252_cast_fp16_18))[name = tensor<string, []>("aw_197_cast_fp16")];
            tensor<string, []> aw_199_equation_0 = const()[name = tensor<string, []>("aw_199_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_199_cast_fp16 = einsum(equation = aw_199_equation_0, values = (var_1274_cast_fp16_19, var_1252_cast_fp16_19))[name = tensor<string, []>("aw_199_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1356_cast_fp16 = softmax(axis = var_1200, x = aw_161_cast_fp16)[name = tensor<string, []>("op_1356_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1357_cast_fp16 = softmax(axis = var_1200, x = aw_163_cast_fp16)[name = tensor<string, []>("op_1357_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1358_cast_fp16 = softmax(axis = var_1200, x = aw_165_cast_fp16)[name = tensor<string, []>("op_1358_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1359_cast_fp16 = softmax(axis = var_1200, x = aw_167_cast_fp16)[name = tensor<string, []>("op_1359_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1360_cast_fp16 = softmax(axis = var_1200, x = aw_169_cast_fp16)[name = tensor<string, []>("op_1360_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1361_cast_fp16 = softmax(axis = var_1200, x = aw_171_cast_fp16)[name = tensor<string, []>("op_1361_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1362_cast_fp16 = softmax(axis = var_1200, x = aw_173_cast_fp16)[name = tensor<string, []>("op_1362_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1363_cast_fp16 = softmax(axis = var_1200, x = aw_175_cast_fp16)[name = tensor<string, []>("op_1363_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1364_cast_fp16 = softmax(axis = var_1200, x = aw_177_cast_fp16)[name = tensor<string, []>("op_1364_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1365_cast_fp16 = softmax(axis = var_1200, x = aw_179_cast_fp16)[name = tensor<string, []>("op_1365_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1366_cast_fp16 = softmax(axis = var_1200, x = aw_181_cast_fp16)[name = tensor<string, []>("op_1366_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1367_cast_fp16 = softmax(axis = var_1200, x = aw_183_cast_fp16)[name = tensor<string, []>("op_1367_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1368_cast_fp16 = softmax(axis = var_1200, x = aw_185_cast_fp16)[name = tensor<string, []>("op_1368_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1369_cast_fp16 = softmax(axis = var_1200, x = aw_187_cast_fp16)[name = tensor<string, []>("op_1369_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1370_cast_fp16 = softmax(axis = var_1200, x = aw_189_cast_fp16)[name = tensor<string, []>("op_1370_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1371_cast_fp16 = softmax(axis = var_1200, x = aw_191_cast_fp16)[name = tensor<string, []>("op_1371_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1372_cast_fp16 = softmax(axis = var_1200, x = aw_193_cast_fp16)[name = tensor<string, []>("op_1372_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1373_cast_fp16 = softmax(axis = var_1200, x = aw_195_cast_fp16)[name = tensor<string, []>("op_1373_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1374_cast_fp16 = softmax(axis = var_1200, x = aw_197_cast_fp16)[name = tensor<string, []>("op_1374_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1375_cast_fp16 = softmax(axis = var_1200, x = aw_199_cast_fp16)[name = tensor<string, []>("op_1375_cast_fp16")];
            tensor<string, []> var_1377_equation_0 = const()[name = tensor<string, []>("op_1377_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1377_cast_fp16 = einsum(equation = var_1377_equation_0, values = (var_1295_cast_fp16_0, var_1356_cast_fp16))[name = tensor<string, []>("op_1377_cast_fp16")];
            tensor<string, []> var_1379_equation_0 = const()[name = tensor<string, []>("op_1379_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1379_cast_fp16 = einsum(equation = var_1379_equation_0, values = (var_1295_cast_fp16_1, var_1357_cast_fp16))[name = tensor<string, []>("op_1379_cast_fp16")];
            tensor<string, []> var_1381_equation_0 = const()[name = tensor<string, []>("op_1381_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1381_cast_fp16 = einsum(equation = var_1381_equation_0, values = (var_1295_cast_fp16_2, var_1358_cast_fp16))[name = tensor<string, []>("op_1381_cast_fp16")];
            tensor<string, []> var_1383_equation_0 = const()[name = tensor<string, []>("op_1383_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1383_cast_fp16 = einsum(equation = var_1383_equation_0, values = (var_1295_cast_fp16_3, var_1359_cast_fp16))[name = tensor<string, []>("op_1383_cast_fp16")];
            tensor<string, []> var_1385_equation_0 = const()[name = tensor<string, []>("op_1385_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1385_cast_fp16 = einsum(equation = var_1385_equation_0, values = (var_1295_cast_fp16_4, var_1360_cast_fp16))[name = tensor<string, []>("op_1385_cast_fp16")];
            tensor<string, []> var_1387_equation_0 = const()[name = tensor<string, []>("op_1387_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1387_cast_fp16 = einsum(equation = var_1387_equation_0, values = (var_1295_cast_fp16_5, var_1361_cast_fp16))[name = tensor<string, []>("op_1387_cast_fp16")];
            tensor<string, []> var_1389_equation_0 = const()[name = tensor<string, []>("op_1389_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1389_cast_fp16 = einsum(equation = var_1389_equation_0, values = (var_1295_cast_fp16_6, var_1362_cast_fp16))[name = tensor<string, []>("op_1389_cast_fp16")];
            tensor<string, []> var_1391_equation_0 = const()[name = tensor<string, []>("op_1391_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1391_cast_fp16 = einsum(equation = var_1391_equation_0, values = (var_1295_cast_fp16_7, var_1363_cast_fp16))[name = tensor<string, []>("op_1391_cast_fp16")];
            tensor<string, []> var_1393_equation_0 = const()[name = tensor<string, []>("op_1393_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1393_cast_fp16 = einsum(equation = var_1393_equation_0, values = (var_1295_cast_fp16_8, var_1364_cast_fp16))[name = tensor<string, []>("op_1393_cast_fp16")];
            tensor<string, []> var_1395_equation_0 = const()[name = tensor<string, []>("op_1395_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1395_cast_fp16 = einsum(equation = var_1395_equation_0, values = (var_1295_cast_fp16_9, var_1365_cast_fp16))[name = tensor<string, []>("op_1395_cast_fp16")];
            tensor<string, []> var_1397_equation_0 = const()[name = tensor<string, []>("op_1397_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1397_cast_fp16 = einsum(equation = var_1397_equation_0, values = (var_1295_cast_fp16_10, var_1366_cast_fp16))[name = tensor<string, []>("op_1397_cast_fp16")];
            tensor<string, []> var_1399_equation_0 = const()[name = tensor<string, []>("op_1399_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1399_cast_fp16 = einsum(equation = var_1399_equation_0, values = (var_1295_cast_fp16_11, var_1367_cast_fp16))[name = tensor<string, []>("op_1399_cast_fp16")];
            tensor<string, []> var_1401_equation_0 = const()[name = tensor<string, []>("op_1401_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1401_cast_fp16 = einsum(equation = var_1401_equation_0, values = (var_1295_cast_fp16_12, var_1368_cast_fp16))[name = tensor<string, []>("op_1401_cast_fp16")];
            tensor<string, []> var_1403_equation_0 = const()[name = tensor<string, []>("op_1403_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1403_cast_fp16 = einsum(equation = var_1403_equation_0, values = (var_1295_cast_fp16_13, var_1369_cast_fp16))[name = tensor<string, []>("op_1403_cast_fp16")];
            tensor<string, []> var_1405_equation_0 = const()[name = tensor<string, []>("op_1405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1405_cast_fp16 = einsum(equation = var_1405_equation_0, values = (var_1295_cast_fp16_14, var_1370_cast_fp16))[name = tensor<string, []>("op_1405_cast_fp16")];
            tensor<string, []> var_1407_equation_0 = const()[name = tensor<string, []>("op_1407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1407_cast_fp16 = einsum(equation = var_1407_equation_0, values = (var_1295_cast_fp16_15, var_1371_cast_fp16))[name = tensor<string, []>("op_1407_cast_fp16")];
            tensor<string, []> var_1409_equation_0 = const()[name = tensor<string, []>("op_1409_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1409_cast_fp16 = einsum(equation = var_1409_equation_0, values = (var_1295_cast_fp16_16, var_1372_cast_fp16))[name = tensor<string, []>("op_1409_cast_fp16")];
            tensor<string, []> var_1411_equation_0 = const()[name = tensor<string, []>("op_1411_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1411_cast_fp16 = einsum(equation = var_1411_equation_0, values = (var_1295_cast_fp16_17, var_1373_cast_fp16))[name = tensor<string, []>("op_1411_cast_fp16")];
            tensor<string, []> var_1413_equation_0 = const()[name = tensor<string, []>("op_1413_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1413_cast_fp16 = einsum(equation = var_1413_equation_0, values = (var_1295_cast_fp16_18, var_1374_cast_fp16))[name = tensor<string, []>("op_1413_cast_fp16")];
            tensor<string, []> var_1415_equation_0 = const()[name = tensor<string, []>("op_1415_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1415_cast_fp16 = einsum(equation = var_1415_equation_0, values = (var_1295_cast_fp16_19, var_1375_cast_fp16))[name = tensor<string, []>("op_1415_cast_fp16")];
            tensor<bool, []> input_45_interleave_0 = const()[name = tensor<string, []>("input_45_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_45_cast_fp16 = concat(axis = var_1200, interleave = input_45_interleave_0, values = (var_1377_cast_fp16, var_1379_cast_fp16, var_1381_cast_fp16, var_1383_cast_fp16, var_1385_cast_fp16, var_1387_cast_fp16, var_1389_cast_fp16, var_1391_cast_fp16, var_1393_cast_fp16, var_1395_cast_fp16, var_1397_cast_fp16, var_1399_cast_fp16, var_1401_cast_fp16, var_1403_cast_fp16, var_1405_cast_fp16, var_1407_cast_fp16, var_1409_cast_fp16, var_1411_cast_fp16, var_1413_cast_fp16, var_1415_cast_fp16))[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<string, []> var_1424_pad_type_0 = const()[name = tensor<string, []>("op_1424_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1424_strides_0 = const()[name = tensor<string, []>("op_1424_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1424_pad_0 = const()[name = tensor<string, []>("op_1424_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1424_dilations_0 = const()[name = tensor<string, []>("op_1424_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1424_groups_0 = const()[name = tensor<string, []>("op_1424_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_4_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(181913152)))];
            tensor<fp16, [1280]> blocks_4_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185190016)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1424_cast_fp16 = conv(bias = blocks_4_attn_out_bias_to_fp16, dilations = var_1424_dilations_0, groups = var_1424_groups_0, pad = var_1424_pad_0, pad_type = var_1424_pad_type_0, strides = var_1424_strides_0, weight = blocks_4_attn_out_weight_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("op_1424_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = var_1424_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, [1]> input_47_axes_0 = const()[name = tensor<string, []>("input_47_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_47_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185192640)))];
            tensor<fp16, [1280]> input_47_beta_0_to_fp16 = const()[name = tensor<string, []>("input_47_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185195264)))];
            tensor<fp16, []> var_1434_to_fp16 = const()[name = tensor<string, []>("op_1434_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_47_cast_fp16 = layer_norm(axes = input_47_axes_0, beta = input_47_beta_0_to_fp16, epsilon = var_1434_to_fp16, gamma = input_47_gamma_0_to_fp16, x = inputs_19_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_4_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185197888)))];
            tensor<fp16, [5120]> blocks_4_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198305152)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_49_cast_fp16 = conv(bias = blocks_4_mlp_0_bias_to_fp16, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = blocks_4_mlp_0_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<string, []> input_51_mode_0 = const()[name = tensor<string, []>("input_51_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_51_cast_fp16 = gelu(mode = input_51_mode_0, x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<string, []> var_1460_pad_type_0 = const()[name = tensor<string, []>("op_1460_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1460_strides_0 = const()[name = tensor<string, []>("op_1460_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1460_pad_0 = const()[name = tensor<string, []>("op_1460_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1460_dilations_0 = const()[name = tensor<string, []>("op_1460_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1460_groups_0 = const()[name = tensor<string, []>("op_1460_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_4_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198315456)))];
            tensor<fp16, [1280]> blocks_4_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211422720)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1460_cast_fp16 = conv(bias = blocks_4_mlp_2_bias_to_fp16, dilations = var_1460_dilations_0, groups = var_1460_groups_0, pad = var_1460_pad_0, pad_type = var_1460_pad_type_0, strides = var_1460_strides_0, weight = blocks_4_mlp_2_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("op_1460_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = var_1460_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, []> var_1469 = const()[name = tensor<string, []>("op_1469"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_53_axes_0 = const()[name = tensor<string, []>("input_53_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_53_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211425344)))];
            tensor<fp16, [1280]> input_53_beta_0_to_fp16 = const()[name = tensor<string, []>("input_53_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211427968)))];
            tensor<fp16, []> var_1485_to_fp16 = const()[name = tensor<string, []>("op_1485_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_53_cast_fp16 = layer_norm(axes = input_53_axes_0, beta = input_53_beta_0_to_fp16, epsilon = var_1485_to_fp16, gamma = input_53_gamma_0_to_fp16, x = inputs_21_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<string, []> q_11_pad_type_0 = const()[name = tensor<string, []>("q_11_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_11_strides_0 = const()[name = tensor<string, []>("q_11_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_11_pad_0 = const()[name = tensor<string, []>("q_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_11_dilations_0 = const()[name = tensor<string, []>("q_11_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_11_groups_0 = const()[name = tensor<string, []>("q_11_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_1520_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1520_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211430592)))];
            tensor<fp16, [1280]> var_1520_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1520_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214707456)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1520_cast_fp16 = conv(bias = var_1520_bias_0_to_fp16, dilations = q_11_dilations_0, groups = q_11_groups_0, pad = q_11_pad_0, pad_type = q_11_pad_type_0, strides = q_11_strides_0, weight = var_1520_weight_0_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("op_1520_cast_fp16")];
            tensor<string, []> k_11_pad_type_0 = const()[name = tensor<string, []>("k_11_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_11_strides_0 = const()[name = tensor<string, []>("k_11_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_11_pad_0 = const()[name = tensor<string, []>("k_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_11_dilations_0 = const()[name = tensor<string, []>("k_11_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_11_groups_0 = const()[name = tensor<string, []>("k_11_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_5_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214710080)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_11_cast_fp16 = conv(dilations = k_11_dilations_0, groups = k_11_groups_0, pad = k_11_pad_0, pad_type = k_11_pad_type_0, strides = k_11_strides_0, weight = blocks_5_attn_key_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("k_11_cast_fp16")];
            tensor<string, []> var_1518_pad_type_0 = const()[name = tensor<string, []>("op_1518_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1518_strides_0 = const()[name = tensor<string, []>("op_1518_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1518_pad_0 = const()[name = tensor<string, []>("op_1518_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1518_dilations_0 = const()[name = tensor<string, []>("op_1518_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1518_groups_0 = const()[name = tensor<string, []>("op_1518_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_5_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217986944)))];
            tensor<fp16, [1280]> blocks_5_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(221263808)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1518_cast_fp16 = conv(bias = blocks_5_attn_value_bias_to_fp16, dilations = var_1518_dilations_0, groups = var_1518_groups_0, pad = var_1518_pad_0, pad_type = var_1518_pad_type_0, strides = var_1518_strides_0, weight = blocks_5_attn_value_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("op_1518_cast_fp16")];
            tensor<int32, [20]> tile_15 = const()[name = tensor<string, []>("tile_15"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1521_axis_0 = const()[name = tensor<string, []>("op_1521_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1521_cast_fp16_19 = split(axis = var_1521_axis_0, split_sizes = tile_15, x = var_1520_cast_fp16)[name = tensor<string, []>("op_1521_cast_fp16")];
            tensor<int32, [4]> var_1542_perm_0 = const()[name = tensor<string, []>("op_1542_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_16 = const()[name = tensor<string, []>("tile_16"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1543_axis_0 = const()[name = tensor<string, []>("op_1543_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_1542_cast_fp16 = transpose(perm = var_1542_perm_0, x = k_11_cast_fp16)[name = tensor<string, []>("transpose_27")];
            tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_1543_cast_fp16_19 = split(axis = var_1543_axis_0, split_sizes = tile_16, x = var_1542_cast_fp16)[name = tensor<string, []>("op_1543_cast_fp16")];
            tensor<int32, [20]> tile_17 = const()[name = tensor<string, []>("tile_17"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1564_axis_0 = const()[name = tensor<string, []>("op_1564_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1564_cast_fp16_19 = split(axis = var_1564_axis_0, split_sizes = tile_17, x = var_1518_cast_fp16)[name = tensor<string, []>("op_1564_cast_fp16")];
            tensor<string, []> aw_201_equation_0 = const()[name = tensor<string, []>("aw_201_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_201_cast_fp16 = einsum(equation = aw_201_equation_0, values = (var_1543_cast_fp16_0, var_1521_cast_fp16_0))[name = tensor<string, []>("aw_201_cast_fp16")];
            tensor<string, []> aw_203_equation_0 = const()[name = tensor<string, []>("aw_203_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_203_cast_fp16 = einsum(equation = aw_203_equation_0, values = (var_1543_cast_fp16_1, var_1521_cast_fp16_1))[name = tensor<string, []>("aw_203_cast_fp16")];
            tensor<string, []> aw_205_equation_0 = const()[name = tensor<string, []>("aw_205_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_205_cast_fp16 = einsum(equation = aw_205_equation_0, values = (var_1543_cast_fp16_2, var_1521_cast_fp16_2))[name = tensor<string, []>("aw_205_cast_fp16")];
            tensor<string, []> aw_207_equation_0 = const()[name = tensor<string, []>("aw_207_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_207_cast_fp16 = einsum(equation = aw_207_equation_0, values = (var_1543_cast_fp16_3, var_1521_cast_fp16_3))[name = tensor<string, []>("aw_207_cast_fp16")];
            tensor<string, []> aw_209_equation_0 = const()[name = tensor<string, []>("aw_209_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_209_cast_fp16 = einsum(equation = aw_209_equation_0, values = (var_1543_cast_fp16_4, var_1521_cast_fp16_4))[name = tensor<string, []>("aw_209_cast_fp16")];
            tensor<string, []> aw_211_equation_0 = const()[name = tensor<string, []>("aw_211_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_211_cast_fp16 = einsum(equation = aw_211_equation_0, values = (var_1543_cast_fp16_5, var_1521_cast_fp16_5))[name = tensor<string, []>("aw_211_cast_fp16")];
            tensor<string, []> aw_213_equation_0 = const()[name = tensor<string, []>("aw_213_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_213_cast_fp16 = einsum(equation = aw_213_equation_0, values = (var_1543_cast_fp16_6, var_1521_cast_fp16_6))[name = tensor<string, []>("aw_213_cast_fp16")];
            tensor<string, []> aw_215_equation_0 = const()[name = tensor<string, []>("aw_215_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_215_cast_fp16 = einsum(equation = aw_215_equation_0, values = (var_1543_cast_fp16_7, var_1521_cast_fp16_7))[name = tensor<string, []>("aw_215_cast_fp16")];
            tensor<string, []> aw_217_equation_0 = const()[name = tensor<string, []>("aw_217_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_217_cast_fp16 = einsum(equation = aw_217_equation_0, values = (var_1543_cast_fp16_8, var_1521_cast_fp16_8))[name = tensor<string, []>("aw_217_cast_fp16")];
            tensor<string, []> aw_219_equation_0 = const()[name = tensor<string, []>("aw_219_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_219_cast_fp16 = einsum(equation = aw_219_equation_0, values = (var_1543_cast_fp16_9, var_1521_cast_fp16_9))[name = tensor<string, []>("aw_219_cast_fp16")];
            tensor<string, []> aw_221_equation_0 = const()[name = tensor<string, []>("aw_221_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_221_cast_fp16 = einsum(equation = aw_221_equation_0, values = (var_1543_cast_fp16_10, var_1521_cast_fp16_10))[name = tensor<string, []>("aw_221_cast_fp16")];
            tensor<string, []> aw_223_equation_0 = const()[name = tensor<string, []>("aw_223_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_223_cast_fp16 = einsum(equation = aw_223_equation_0, values = (var_1543_cast_fp16_11, var_1521_cast_fp16_11))[name = tensor<string, []>("aw_223_cast_fp16")];
            tensor<string, []> aw_225_equation_0 = const()[name = tensor<string, []>("aw_225_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_225_cast_fp16 = einsum(equation = aw_225_equation_0, values = (var_1543_cast_fp16_12, var_1521_cast_fp16_12))[name = tensor<string, []>("aw_225_cast_fp16")];
            tensor<string, []> aw_227_equation_0 = const()[name = tensor<string, []>("aw_227_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_227_cast_fp16 = einsum(equation = aw_227_equation_0, values = (var_1543_cast_fp16_13, var_1521_cast_fp16_13))[name = tensor<string, []>("aw_227_cast_fp16")];
            tensor<string, []> aw_229_equation_0 = const()[name = tensor<string, []>("aw_229_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_229_cast_fp16 = einsum(equation = aw_229_equation_0, values = (var_1543_cast_fp16_14, var_1521_cast_fp16_14))[name = tensor<string, []>("aw_229_cast_fp16")];
            tensor<string, []> aw_231_equation_0 = const()[name = tensor<string, []>("aw_231_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_231_cast_fp16 = einsum(equation = aw_231_equation_0, values = (var_1543_cast_fp16_15, var_1521_cast_fp16_15))[name = tensor<string, []>("aw_231_cast_fp16")];
            tensor<string, []> aw_233_equation_0 = const()[name = tensor<string, []>("aw_233_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_233_cast_fp16 = einsum(equation = aw_233_equation_0, values = (var_1543_cast_fp16_16, var_1521_cast_fp16_16))[name = tensor<string, []>("aw_233_cast_fp16")];
            tensor<string, []> aw_235_equation_0 = const()[name = tensor<string, []>("aw_235_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_235_cast_fp16 = einsum(equation = aw_235_equation_0, values = (var_1543_cast_fp16_17, var_1521_cast_fp16_17))[name = tensor<string, []>("aw_235_cast_fp16")];
            tensor<string, []> aw_237_equation_0 = const()[name = tensor<string, []>("aw_237_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_237_cast_fp16 = einsum(equation = aw_237_equation_0, values = (var_1543_cast_fp16_18, var_1521_cast_fp16_18))[name = tensor<string, []>("aw_237_cast_fp16")];
            tensor<string, []> aw_239_equation_0 = const()[name = tensor<string, []>("aw_239_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_239_cast_fp16 = einsum(equation = aw_239_equation_0, values = (var_1543_cast_fp16_19, var_1521_cast_fp16_19))[name = tensor<string, []>("aw_239_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1625_cast_fp16 = softmax(axis = var_1469, x = aw_201_cast_fp16)[name = tensor<string, []>("op_1625_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1626_cast_fp16 = softmax(axis = var_1469, x = aw_203_cast_fp16)[name = tensor<string, []>("op_1626_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1627_cast_fp16 = softmax(axis = var_1469, x = aw_205_cast_fp16)[name = tensor<string, []>("op_1627_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1628_cast_fp16 = softmax(axis = var_1469, x = aw_207_cast_fp16)[name = tensor<string, []>("op_1628_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1629_cast_fp16 = softmax(axis = var_1469, x = aw_209_cast_fp16)[name = tensor<string, []>("op_1629_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1630_cast_fp16 = softmax(axis = var_1469, x = aw_211_cast_fp16)[name = tensor<string, []>("op_1630_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1631_cast_fp16 = softmax(axis = var_1469, x = aw_213_cast_fp16)[name = tensor<string, []>("op_1631_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1632_cast_fp16 = softmax(axis = var_1469, x = aw_215_cast_fp16)[name = tensor<string, []>("op_1632_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1633_cast_fp16 = softmax(axis = var_1469, x = aw_217_cast_fp16)[name = tensor<string, []>("op_1633_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1634_cast_fp16 = softmax(axis = var_1469, x = aw_219_cast_fp16)[name = tensor<string, []>("op_1634_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1635_cast_fp16 = softmax(axis = var_1469, x = aw_221_cast_fp16)[name = tensor<string, []>("op_1635_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1636_cast_fp16 = softmax(axis = var_1469, x = aw_223_cast_fp16)[name = tensor<string, []>("op_1636_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1637_cast_fp16 = softmax(axis = var_1469, x = aw_225_cast_fp16)[name = tensor<string, []>("op_1637_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1638_cast_fp16 = softmax(axis = var_1469, x = aw_227_cast_fp16)[name = tensor<string, []>("op_1638_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1639_cast_fp16 = softmax(axis = var_1469, x = aw_229_cast_fp16)[name = tensor<string, []>("op_1639_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1640_cast_fp16 = softmax(axis = var_1469, x = aw_231_cast_fp16)[name = tensor<string, []>("op_1640_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1641_cast_fp16 = softmax(axis = var_1469, x = aw_233_cast_fp16)[name = tensor<string, []>("op_1641_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1642_cast_fp16 = softmax(axis = var_1469, x = aw_235_cast_fp16)[name = tensor<string, []>("op_1642_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1643_cast_fp16 = softmax(axis = var_1469, x = aw_237_cast_fp16)[name = tensor<string, []>("op_1643_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1644_cast_fp16 = softmax(axis = var_1469, x = aw_239_cast_fp16)[name = tensor<string, []>("op_1644_cast_fp16")];
            tensor<string, []> var_1646_equation_0 = const()[name = tensor<string, []>("op_1646_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1646_cast_fp16 = einsum(equation = var_1646_equation_0, values = (var_1564_cast_fp16_0, var_1625_cast_fp16))[name = tensor<string, []>("op_1646_cast_fp16")];
            tensor<string, []> var_1648_equation_0 = const()[name = tensor<string, []>("op_1648_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1648_cast_fp16 = einsum(equation = var_1648_equation_0, values = (var_1564_cast_fp16_1, var_1626_cast_fp16))[name = tensor<string, []>("op_1648_cast_fp16")];
            tensor<string, []> var_1650_equation_0 = const()[name = tensor<string, []>("op_1650_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1650_cast_fp16 = einsum(equation = var_1650_equation_0, values = (var_1564_cast_fp16_2, var_1627_cast_fp16))[name = tensor<string, []>("op_1650_cast_fp16")];
            tensor<string, []> var_1652_equation_0 = const()[name = tensor<string, []>("op_1652_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1652_cast_fp16 = einsum(equation = var_1652_equation_0, values = (var_1564_cast_fp16_3, var_1628_cast_fp16))[name = tensor<string, []>("op_1652_cast_fp16")];
            tensor<string, []> var_1654_equation_0 = const()[name = tensor<string, []>("op_1654_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1654_cast_fp16 = einsum(equation = var_1654_equation_0, values = (var_1564_cast_fp16_4, var_1629_cast_fp16))[name = tensor<string, []>("op_1654_cast_fp16")];
            tensor<string, []> var_1656_equation_0 = const()[name = tensor<string, []>("op_1656_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1656_cast_fp16 = einsum(equation = var_1656_equation_0, values = (var_1564_cast_fp16_5, var_1630_cast_fp16))[name = tensor<string, []>("op_1656_cast_fp16")];
            tensor<string, []> var_1658_equation_0 = const()[name = tensor<string, []>("op_1658_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1658_cast_fp16 = einsum(equation = var_1658_equation_0, values = (var_1564_cast_fp16_6, var_1631_cast_fp16))[name = tensor<string, []>("op_1658_cast_fp16")];
            tensor<string, []> var_1660_equation_0 = const()[name = tensor<string, []>("op_1660_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1660_cast_fp16 = einsum(equation = var_1660_equation_0, values = (var_1564_cast_fp16_7, var_1632_cast_fp16))[name = tensor<string, []>("op_1660_cast_fp16")];
            tensor<string, []> var_1662_equation_0 = const()[name = tensor<string, []>("op_1662_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1662_cast_fp16 = einsum(equation = var_1662_equation_0, values = (var_1564_cast_fp16_8, var_1633_cast_fp16))[name = tensor<string, []>("op_1662_cast_fp16")];
            tensor<string, []> var_1664_equation_0 = const()[name = tensor<string, []>("op_1664_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1664_cast_fp16 = einsum(equation = var_1664_equation_0, values = (var_1564_cast_fp16_9, var_1634_cast_fp16))[name = tensor<string, []>("op_1664_cast_fp16")];
            tensor<string, []> var_1666_equation_0 = const()[name = tensor<string, []>("op_1666_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1666_cast_fp16 = einsum(equation = var_1666_equation_0, values = (var_1564_cast_fp16_10, var_1635_cast_fp16))[name = tensor<string, []>("op_1666_cast_fp16")];
            tensor<string, []> var_1668_equation_0 = const()[name = tensor<string, []>("op_1668_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1668_cast_fp16 = einsum(equation = var_1668_equation_0, values = (var_1564_cast_fp16_11, var_1636_cast_fp16))[name = tensor<string, []>("op_1668_cast_fp16")];
            tensor<string, []> var_1670_equation_0 = const()[name = tensor<string, []>("op_1670_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1670_cast_fp16 = einsum(equation = var_1670_equation_0, values = (var_1564_cast_fp16_12, var_1637_cast_fp16))[name = tensor<string, []>("op_1670_cast_fp16")];
            tensor<string, []> var_1672_equation_0 = const()[name = tensor<string, []>("op_1672_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1672_cast_fp16 = einsum(equation = var_1672_equation_0, values = (var_1564_cast_fp16_13, var_1638_cast_fp16))[name = tensor<string, []>("op_1672_cast_fp16")];
            tensor<string, []> var_1674_equation_0 = const()[name = tensor<string, []>("op_1674_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1674_cast_fp16 = einsum(equation = var_1674_equation_0, values = (var_1564_cast_fp16_14, var_1639_cast_fp16))[name = tensor<string, []>("op_1674_cast_fp16")];
            tensor<string, []> var_1676_equation_0 = const()[name = tensor<string, []>("op_1676_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1676_cast_fp16 = einsum(equation = var_1676_equation_0, values = (var_1564_cast_fp16_15, var_1640_cast_fp16))[name = tensor<string, []>("op_1676_cast_fp16")];
            tensor<string, []> var_1678_equation_0 = const()[name = tensor<string, []>("op_1678_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1678_cast_fp16 = einsum(equation = var_1678_equation_0, values = (var_1564_cast_fp16_16, var_1641_cast_fp16))[name = tensor<string, []>("op_1678_cast_fp16")];
            tensor<string, []> var_1680_equation_0 = const()[name = tensor<string, []>("op_1680_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1680_cast_fp16 = einsum(equation = var_1680_equation_0, values = (var_1564_cast_fp16_17, var_1642_cast_fp16))[name = tensor<string, []>("op_1680_cast_fp16")];
            tensor<string, []> var_1682_equation_0 = const()[name = tensor<string, []>("op_1682_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1682_cast_fp16 = einsum(equation = var_1682_equation_0, values = (var_1564_cast_fp16_18, var_1643_cast_fp16))[name = tensor<string, []>("op_1682_cast_fp16")];
            tensor<string, []> var_1684_equation_0 = const()[name = tensor<string, []>("op_1684_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1684_cast_fp16 = einsum(equation = var_1684_equation_0, values = (var_1564_cast_fp16_19, var_1644_cast_fp16))[name = tensor<string, []>("op_1684_cast_fp16")];
            tensor<bool, []> input_55_interleave_0 = const()[name = tensor<string, []>("input_55_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_55_cast_fp16 = concat(axis = var_1469, interleave = input_55_interleave_0, values = (var_1646_cast_fp16, var_1648_cast_fp16, var_1650_cast_fp16, var_1652_cast_fp16, var_1654_cast_fp16, var_1656_cast_fp16, var_1658_cast_fp16, var_1660_cast_fp16, var_1662_cast_fp16, var_1664_cast_fp16, var_1666_cast_fp16, var_1668_cast_fp16, var_1670_cast_fp16, var_1672_cast_fp16, var_1674_cast_fp16, var_1676_cast_fp16, var_1678_cast_fp16, var_1680_cast_fp16, var_1682_cast_fp16, var_1684_cast_fp16))[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<string, []> var_1693_pad_type_0 = const()[name = tensor<string, []>("op_1693_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1693_strides_0 = const()[name = tensor<string, []>("op_1693_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1693_pad_0 = const()[name = tensor<string, []>("op_1693_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1693_dilations_0 = const()[name = tensor<string, []>("op_1693_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1693_groups_0 = const()[name = tensor<string, []>("op_1693_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_5_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(221266432)))];
            tensor<fp16, [1280]> blocks_5_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(224543296)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1693_cast_fp16 = conv(bias = blocks_5_attn_out_bias_to_fp16, dilations = var_1693_dilations_0, groups = var_1693_groups_0, pad = var_1693_pad_0, pad_type = var_1693_pad_type_0, strides = var_1693_strides_0, weight = blocks_5_attn_out_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("op_1693_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = var_1693_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> input_57_axes_0 = const()[name = tensor<string, []>("input_57_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_57_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(224545920)))];
            tensor<fp16, [1280]> input_57_beta_0_to_fp16 = const()[name = tensor<string, []>("input_57_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(224548544)))];
            tensor<fp16, []> var_1703_to_fp16 = const()[name = tensor<string, []>("op_1703_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_57_cast_fp16 = layer_norm(axes = input_57_axes_0, beta = input_57_beta_0_to_fp16, epsilon = var_1703_to_fp16, gamma = input_57_gamma_0_to_fp16, x = inputs_23_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_59_pad_type_0 = const()[name = tensor<string, []>("input_59_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_59_strides_0 = const()[name = tensor<string, []>("input_59_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_59_pad_0 = const()[name = tensor<string, []>("input_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_59_dilations_0 = const()[name = tensor<string, []>("input_59_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_59_groups_0 = const()[name = tensor<string, []>("input_59_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_5_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(224551168)))];
            tensor<fp16, [5120]> blocks_5_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237658432)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_59_cast_fp16 = conv(bias = blocks_5_mlp_0_bias_to_fp16, dilations = input_59_dilations_0, groups = input_59_groups_0, pad = input_59_pad_0, pad_type = input_59_pad_type_0, strides = input_59_strides_0, weight = blocks_5_mlp_0_weight_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<string, []> input_61_mode_0 = const()[name = tensor<string, []>("input_61_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_61_cast_fp16 = gelu(mode = input_61_mode_0, x = input_59_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<string, []> var_1729_pad_type_0 = const()[name = tensor<string, []>("op_1729_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1729_strides_0 = const()[name = tensor<string, []>("op_1729_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1729_pad_0 = const()[name = tensor<string, []>("op_1729_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1729_dilations_0 = const()[name = tensor<string, []>("op_1729_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1729_groups_0 = const()[name = tensor<string, []>("op_1729_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_5_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237668736)))];
            tensor<fp16, [1280]> blocks_5_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250776000)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1729_cast_fp16 = conv(bias = blocks_5_mlp_2_bias_to_fp16, dilations = var_1729_dilations_0, groups = var_1729_groups_0, pad = var_1729_pad_0, pad_type = var_1729_pad_type_0, strides = var_1729_strides_0, weight = blocks_5_mlp_2_weight_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("op_1729_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_25_cast_fp16 = add(x = inputs_23_cast_fp16, y = var_1729_cast_fp16)[name = tensor<string, []>("inputs_25_cast_fp16")];
            tensor<int32, []> var_1738 = const()[name = tensor<string, []>("op_1738"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_63_axes_0 = const()[name = tensor<string, []>("input_63_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_63_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_63_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250778624)))];
            tensor<fp16, [1280]> input_63_beta_0_to_fp16 = const()[name = tensor<string, []>("input_63_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250781248)))];
            tensor<fp16, []> var_1754_to_fp16 = const()[name = tensor<string, []>("op_1754_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_63_cast_fp16 = layer_norm(axes = input_63_axes_0, beta = input_63_beta_0_to_fp16, epsilon = var_1754_to_fp16, gamma = input_63_gamma_0_to_fp16, x = inputs_25_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<string, []> q_13_pad_type_0 = const()[name = tensor<string, []>("q_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_13_strides_0 = const()[name = tensor<string, []>("q_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_13_pad_0 = const()[name = tensor<string, []>("q_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_13_dilations_0 = const()[name = tensor<string, []>("q_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_13_groups_0 = const()[name = tensor<string, []>("q_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_1789_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1789_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250783872)))];
            tensor<fp16, [1280]> var_1789_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1789_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254060736)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1789_cast_fp16 = conv(bias = var_1789_bias_0_to_fp16, dilations = q_13_dilations_0, groups = q_13_groups_0, pad = q_13_pad_0, pad_type = q_13_pad_type_0, strides = q_13_strides_0, weight = var_1789_weight_0_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("op_1789_cast_fp16")];
            tensor<string, []> k_13_pad_type_0 = const()[name = tensor<string, []>("k_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_13_strides_0 = const()[name = tensor<string, []>("k_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_13_pad_0 = const()[name = tensor<string, []>("k_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_13_dilations_0 = const()[name = tensor<string, []>("k_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_13_groups_0 = const()[name = tensor<string, []>("k_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_6_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254063360)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_13_cast_fp16 = conv(dilations = k_13_dilations_0, groups = k_13_groups_0, pad = k_13_pad_0, pad_type = k_13_pad_type_0, strides = k_13_strides_0, weight = blocks_6_attn_key_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("k_13_cast_fp16")];
            tensor<string, []> var_1787_pad_type_0 = const()[name = tensor<string, []>("op_1787_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1787_strides_0 = const()[name = tensor<string, []>("op_1787_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1787_pad_0 = const()[name = tensor<string, []>("op_1787_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1787_dilations_0 = const()[name = tensor<string, []>("op_1787_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1787_groups_0 = const()[name = tensor<string, []>("op_1787_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_6_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(257340224)))];
            tensor<fp16, [1280]> blocks_6_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260617088)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1787_cast_fp16 = conv(bias = blocks_6_attn_value_bias_to_fp16, dilations = var_1787_dilations_0, groups = var_1787_groups_0, pad = var_1787_pad_0, pad_type = var_1787_pad_type_0, strides = var_1787_strides_0, weight = blocks_6_attn_value_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("op_1787_cast_fp16")];
            tensor<int32, [20]> tile_18 = const()[name = tensor<string, []>("tile_18"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1790_axis_0 = const()[name = tensor<string, []>("op_1790_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1790_cast_fp16_19 = split(axis = var_1790_axis_0, split_sizes = tile_18, x = var_1789_cast_fp16)[name = tensor<string, []>("op_1790_cast_fp16")];
            tensor<int32, [4]> var_1811_perm_0 = const()[name = tensor<string, []>("op_1811_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_19 = const()[name = tensor<string, []>("tile_19"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1812_axis_0 = const()[name = tensor<string, []>("op_1812_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_1811_cast_fp16 = transpose(perm = var_1811_perm_0, x = k_13_cast_fp16)[name = tensor<string, []>("transpose_26")];
            tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_1812_cast_fp16_19 = split(axis = var_1812_axis_0, split_sizes = tile_19, x = var_1811_cast_fp16)[name = tensor<string, []>("op_1812_cast_fp16")];
            tensor<int32, [20]> tile_20 = const()[name = tensor<string, []>("tile_20"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1833_axis_0 = const()[name = tensor<string, []>("op_1833_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_1833_cast_fp16_19 = split(axis = var_1833_axis_0, split_sizes = tile_20, x = var_1787_cast_fp16)[name = tensor<string, []>("op_1833_cast_fp16")];
            tensor<string, []> aw_241_equation_0 = const()[name = tensor<string, []>("aw_241_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_241_cast_fp16 = einsum(equation = aw_241_equation_0, values = (var_1812_cast_fp16_0, var_1790_cast_fp16_0))[name = tensor<string, []>("aw_241_cast_fp16")];
            tensor<string, []> aw_243_equation_0 = const()[name = tensor<string, []>("aw_243_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_243_cast_fp16 = einsum(equation = aw_243_equation_0, values = (var_1812_cast_fp16_1, var_1790_cast_fp16_1))[name = tensor<string, []>("aw_243_cast_fp16")];
            tensor<string, []> aw_245_equation_0 = const()[name = tensor<string, []>("aw_245_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_245_cast_fp16 = einsum(equation = aw_245_equation_0, values = (var_1812_cast_fp16_2, var_1790_cast_fp16_2))[name = tensor<string, []>("aw_245_cast_fp16")];
            tensor<string, []> aw_247_equation_0 = const()[name = tensor<string, []>("aw_247_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_247_cast_fp16 = einsum(equation = aw_247_equation_0, values = (var_1812_cast_fp16_3, var_1790_cast_fp16_3))[name = tensor<string, []>("aw_247_cast_fp16")];
            tensor<string, []> aw_249_equation_0 = const()[name = tensor<string, []>("aw_249_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_249_cast_fp16 = einsum(equation = aw_249_equation_0, values = (var_1812_cast_fp16_4, var_1790_cast_fp16_4))[name = tensor<string, []>("aw_249_cast_fp16")];
            tensor<string, []> aw_251_equation_0 = const()[name = tensor<string, []>("aw_251_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_251_cast_fp16 = einsum(equation = aw_251_equation_0, values = (var_1812_cast_fp16_5, var_1790_cast_fp16_5))[name = tensor<string, []>("aw_251_cast_fp16")];
            tensor<string, []> aw_253_equation_0 = const()[name = tensor<string, []>("aw_253_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_253_cast_fp16 = einsum(equation = aw_253_equation_0, values = (var_1812_cast_fp16_6, var_1790_cast_fp16_6))[name = tensor<string, []>("aw_253_cast_fp16")];
            tensor<string, []> aw_255_equation_0 = const()[name = tensor<string, []>("aw_255_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_255_cast_fp16 = einsum(equation = aw_255_equation_0, values = (var_1812_cast_fp16_7, var_1790_cast_fp16_7))[name = tensor<string, []>("aw_255_cast_fp16")];
            tensor<string, []> aw_257_equation_0 = const()[name = tensor<string, []>("aw_257_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_257_cast_fp16 = einsum(equation = aw_257_equation_0, values = (var_1812_cast_fp16_8, var_1790_cast_fp16_8))[name = tensor<string, []>("aw_257_cast_fp16")];
            tensor<string, []> aw_259_equation_0 = const()[name = tensor<string, []>("aw_259_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_259_cast_fp16 = einsum(equation = aw_259_equation_0, values = (var_1812_cast_fp16_9, var_1790_cast_fp16_9))[name = tensor<string, []>("aw_259_cast_fp16")];
            tensor<string, []> aw_261_equation_0 = const()[name = tensor<string, []>("aw_261_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_261_cast_fp16 = einsum(equation = aw_261_equation_0, values = (var_1812_cast_fp16_10, var_1790_cast_fp16_10))[name = tensor<string, []>("aw_261_cast_fp16")];
            tensor<string, []> aw_263_equation_0 = const()[name = tensor<string, []>("aw_263_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_263_cast_fp16 = einsum(equation = aw_263_equation_0, values = (var_1812_cast_fp16_11, var_1790_cast_fp16_11))[name = tensor<string, []>("aw_263_cast_fp16")];
            tensor<string, []> aw_265_equation_0 = const()[name = tensor<string, []>("aw_265_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_265_cast_fp16 = einsum(equation = aw_265_equation_0, values = (var_1812_cast_fp16_12, var_1790_cast_fp16_12))[name = tensor<string, []>("aw_265_cast_fp16")];
            tensor<string, []> aw_267_equation_0 = const()[name = tensor<string, []>("aw_267_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_267_cast_fp16 = einsum(equation = aw_267_equation_0, values = (var_1812_cast_fp16_13, var_1790_cast_fp16_13))[name = tensor<string, []>("aw_267_cast_fp16")];
            tensor<string, []> aw_269_equation_0 = const()[name = tensor<string, []>("aw_269_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_269_cast_fp16 = einsum(equation = aw_269_equation_0, values = (var_1812_cast_fp16_14, var_1790_cast_fp16_14))[name = tensor<string, []>("aw_269_cast_fp16")];
            tensor<string, []> aw_271_equation_0 = const()[name = tensor<string, []>("aw_271_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_271_cast_fp16 = einsum(equation = aw_271_equation_0, values = (var_1812_cast_fp16_15, var_1790_cast_fp16_15))[name = tensor<string, []>("aw_271_cast_fp16")];
            tensor<string, []> aw_273_equation_0 = const()[name = tensor<string, []>("aw_273_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_273_cast_fp16 = einsum(equation = aw_273_equation_0, values = (var_1812_cast_fp16_16, var_1790_cast_fp16_16))[name = tensor<string, []>("aw_273_cast_fp16")];
            tensor<string, []> aw_275_equation_0 = const()[name = tensor<string, []>("aw_275_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_275_cast_fp16 = einsum(equation = aw_275_equation_0, values = (var_1812_cast_fp16_17, var_1790_cast_fp16_17))[name = tensor<string, []>("aw_275_cast_fp16")];
            tensor<string, []> aw_277_equation_0 = const()[name = tensor<string, []>("aw_277_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_277_cast_fp16 = einsum(equation = aw_277_equation_0, values = (var_1812_cast_fp16_18, var_1790_cast_fp16_18))[name = tensor<string, []>("aw_277_cast_fp16")];
            tensor<string, []> aw_279_equation_0 = const()[name = tensor<string, []>("aw_279_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_279_cast_fp16 = einsum(equation = aw_279_equation_0, values = (var_1812_cast_fp16_19, var_1790_cast_fp16_19))[name = tensor<string, []>("aw_279_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1894_cast_fp16 = softmax(axis = var_1738, x = aw_241_cast_fp16)[name = tensor<string, []>("op_1894_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1895_cast_fp16 = softmax(axis = var_1738, x = aw_243_cast_fp16)[name = tensor<string, []>("op_1895_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1896_cast_fp16 = softmax(axis = var_1738, x = aw_245_cast_fp16)[name = tensor<string, []>("op_1896_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1897_cast_fp16 = softmax(axis = var_1738, x = aw_247_cast_fp16)[name = tensor<string, []>("op_1897_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1898_cast_fp16 = softmax(axis = var_1738, x = aw_249_cast_fp16)[name = tensor<string, []>("op_1898_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1899_cast_fp16 = softmax(axis = var_1738, x = aw_251_cast_fp16)[name = tensor<string, []>("op_1899_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1900_cast_fp16 = softmax(axis = var_1738, x = aw_253_cast_fp16)[name = tensor<string, []>("op_1900_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1901_cast_fp16 = softmax(axis = var_1738, x = aw_255_cast_fp16)[name = tensor<string, []>("op_1901_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1902_cast_fp16 = softmax(axis = var_1738, x = aw_257_cast_fp16)[name = tensor<string, []>("op_1902_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1903_cast_fp16 = softmax(axis = var_1738, x = aw_259_cast_fp16)[name = tensor<string, []>("op_1903_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1904_cast_fp16 = softmax(axis = var_1738, x = aw_261_cast_fp16)[name = tensor<string, []>("op_1904_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1905_cast_fp16 = softmax(axis = var_1738, x = aw_263_cast_fp16)[name = tensor<string, []>("op_1905_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1906_cast_fp16 = softmax(axis = var_1738, x = aw_265_cast_fp16)[name = tensor<string, []>("op_1906_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1907_cast_fp16 = softmax(axis = var_1738, x = aw_267_cast_fp16)[name = tensor<string, []>("op_1907_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1908_cast_fp16 = softmax(axis = var_1738, x = aw_269_cast_fp16)[name = tensor<string, []>("op_1908_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1909_cast_fp16 = softmax(axis = var_1738, x = aw_271_cast_fp16)[name = tensor<string, []>("op_1909_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1910_cast_fp16 = softmax(axis = var_1738, x = aw_273_cast_fp16)[name = tensor<string, []>("op_1910_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1911_cast_fp16 = softmax(axis = var_1738, x = aw_275_cast_fp16)[name = tensor<string, []>("op_1911_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1912_cast_fp16 = softmax(axis = var_1738, x = aw_277_cast_fp16)[name = tensor<string, []>("op_1912_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1913_cast_fp16 = softmax(axis = var_1738, x = aw_279_cast_fp16)[name = tensor<string, []>("op_1913_cast_fp16")];
            tensor<string, []> var_1915_equation_0 = const()[name = tensor<string, []>("op_1915_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1915_cast_fp16 = einsum(equation = var_1915_equation_0, values = (var_1833_cast_fp16_0, var_1894_cast_fp16))[name = tensor<string, []>("op_1915_cast_fp16")];
            tensor<string, []> var_1917_equation_0 = const()[name = tensor<string, []>("op_1917_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1917_cast_fp16 = einsum(equation = var_1917_equation_0, values = (var_1833_cast_fp16_1, var_1895_cast_fp16))[name = tensor<string, []>("op_1917_cast_fp16")];
            tensor<string, []> var_1919_equation_0 = const()[name = tensor<string, []>("op_1919_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1919_cast_fp16 = einsum(equation = var_1919_equation_0, values = (var_1833_cast_fp16_2, var_1896_cast_fp16))[name = tensor<string, []>("op_1919_cast_fp16")];
            tensor<string, []> var_1921_equation_0 = const()[name = tensor<string, []>("op_1921_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1921_cast_fp16 = einsum(equation = var_1921_equation_0, values = (var_1833_cast_fp16_3, var_1897_cast_fp16))[name = tensor<string, []>("op_1921_cast_fp16")];
            tensor<string, []> var_1923_equation_0 = const()[name = tensor<string, []>("op_1923_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1923_cast_fp16 = einsum(equation = var_1923_equation_0, values = (var_1833_cast_fp16_4, var_1898_cast_fp16))[name = tensor<string, []>("op_1923_cast_fp16")];
            tensor<string, []> var_1925_equation_0 = const()[name = tensor<string, []>("op_1925_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1925_cast_fp16 = einsum(equation = var_1925_equation_0, values = (var_1833_cast_fp16_5, var_1899_cast_fp16))[name = tensor<string, []>("op_1925_cast_fp16")];
            tensor<string, []> var_1927_equation_0 = const()[name = tensor<string, []>("op_1927_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1927_cast_fp16 = einsum(equation = var_1927_equation_0, values = (var_1833_cast_fp16_6, var_1900_cast_fp16))[name = tensor<string, []>("op_1927_cast_fp16")];
            tensor<string, []> var_1929_equation_0 = const()[name = tensor<string, []>("op_1929_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1929_cast_fp16 = einsum(equation = var_1929_equation_0, values = (var_1833_cast_fp16_7, var_1901_cast_fp16))[name = tensor<string, []>("op_1929_cast_fp16")];
            tensor<string, []> var_1931_equation_0 = const()[name = tensor<string, []>("op_1931_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1931_cast_fp16 = einsum(equation = var_1931_equation_0, values = (var_1833_cast_fp16_8, var_1902_cast_fp16))[name = tensor<string, []>("op_1931_cast_fp16")];
            tensor<string, []> var_1933_equation_0 = const()[name = tensor<string, []>("op_1933_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1933_cast_fp16 = einsum(equation = var_1933_equation_0, values = (var_1833_cast_fp16_9, var_1903_cast_fp16))[name = tensor<string, []>("op_1933_cast_fp16")];
            tensor<string, []> var_1935_equation_0 = const()[name = tensor<string, []>("op_1935_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1935_cast_fp16 = einsum(equation = var_1935_equation_0, values = (var_1833_cast_fp16_10, var_1904_cast_fp16))[name = tensor<string, []>("op_1935_cast_fp16")];
            tensor<string, []> var_1937_equation_0 = const()[name = tensor<string, []>("op_1937_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1937_cast_fp16 = einsum(equation = var_1937_equation_0, values = (var_1833_cast_fp16_11, var_1905_cast_fp16))[name = tensor<string, []>("op_1937_cast_fp16")];
            tensor<string, []> var_1939_equation_0 = const()[name = tensor<string, []>("op_1939_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1939_cast_fp16 = einsum(equation = var_1939_equation_0, values = (var_1833_cast_fp16_12, var_1906_cast_fp16))[name = tensor<string, []>("op_1939_cast_fp16")];
            tensor<string, []> var_1941_equation_0 = const()[name = tensor<string, []>("op_1941_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1941_cast_fp16 = einsum(equation = var_1941_equation_0, values = (var_1833_cast_fp16_13, var_1907_cast_fp16))[name = tensor<string, []>("op_1941_cast_fp16")];
            tensor<string, []> var_1943_equation_0 = const()[name = tensor<string, []>("op_1943_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1943_cast_fp16 = einsum(equation = var_1943_equation_0, values = (var_1833_cast_fp16_14, var_1908_cast_fp16))[name = tensor<string, []>("op_1943_cast_fp16")];
            tensor<string, []> var_1945_equation_0 = const()[name = tensor<string, []>("op_1945_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1945_cast_fp16 = einsum(equation = var_1945_equation_0, values = (var_1833_cast_fp16_15, var_1909_cast_fp16))[name = tensor<string, []>("op_1945_cast_fp16")];
            tensor<string, []> var_1947_equation_0 = const()[name = tensor<string, []>("op_1947_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1947_cast_fp16 = einsum(equation = var_1947_equation_0, values = (var_1833_cast_fp16_16, var_1910_cast_fp16))[name = tensor<string, []>("op_1947_cast_fp16")];
            tensor<string, []> var_1949_equation_0 = const()[name = tensor<string, []>("op_1949_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1949_cast_fp16 = einsum(equation = var_1949_equation_0, values = (var_1833_cast_fp16_17, var_1911_cast_fp16))[name = tensor<string, []>("op_1949_cast_fp16")];
            tensor<string, []> var_1951_equation_0 = const()[name = tensor<string, []>("op_1951_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1951_cast_fp16 = einsum(equation = var_1951_equation_0, values = (var_1833_cast_fp16_18, var_1912_cast_fp16))[name = tensor<string, []>("op_1951_cast_fp16")];
            tensor<string, []> var_1953_equation_0 = const()[name = tensor<string, []>("op_1953_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1953_cast_fp16 = einsum(equation = var_1953_equation_0, values = (var_1833_cast_fp16_19, var_1913_cast_fp16))[name = tensor<string, []>("op_1953_cast_fp16")];
            tensor<bool, []> input_65_interleave_0 = const()[name = tensor<string, []>("input_65_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_65_cast_fp16 = concat(axis = var_1738, interleave = input_65_interleave_0, values = (var_1915_cast_fp16, var_1917_cast_fp16, var_1919_cast_fp16, var_1921_cast_fp16, var_1923_cast_fp16, var_1925_cast_fp16, var_1927_cast_fp16, var_1929_cast_fp16, var_1931_cast_fp16, var_1933_cast_fp16, var_1935_cast_fp16, var_1937_cast_fp16, var_1939_cast_fp16, var_1941_cast_fp16, var_1943_cast_fp16, var_1945_cast_fp16, var_1947_cast_fp16, var_1949_cast_fp16, var_1951_cast_fp16, var_1953_cast_fp16))[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<string, []> var_1962_pad_type_0 = const()[name = tensor<string, []>("op_1962_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1962_strides_0 = const()[name = tensor<string, []>("op_1962_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1962_pad_0 = const()[name = tensor<string, []>("op_1962_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1962_dilations_0 = const()[name = tensor<string, []>("op_1962_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1962_groups_0 = const()[name = tensor<string, []>("op_1962_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_6_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260619712)))];
            tensor<fp16, [1280]> blocks_6_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263896576)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1962_cast_fp16 = conv(bias = blocks_6_attn_out_bias_to_fp16, dilations = var_1962_dilations_0, groups = var_1962_groups_0, pad = var_1962_pad_0, pad_type = var_1962_pad_type_0, strides = var_1962_strides_0, weight = blocks_6_attn_out_weight_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("op_1962_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_27_cast_fp16 = add(x = inputs_25_cast_fp16, y = var_1962_cast_fp16)[name = tensor<string, []>("inputs_27_cast_fp16")];
            tensor<int32, [1]> input_67_axes_0 = const()[name = tensor<string, []>("input_67_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_67_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263899200)))];
            tensor<fp16, [1280]> input_67_beta_0_to_fp16 = const()[name = tensor<string, []>("input_67_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263901824)))];
            tensor<fp16, []> var_1972_to_fp16 = const()[name = tensor<string, []>("op_1972_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_67_cast_fp16 = layer_norm(axes = input_67_axes_0, beta = input_67_beta_0_to_fp16, epsilon = var_1972_to_fp16, gamma = input_67_gamma_0_to_fp16, x = inputs_27_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_69_strides_0 = const()[name = tensor<string, []>("input_69_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_69_dilations_0 = const()[name = tensor<string, []>("input_69_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_69_groups_0 = const()[name = tensor<string, []>("input_69_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_6_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263904448)))];
            tensor<fp16, [5120]> blocks_6_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277011712)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_69_cast_fp16 = conv(bias = blocks_6_mlp_0_bias_to_fp16, dilations = input_69_dilations_0, groups = input_69_groups_0, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = input_69_strides_0, weight = blocks_6_mlp_0_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<string, []> input_71_mode_0 = const()[name = tensor<string, []>("input_71_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_71_cast_fp16 = gelu(mode = input_71_mode_0, x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<string, []> var_1998_pad_type_0 = const()[name = tensor<string, []>("op_1998_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1998_strides_0 = const()[name = tensor<string, []>("op_1998_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1998_pad_0 = const()[name = tensor<string, []>("op_1998_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1998_dilations_0 = const()[name = tensor<string, []>("op_1998_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1998_groups_0 = const()[name = tensor<string, []>("op_1998_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_6_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277022016)))];
            tensor<fp16, [1280]> blocks_6_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290129280)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_1998_cast_fp16 = conv(bias = blocks_6_mlp_2_bias_to_fp16, dilations = var_1998_dilations_0, groups = var_1998_groups_0, pad = var_1998_pad_0, pad_type = var_1998_pad_type_0, strides = var_1998_strides_0, weight = blocks_6_mlp_2_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("op_1998_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_29_cast_fp16 = add(x = inputs_27_cast_fp16, y = var_1998_cast_fp16)[name = tensor<string, []>("inputs_29_cast_fp16")];
            tensor<int32, []> var_2007 = const()[name = tensor<string, []>("op_2007"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_73_axes_0 = const()[name = tensor<string, []>("input_73_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_73_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_73_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290131904)))];
            tensor<fp16, [1280]> input_73_beta_0_to_fp16 = const()[name = tensor<string, []>("input_73_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290134528)))];
            tensor<fp16, []> var_2023_to_fp16 = const()[name = tensor<string, []>("op_2023_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_73_cast_fp16 = layer_norm(axes = input_73_axes_0, beta = input_73_beta_0_to_fp16, epsilon = var_2023_to_fp16, gamma = input_73_gamma_0_to_fp16, x = inputs_29_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<string, []> q_15_pad_type_0 = const()[name = tensor<string, []>("q_15_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_15_strides_0 = const()[name = tensor<string, []>("q_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_15_pad_0 = const()[name = tensor<string, []>("q_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_15_dilations_0 = const()[name = tensor<string, []>("q_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_15_groups_0 = const()[name = tensor<string, []>("q_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_2058_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2058_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290137152)))];
            tensor<fp16, [1280]> var_2058_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2058_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293414016)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2058_cast_fp16 = conv(bias = var_2058_bias_0_to_fp16, dilations = q_15_dilations_0, groups = q_15_groups_0, pad = q_15_pad_0, pad_type = q_15_pad_type_0, strides = q_15_strides_0, weight = var_2058_weight_0_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("op_2058_cast_fp16")];
            tensor<string, []> k_15_pad_type_0 = const()[name = tensor<string, []>("k_15_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_15_strides_0 = const()[name = tensor<string, []>("k_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_15_pad_0 = const()[name = tensor<string, []>("k_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_15_dilations_0 = const()[name = tensor<string, []>("k_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_15_groups_0 = const()[name = tensor<string, []>("k_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_7_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293416640)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_15_cast_fp16 = conv(dilations = k_15_dilations_0, groups = k_15_groups_0, pad = k_15_pad_0, pad_type = k_15_pad_type_0, strides = k_15_strides_0, weight = blocks_7_attn_key_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("k_15_cast_fp16")];
            tensor<string, []> var_2056_pad_type_0 = const()[name = tensor<string, []>("op_2056_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2056_strides_0 = const()[name = tensor<string, []>("op_2056_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2056_pad_0 = const()[name = tensor<string, []>("op_2056_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2056_dilations_0 = const()[name = tensor<string, []>("op_2056_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2056_groups_0 = const()[name = tensor<string, []>("op_2056_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_7_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296693504)))];
            tensor<fp16, [1280]> blocks_7_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299970368)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2056_cast_fp16 = conv(bias = blocks_7_attn_value_bias_to_fp16, dilations = var_2056_dilations_0, groups = var_2056_groups_0, pad = var_2056_pad_0, pad_type = var_2056_pad_type_0, strides = var_2056_strides_0, weight = blocks_7_attn_value_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("op_2056_cast_fp16")];
            tensor<int32, [20]> tile_21 = const()[name = tensor<string, []>("tile_21"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2059_axis_0 = const()[name = tensor<string, []>("op_2059_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2059_cast_fp16_19 = split(axis = var_2059_axis_0, split_sizes = tile_21, x = var_2058_cast_fp16)[name = tensor<string, []>("op_2059_cast_fp16")];
            tensor<int32, [4]> var_2080_perm_0 = const()[name = tensor<string, []>("op_2080_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_22 = const()[name = tensor<string, []>("tile_22"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2081_axis_0 = const()[name = tensor<string, []>("op_2081_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_2080_cast_fp16 = transpose(perm = var_2080_perm_0, x = k_15_cast_fp16)[name = tensor<string, []>("transpose_25")];
            tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_2081_cast_fp16_19 = split(axis = var_2081_axis_0, split_sizes = tile_22, x = var_2080_cast_fp16)[name = tensor<string, []>("op_2081_cast_fp16")];
            tensor<int32, [20]> tile_23 = const()[name = tensor<string, []>("tile_23"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2102_axis_0 = const()[name = tensor<string, []>("op_2102_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2102_cast_fp16_19 = split(axis = var_2102_axis_0, split_sizes = tile_23, x = var_2056_cast_fp16)[name = tensor<string, []>("op_2102_cast_fp16")];
            tensor<string, []> aw_281_equation_0 = const()[name = tensor<string, []>("aw_281_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_281_cast_fp16 = einsum(equation = aw_281_equation_0, values = (var_2081_cast_fp16_0, var_2059_cast_fp16_0))[name = tensor<string, []>("aw_281_cast_fp16")];
            tensor<string, []> aw_283_equation_0 = const()[name = tensor<string, []>("aw_283_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_283_cast_fp16 = einsum(equation = aw_283_equation_0, values = (var_2081_cast_fp16_1, var_2059_cast_fp16_1))[name = tensor<string, []>("aw_283_cast_fp16")];
            tensor<string, []> aw_285_equation_0 = const()[name = tensor<string, []>("aw_285_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_285_cast_fp16 = einsum(equation = aw_285_equation_0, values = (var_2081_cast_fp16_2, var_2059_cast_fp16_2))[name = tensor<string, []>("aw_285_cast_fp16")];
            tensor<string, []> aw_287_equation_0 = const()[name = tensor<string, []>("aw_287_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_287_cast_fp16 = einsum(equation = aw_287_equation_0, values = (var_2081_cast_fp16_3, var_2059_cast_fp16_3))[name = tensor<string, []>("aw_287_cast_fp16")];
            tensor<string, []> aw_289_equation_0 = const()[name = tensor<string, []>("aw_289_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_289_cast_fp16 = einsum(equation = aw_289_equation_0, values = (var_2081_cast_fp16_4, var_2059_cast_fp16_4))[name = tensor<string, []>("aw_289_cast_fp16")];
            tensor<string, []> aw_291_equation_0 = const()[name = tensor<string, []>("aw_291_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_291_cast_fp16 = einsum(equation = aw_291_equation_0, values = (var_2081_cast_fp16_5, var_2059_cast_fp16_5))[name = tensor<string, []>("aw_291_cast_fp16")];
            tensor<string, []> aw_293_equation_0 = const()[name = tensor<string, []>("aw_293_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_293_cast_fp16 = einsum(equation = aw_293_equation_0, values = (var_2081_cast_fp16_6, var_2059_cast_fp16_6))[name = tensor<string, []>("aw_293_cast_fp16")];
            tensor<string, []> aw_295_equation_0 = const()[name = tensor<string, []>("aw_295_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_295_cast_fp16 = einsum(equation = aw_295_equation_0, values = (var_2081_cast_fp16_7, var_2059_cast_fp16_7))[name = tensor<string, []>("aw_295_cast_fp16")];
            tensor<string, []> aw_297_equation_0 = const()[name = tensor<string, []>("aw_297_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_297_cast_fp16 = einsum(equation = aw_297_equation_0, values = (var_2081_cast_fp16_8, var_2059_cast_fp16_8))[name = tensor<string, []>("aw_297_cast_fp16")];
            tensor<string, []> aw_299_equation_0 = const()[name = tensor<string, []>("aw_299_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_299_cast_fp16 = einsum(equation = aw_299_equation_0, values = (var_2081_cast_fp16_9, var_2059_cast_fp16_9))[name = tensor<string, []>("aw_299_cast_fp16")];
            tensor<string, []> aw_301_equation_0 = const()[name = tensor<string, []>("aw_301_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_301_cast_fp16 = einsum(equation = aw_301_equation_0, values = (var_2081_cast_fp16_10, var_2059_cast_fp16_10))[name = tensor<string, []>("aw_301_cast_fp16")];
            tensor<string, []> aw_303_equation_0 = const()[name = tensor<string, []>("aw_303_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_303_cast_fp16 = einsum(equation = aw_303_equation_0, values = (var_2081_cast_fp16_11, var_2059_cast_fp16_11))[name = tensor<string, []>("aw_303_cast_fp16")];
            tensor<string, []> aw_305_equation_0 = const()[name = tensor<string, []>("aw_305_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_305_cast_fp16 = einsum(equation = aw_305_equation_0, values = (var_2081_cast_fp16_12, var_2059_cast_fp16_12))[name = tensor<string, []>("aw_305_cast_fp16")];
            tensor<string, []> aw_307_equation_0 = const()[name = tensor<string, []>("aw_307_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_307_cast_fp16 = einsum(equation = aw_307_equation_0, values = (var_2081_cast_fp16_13, var_2059_cast_fp16_13))[name = tensor<string, []>("aw_307_cast_fp16")];
            tensor<string, []> aw_309_equation_0 = const()[name = tensor<string, []>("aw_309_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_309_cast_fp16 = einsum(equation = aw_309_equation_0, values = (var_2081_cast_fp16_14, var_2059_cast_fp16_14))[name = tensor<string, []>("aw_309_cast_fp16")];
            tensor<string, []> aw_311_equation_0 = const()[name = tensor<string, []>("aw_311_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_311_cast_fp16 = einsum(equation = aw_311_equation_0, values = (var_2081_cast_fp16_15, var_2059_cast_fp16_15))[name = tensor<string, []>("aw_311_cast_fp16")];
            tensor<string, []> aw_313_equation_0 = const()[name = tensor<string, []>("aw_313_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_313_cast_fp16 = einsum(equation = aw_313_equation_0, values = (var_2081_cast_fp16_16, var_2059_cast_fp16_16))[name = tensor<string, []>("aw_313_cast_fp16")];
            tensor<string, []> aw_315_equation_0 = const()[name = tensor<string, []>("aw_315_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_315_cast_fp16 = einsum(equation = aw_315_equation_0, values = (var_2081_cast_fp16_17, var_2059_cast_fp16_17))[name = tensor<string, []>("aw_315_cast_fp16")];
            tensor<string, []> aw_317_equation_0 = const()[name = tensor<string, []>("aw_317_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_317_cast_fp16 = einsum(equation = aw_317_equation_0, values = (var_2081_cast_fp16_18, var_2059_cast_fp16_18))[name = tensor<string, []>("aw_317_cast_fp16")];
            tensor<string, []> aw_319_equation_0 = const()[name = tensor<string, []>("aw_319_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_319_cast_fp16 = einsum(equation = aw_319_equation_0, values = (var_2081_cast_fp16_19, var_2059_cast_fp16_19))[name = tensor<string, []>("aw_319_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2163_cast_fp16 = softmax(axis = var_2007, x = aw_281_cast_fp16)[name = tensor<string, []>("op_2163_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2164_cast_fp16 = softmax(axis = var_2007, x = aw_283_cast_fp16)[name = tensor<string, []>("op_2164_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2165_cast_fp16 = softmax(axis = var_2007, x = aw_285_cast_fp16)[name = tensor<string, []>("op_2165_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2166_cast_fp16 = softmax(axis = var_2007, x = aw_287_cast_fp16)[name = tensor<string, []>("op_2166_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2167_cast_fp16 = softmax(axis = var_2007, x = aw_289_cast_fp16)[name = tensor<string, []>("op_2167_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2168_cast_fp16 = softmax(axis = var_2007, x = aw_291_cast_fp16)[name = tensor<string, []>("op_2168_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2169_cast_fp16 = softmax(axis = var_2007, x = aw_293_cast_fp16)[name = tensor<string, []>("op_2169_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2170_cast_fp16 = softmax(axis = var_2007, x = aw_295_cast_fp16)[name = tensor<string, []>("op_2170_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2171_cast_fp16 = softmax(axis = var_2007, x = aw_297_cast_fp16)[name = tensor<string, []>("op_2171_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2172_cast_fp16 = softmax(axis = var_2007, x = aw_299_cast_fp16)[name = tensor<string, []>("op_2172_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2173_cast_fp16 = softmax(axis = var_2007, x = aw_301_cast_fp16)[name = tensor<string, []>("op_2173_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2174_cast_fp16 = softmax(axis = var_2007, x = aw_303_cast_fp16)[name = tensor<string, []>("op_2174_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2175_cast_fp16 = softmax(axis = var_2007, x = aw_305_cast_fp16)[name = tensor<string, []>("op_2175_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2176_cast_fp16 = softmax(axis = var_2007, x = aw_307_cast_fp16)[name = tensor<string, []>("op_2176_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2177_cast_fp16 = softmax(axis = var_2007, x = aw_309_cast_fp16)[name = tensor<string, []>("op_2177_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2178_cast_fp16 = softmax(axis = var_2007, x = aw_311_cast_fp16)[name = tensor<string, []>("op_2178_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2179_cast_fp16 = softmax(axis = var_2007, x = aw_313_cast_fp16)[name = tensor<string, []>("op_2179_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2180_cast_fp16 = softmax(axis = var_2007, x = aw_315_cast_fp16)[name = tensor<string, []>("op_2180_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2181_cast_fp16 = softmax(axis = var_2007, x = aw_317_cast_fp16)[name = tensor<string, []>("op_2181_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2182_cast_fp16 = softmax(axis = var_2007, x = aw_319_cast_fp16)[name = tensor<string, []>("op_2182_cast_fp16")];
            tensor<string, []> var_2184_equation_0 = const()[name = tensor<string, []>("op_2184_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2184_cast_fp16 = einsum(equation = var_2184_equation_0, values = (var_2102_cast_fp16_0, var_2163_cast_fp16))[name = tensor<string, []>("op_2184_cast_fp16")];
            tensor<string, []> var_2186_equation_0 = const()[name = tensor<string, []>("op_2186_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2186_cast_fp16 = einsum(equation = var_2186_equation_0, values = (var_2102_cast_fp16_1, var_2164_cast_fp16))[name = tensor<string, []>("op_2186_cast_fp16")];
            tensor<string, []> var_2188_equation_0 = const()[name = tensor<string, []>("op_2188_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2188_cast_fp16 = einsum(equation = var_2188_equation_0, values = (var_2102_cast_fp16_2, var_2165_cast_fp16))[name = tensor<string, []>("op_2188_cast_fp16")];
            tensor<string, []> var_2190_equation_0 = const()[name = tensor<string, []>("op_2190_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2190_cast_fp16 = einsum(equation = var_2190_equation_0, values = (var_2102_cast_fp16_3, var_2166_cast_fp16))[name = tensor<string, []>("op_2190_cast_fp16")];
            tensor<string, []> var_2192_equation_0 = const()[name = tensor<string, []>("op_2192_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2192_cast_fp16 = einsum(equation = var_2192_equation_0, values = (var_2102_cast_fp16_4, var_2167_cast_fp16))[name = tensor<string, []>("op_2192_cast_fp16")];
            tensor<string, []> var_2194_equation_0 = const()[name = tensor<string, []>("op_2194_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2194_cast_fp16 = einsum(equation = var_2194_equation_0, values = (var_2102_cast_fp16_5, var_2168_cast_fp16))[name = tensor<string, []>("op_2194_cast_fp16")];
            tensor<string, []> var_2196_equation_0 = const()[name = tensor<string, []>("op_2196_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2196_cast_fp16 = einsum(equation = var_2196_equation_0, values = (var_2102_cast_fp16_6, var_2169_cast_fp16))[name = tensor<string, []>("op_2196_cast_fp16")];
            tensor<string, []> var_2198_equation_0 = const()[name = tensor<string, []>("op_2198_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2198_cast_fp16 = einsum(equation = var_2198_equation_0, values = (var_2102_cast_fp16_7, var_2170_cast_fp16))[name = tensor<string, []>("op_2198_cast_fp16")];
            tensor<string, []> var_2200_equation_0 = const()[name = tensor<string, []>("op_2200_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2200_cast_fp16 = einsum(equation = var_2200_equation_0, values = (var_2102_cast_fp16_8, var_2171_cast_fp16))[name = tensor<string, []>("op_2200_cast_fp16")];
            tensor<string, []> var_2202_equation_0 = const()[name = tensor<string, []>("op_2202_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2202_cast_fp16 = einsum(equation = var_2202_equation_0, values = (var_2102_cast_fp16_9, var_2172_cast_fp16))[name = tensor<string, []>("op_2202_cast_fp16")];
            tensor<string, []> var_2204_equation_0 = const()[name = tensor<string, []>("op_2204_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2204_cast_fp16 = einsum(equation = var_2204_equation_0, values = (var_2102_cast_fp16_10, var_2173_cast_fp16))[name = tensor<string, []>("op_2204_cast_fp16")];
            tensor<string, []> var_2206_equation_0 = const()[name = tensor<string, []>("op_2206_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2206_cast_fp16 = einsum(equation = var_2206_equation_0, values = (var_2102_cast_fp16_11, var_2174_cast_fp16))[name = tensor<string, []>("op_2206_cast_fp16")];
            tensor<string, []> var_2208_equation_0 = const()[name = tensor<string, []>("op_2208_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2208_cast_fp16 = einsum(equation = var_2208_equation_0, values = (var_2102_cast_fp16_12, var_2175_cast_fp16))[name = tensor<string, []>("op_2208_cast_fp16")];
            tensor<string, []> var_2210_equation_0 = const()[name = tensor<string, []>("op_2210_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2210_cast_fp16 = einsum(equation = var_2210_equation_0, values = (var_2102_cast_fp16_13, var_2176_cast_fp16))[name = tensor<string, []>("op_2210_cast_fp16")];
            tensor<string, []> var_2212_equation_0 = const()[name = tensor<string, []>("op_2212_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2212_cast_fp16 = einsum(equation = var_2212_equation_0, values = (var_2102_cast_fp16_14, var_2177_cast_fp16))[name = tensor<string, []>("op_2212_cast_fp16")];
            tensor<string, []> var_2214_equation_0 = const()[name = tensor<string, []>("op_2214_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2214_cast_fp16 = einsum(equation = var_2214_equation_0, values = (var_2102_cast_fp16_15, var_2178_cast_fp16))[name = tensor<string, []>("op_2214_cast_fp16")];
            tensor<string, []> var_2216_equation_0 = const()[name = tensor<string, []>("op_2216_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2216_cast_fp16 = einsum(equation = var_2216_equation_0, values = (var_2102_cast_fp16_16, var_2179_cast_fp16))[name = tensor<string, []>("op_2216_cast_fp16")];
            tensor<string, []> var_2218_equation_0 = const()[name = tensor<string, []>("op_2218_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2218_cast_fp16 = einsum(equation = var_2218_equation_0, values = (var_2102_cast_fp16_17, var_2180_cast_fp16))[name = tensor<string, []>("op_2218_cast_fp16")];
            tensor<string, []> var_2220_equation_0 = const()[name = tensor<string, []>("op_2220_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2220_cast_fp16 = einsum(equation = var_2220_equation_0, values = (var_2102_cast_fp16_18, var_2181_cast_fp16))[name = tensor<string, []>("op_2220_cast_fp16")];
            tensor<string, []> var_2222_equation_0 = const()[name = tensor<string, []>("op_2222_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2222_cast_fp16 = einsum(equation = var_2222_equation_0, values = (var_2102_cast_fp16_19, var_2182_cast_fp16))[name = tensor<string, []>("op_2222_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_75_cast_fp16 = concat(axis = var_2007, interleave = input_75_interleave_0, values = (var_2184_cast_fp16, var_2186_cast_fp16, var_2188_cast_fp16, var_2190_cast_fp16, var_2192_cast_fp16, var_2194_cast_fp16, var_2196_cast_fp16, var_2198_cast_fp16, var_2200_cast_fp16, var_2202_cast_fp16, var_2204_cast_fp16, var_2206_cast_fp16, var_2208_cast_fp16, var_2210_cast_fp16, var_2212_cast_fp16, var_2214_cast_fp16, var_2216_cast_fp16, var_2218_cast_fp16, var_2220_cast_fp16, var_2222_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<string, []> var_2231_pad_type_0 = const()[name = tensor<string, []>("op_2231_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2231_strides_0 = const()[name = tensor<string, []>("op_2231_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2231_pad_0 = const()[name = tensor<string, []>("op_2231_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2231_dilations_0 = const()[name = tensor<string, []>("op_2231_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2231_groups_0 = const()[name = tensor<string, []>("op_2231_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_7_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299972992)))];
            tensor<fp16, [1280]> blocks_7_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303249856)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2231_cast_fp16 = conv(bias = blocks_7_attn_out_bias_to_fp16, dilations = var_2231_dilations_0, groups = var_2231_groups_0, pad = var_2231_pad_0, pad_type = var_2231_pad_type_0, strides = var_2231_strides_0, weight = blocks_7_attn_out_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("op_2231_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_31_cast_fp16 = add(x = inputs_29_cast_fp16, y = var_2231_cast_fp16)[name = tensor<string, []>("inputs_31_cast_fp16")];
            tensor<int32, [1]> input_77_axes_0 = const()[name = tensor<string, []>("input_77_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_77_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_77_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303252480)))];
            tensor<fp16, [1280]> input_77_beta_0_to_fp16 = const()[name = tensor<string, []>("input_77_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303255104)))];
            tensor<fp16, []> var_2241_to_fp16 = const()[name = tensor<string, []>("op_2241_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_77_cast_fp16 = layer_norm(axes = input_77_axes_0, beta = input_77_beta_0_to_fp16, epsilon = var_2241_to_fp16, gamma = input_77_gamma_0_to_fp16, x = inputs_31_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_79_strides_0 = const()[name = tensor<string, []>("input_79_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_79_dilations_0 = const()[name = tensor<string, []>("input_79_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_79_groups_0 = const()[name = tensor<string, []>("input_79_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_7_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303257728)))];
            tensor<fp16, [5120]> blocks_7_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(316364992)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_79_cast_fp16 = conv(bias = blocks_7_mlp_0_bias_to_fp16, dilations = input_79_dilations_0, groups = input_79_groups_0, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = input_79_strides_0, weight = blocks_7_mlp_0_weight_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<string, []> input_81_mode_0 = const()[name = tensor<string, []>("input_81_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_81_cast_fp16 = gelu(mode = input_81_mode_0, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<string, []> var_2267_pad_type_0 = const()[name = tensor<string, []>("op_2267_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2267_strides_0 = const()[name = tensor<string, []>("op_2267_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2267_pad_0 = const()[name = tensor<string, []>("op_2267_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2267_dilations_0 = const()[name = tensor<string, []>("op_2267_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2267_groups_0 = const()[name = tensor<string, []>("op_2267_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_7_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(316375296)))];
            tensor<fp16, [1280]> blocks_7_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(329482560)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2267_cast_fp16 = conv(bias = blocks_7_mlp_2_bias_to_fp16, dilations = var_2267_dilations_0, groups = var_2267_groups_0, pad = var_2267_pad_0, pad_type = var_2267_pad_type_0, strides = var_2267_strides_0, weight = blocks_7_mlp_2_weight_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("op_2267_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_33_cast_fp16 = add(x = inputs_31_cast_fp16, y = var_2267_cast_fp16)[name = tensor<string, []>("inputs_33_cast_fp16")];
            tensor<int32, []> var_2276 = const()[name = tensor<string, []>("op_2276"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_83_axes_0 = const()[name = tensor<string, []>("input_83_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_83_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_83_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(329485184)))];
            tensor<fp16, [1280]> input_83_beta_0_to_fp16 = const()[name = tensor<string, []>("input_83_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(329487808)))];
            tensor<fp16, []> var_2292_to_fp16 = const()[name = tensor<string, []>("op_2292_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_83_cast_fp16 = layer_norm(axes = input_83_axes_0, beta = input_83_beta_0_to_fp16, epsilon = var_2292_to_fp16, gamma = input_83_gamma_0_to_fp16, x = inputs_33_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<string, []> q_17_pad_type_0 = const()[name = tensor<string, []>("q_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_17_strides_0 = const()[name = tensor<string, []>("q_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_17_pad_0 = const()[name = tensor<string, []>("q_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_17_dilations_0 = const()[name = tensor<string, []>("q_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_17_groups_0 = const()[name = tensor<string, []>("q_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_2327_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2327_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(329490432)))];
            tensor<fp16, [1280]> var_2327_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2327_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332767296)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2327_cast_fp16 = conv(bias = var_2327_bias_0_to_fp16, dilations = q_17_dilations_0, groups = q_17_groups_0, pad = q_17_pad_0, pad_type = q_17_pad_type_0, strides = q_17_strides_0, weight = var_2327_weight_0_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("op_2327_cast_fp16")];
            tensor<string, []> k_17_pad_type_0 = const()[name = tensor<string, []>("k_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_17_strides_0 = const()[name = tensor<string, []>("k_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_17_pad_0 = const()[name = tensor<string, []>("k_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_17_dilations_0 = const()[name = tensor<string, []>("k_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_17_groups_0 = const()[name = tensor<string, []>("k_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_8_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332769920)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_17_cast_fp16 = conv(dilations = k_17_dilations_0, groups = k_17_groups_0, pad = k_17_pad_0, pad_type = k_17_pad_type_0, strides = k_17_strides_0, weight = blocks_8_attn_key_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("k_17_cast_fp16")];
            tensor<string, []> var_2325_pad_type_0 = const()[name = tensor<string, []>("op_2325_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2325_strides_0 = const()[name = tensor<string, []>("op_2325_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2325_pad_0 = const()[name = tensor<string, []>("op_2325_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2325_dilations_0 = const()[name = tensor<string, []>("op_2325_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2325_groups_0 = const()[name = tensor<string, []>("op_2325_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_8_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(336046784)))];
            tensor<fp16, [1280]> blocks_8_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(339323648)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2325_cast_fp16 = conv(bias = blocks_8_attn_value_bias_to_fp16, dilations = var_2325_dilations_0, groups = var_2325_groups_0, pad = var_2325_pad_0, pad_type = var_2325_pad_type_0, strides = var_2325_strides_0, weight = blocks_8_attn_value_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("op_2325_cast_fp16")];
            tensor<int32, [20]> tile_24 = const()[name = tensor<string, []>("tile_24"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2328_axis_0 = const()[name = tensor<string, []>("op_2328_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_19 = split(axis = var_2328_axis_0, split_sizes = tile_24, x = var_2327_cast_fp16)[name = tensor<string, []>("op_2328_cast_fp16")];
            tensor<int32, [4]> var_2349_perm_0 = const()[name = tensor<string, []>("op_2349_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_25 = const()[name = tensor<string, []>("tile_25"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2350_axis_0 = const()[name = tensor<string, []>("op_2350_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_2349_cast_fp16 = transpose(perm = var_2349_perm_0, x = k_17_cast_fp16)[name = tensor<string, []>("transpose_24")];
            tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_2350_cast_fp16_19 = split(axis = var_2350_axis_0, split_sizes = tile_25, x = var_2349_cast_fp16)[name = tensor<string, []>("op_2350_cast_fp16")];
            tensor<int32, [20]> tile_26 = const()[name = tensor<string, []>("tile_26"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2371_axis_0 = const()[name = tensor<string, []>("op_2371_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2371_cast_fp16_19 = split(axis = var_2371_axis_0, split_sizes = tile_26, x = var_2325_cast_fp16)[name = tensor<string, []>("op_2371_cast_fp16")];
            tensor<string, []> aw_321_equation_0 = const()[name = tensor<string, []>("aw_321_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_321_cast_fp16 = einsum(equation = aw_321_equation_0, values = (var_2350_cast_fp16_0, var_2328_cast_fp16_0))[name = tensor<string, []>("aw_321_cast_fp16")];
            tensor<string, []> aw_323_equation_0 = const()[name = tensor<string, []>("aw_323_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_323_cast_fp16 = einsum(equation = aw_323_equation_0, values = (var_2350_cast_fp16_1, var_2328_cast_fp16_1))[name = tensor<string, []>("aw_323_cast_fp16")];
            tensor<string, []> aw_325_equation_0 = const()[name = tensor<string, []>("aw_325_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_325_cast_fp16 = einsum(equation = aw_325_equation_0, values = (var_2350_cast_fp16_2, var_2328_cast_fp16_2))[name = tensor<string, []>("aw_325_cast_fp16")];
            tensor<string, []> aw_327_equation_0 = const()[name = tensor<string, []>("aw_327_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_327_cast_fp16 = einsum(equation = aw_327_equation_0, values = (var_2350_cast_fp16_3, var_2328_cast_fp16_3))[name = tensor<string, []>("aw_327_cast_fp16")];
            tensor<string, []> aw_329_equation_0 = const()[name = tensor<string, []>("aw_329_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_329_cast_fp16 = einsum(equation = aw_329_equation_0, values = (var_2350_cast_fp16_4, var_2328_cast_fp16_4))[name = tensor<string, []>("aw_329_cast_fp16")];
            tensor<string, []> aw_331_equation_0 = const()[name = tensor<string, []>("aw_331_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_331_cast_fp16 = einsum(equation = aw_331_equation_0, values = (var_2350_cast_fp16_5, var_2328_cast_fp16_5))[name = tensor<string, []>("aw_331_cast_fp16")];
            tensor<string, []> aw_333_equation_0 = const()[name = tensor<string, []>("aw_333_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_333_cast_fp16 = einsum(equation = aw_333_equation_0, values = (var_2350_cast_fp16_6, var_2328_cast_fp16_6))[name = tensor<string, []>("aw_333_cast_fp16")];
            tensor<string, []> aw_335_equation_0 = const()[name = tensor<string, []>("aw_335_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_335_cast_fp16 = einsum(equation = aw_335_equation_0, values = (var_2350_cast_fp16_7, var_2328_cast_fp16_7))[name = tensor<string, []>("aw_335_cast_fp16")];
            tensor<string, []> aw_337_equation_0 = const()[name = tensor<string, []>("aw_337_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_337_cast_fp16 = einsum(equation = aw_337_equation_0, values = (var_2350_cast_fp16_8, var_2328_cast_fp16_8))[name = tensor<string, []>("aw_337_cast_fp16")];
            tensor<string, []> aw_339_equation_0 = const()[name = tensor<string, []>("aw_339_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_339_cast_fp16 = einsum(equation = aw_339_equation_0, values = (var_2350_cast_fp16_9, var_2328_cast_fp16_9))[name = tensor<string, []>("aw_339_cast_fp16")];
            tensor<string, []> aw_341_equation_0 = const()[name = tensor<string, []>("aw_341_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_341_cast_fp16 = einsum(equation = aw_341_equation_0, values = (var_2350_cast_fp16_10, var_2328_cast_fp16_10))[name = tensor<string, []>("aw_341_cast_fp16")];
            tensor<string, []> aw_343_equation_0 = const()[name = tensor<string, []>("aw_343_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_343_cast_fp16 = einsum(equation = aw_343_equation_0, values = (var_2350_cast_fp16_11, var_2328_cast_fp16_11))[name = tensor<string, []>("aw_343_cast_fp16")];
            tensor<string, []> aw_345_equation_0 = const()[name = tensor<string, []>("aw_345_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_345_cast_fp16 = einsum(equation = aw_345_equation_0, values = (var_2350_cast_fp16_12, var_2328_cast_fp16_12))[name = tensor<string, []>("aw_345_cast_fp16")];
            tensor<string, []> aw_347_equation_0 = const()[name = tensor<string, []>("aw_347_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_347_cast_fp16 = einsum(equation = aw_347_equation_0, values = (var_2350_cast_fp16_13, var_2328_cast_fp16_13))[name = tensor<string, []>("aw_347_cast_fp16")];
            tensor<string, []> aw_349_equation_0 = const()[name = tensor<string, []>("aw_349_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_349_cast_fp16 = einsum(equation = aw_349_equation_0, values = (var_2350_cast_fp16_14, var_2328_cast_fp16_14))[name = tensor<string, []>("aw_349_cast_fp16")];
            tensor<string, []> aw_351_equation_0 = const()[name = tensor<string, []>("aw_351_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_351_cast_fp16 = einsum(equation = aw_351_equation_0, values = (var_2350_cast_fp16_15, var_2328_cast_fp16_15))[name = tensor<string, []>("aw_351_cast_fp16")];
            tensor<string, []> aw_353_equation_0 = const()[name = tensor<string, []>("aw_353_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_353_cast_fp16 = einsum(equation = aw_353_equation_0, values = (var_2350_cast_fp16_16, var_2328_cast_fp16_16))[name = tensor<string, []>("aw_353_cast_fp16")];
            tensor<string, []> aw_355_equation_0 = const()[name = tensor<string, []>("aw_355_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_355_cast_fp16 = einsum(equation = aw_355_equation_0, values = (var_2350_cast_fp16_17, var_2328_cast_fp16_17))[name = tensor<string, []>("aw_355_cast_fp16")];
            tensor<string, []> aw_357_equation_0 = const()[name = tensor<string, []>("aw_357_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_357_cast_fp16 = einsum(equation = aw_357_equation_0, values = (var_2350_cast_fp16_18, var_2328_cast_fp16_18))[name = tensor<string, []>("aw_357_cast_fp16")];
            tensor<string, []> aw_359_equation_0 = const()[name = tensor<string, []>("aw_359_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_359_cast_fp16 = einsum(equation = aw_359_equation_0, values = (var_2350_cast_fp16_19, var_2328_cast_fp16_19))[name = tensor<string, []>("aw_359_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2432_cast_fp16 = softmax(axis = var_2276, x = aw_321_cast_fp16)[name = tensor<string, []>("op_2432_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2433_cast_fp16 = softmax(axis = var_2276, x = aw_323_cast_fp16)[name = tensor<string, []>("op_2433_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2434_cast_fp16 = softmax(axis = var_2276, x = aw_325_cast_fp16)[name = tensor<string, []>("op_2434_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2435_cast_fp16 = softmax(axis = var_2276, x = aw_327_cast_fp16)[name = tensor<string, []>("op_2435_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2436_cast_fp16 = softmax(axis = var_2276, x = aw_329_cast_fp16)[name = tensor<string, []>("op_2436_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2437_cast_fp16 = softmax(axis = var_2276, x = aw_331_cast_fp16)[name = tensor<string, []>("op_2437_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2438_cast_fp16 = softmax(axis = var_2276, x = aw_333_cast_fp16)[name = tensor<string, []>("op_2438_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2439_cast_fp16 = softmax(axis = var_2276, x = aw_335_cast_fp16)[name = tensor<string, []>("op_2439_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2440_cast_fp16 = softmax(axis = var_2276, x = aw_337_cast_fp16)[name = tensor<string, []>("op_2440_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2441_cast_fp16 = softmax(axis = var_2276, x = aw_339_cast_fp16)[name = tensor<string, []>("op_2441_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2442_cast_fp16 = softmax(axis = var_2276, x = aw_341_cast_fp16)[name = tensor<string, []>("op_2442_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2443_cast_fp16 = softmax(axis = var_2276, x = aw_343_cast_fp16)[name = tensor<string, []>("op_2443_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2444_cast_fp16 = softmax(axis = var_2276, x = aw_345_cast_fp16)[name = tensor<string, []>("op_2444_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2445_cast_fp16 = softmax(axis = var_2276, x = aw_347_cast_fp16)[name = tensor<string, []>("op_2445_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2446_cast_fp16 = softmax(axis = var_2276, x = aw_349_cast_fp16)[name = tensor<string, []>("op_2446_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2447_cast_fp16 = softmax(axis = var_2276, x = aw_351_cast_fp16)[name = tensor<string, []>("op_2447_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2448_cast_fp16 = softmax(axis = var_2276, x = aw_353_cast_fp16)[name = tensor<string, []>("op_2448_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2449_cast_fp16 = softmax(axis = var_2276, x = aw_355_cast_fp16)[name = tensor<string, []>("op_2449_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2450_cast_fp16 = softmax(axis = var_2276, x = aw_357_cast_fp16)[name = tensor<string, []>("op_2450_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2451_cast_fp16 = softmax(axis = var_2276, x = aw_359_cast_fp16)[name = tensor<string, []>("op_2451_cast_fp16")];
            tensor<string, []> var_2453_equation_0 = const()[name = tensor<string, []>("op_2453_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2453_cast_fp16 = einsum(equation = var_2453_equation_0, values = (var_2371_cast_fp16_0, var_2432_cast_fp16))[name = tensor<string, []>("op_2453_cast_fp16")];
            tensor<string, []> var_2455_equation_0 = const()[name = tensor<string, []>("op_2455_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2455_cast_fp16 = einsum(equation = var_2455_equation_0, values = (var_2371_cast_fp16_1, var_2433_cast_fp16))[name = tensor<string, []>("op_2455_cast_fp16")];
            tensor<string, []> var_2457_equation_0 = const()[name = tensor<string, []>("op_2457_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2457_cast_fp16 = einsum(equation = var_2457_equation_0, values = (var_2371_cast_fp16_2, var_2434_cast_fp16))[name = tensor<string, []>("op_2457_cast_fp16")];
            tensor<string, []> var_2459_equation_0 = const()[name = tensor<string, []>("op_2459_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2459_cast_fp16 = einsum(equation = var_2459_equation_0, values = (var_2371_cast_fp16_3, var_2435_cast_fp16))[name = tensor<string, []>("op_2459_cast_fp16")];
            tensor<string, []> var_2461_equation_0 = const()[name = tensor<string, []>("op_2461_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2461_cast_fp16 = einsum(equation = var_2461_equation_0, values = (var_2371_cast_fp16_4, var_2436_cast_fp16))[name = tensor<string, []>("op_2461_cast_fp16")];
            tensor<string, []> var_2463_equation_0 = const()[name = tensor<string, []>("op_2463_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2463_cast_fp16 = einsum(equation = var_2463_equation_0, values = (var_2371_cast_fp16_5, var_2437_cast_fp16))[name = tensor<string, []>("op_2463_cast_fp16")];
            tensor<string, []> var_2465_equation_0 = const()[name = tensor<string, []>("op_2465_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2465_cast_fp16 = einsum(equation = var_2465_equation_0, values = (var_2371_cast_fp16_6, var_2438_cast_fp16))[name = tensor<string, []>("op_2465_cast_fp16")];
            tensor<string, []> var_2467_equation_0 = const()[name = tensor<string, []>("op_2467_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2467_cast_fp16 = einsum(equation = var_2467_equation_0, values = (var_2371_cast_fp16_7, var_2439_cast_fp16))[name = tensor<string, []>("op_2467_cast_fp16")];
            tensor<string, []> var_2469_equation_0 = const()[name = tensor<string, []>("op_2469_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2469_cast_fp16 = einsum(equation = var_2469_equation_0, values = (var_2371_cast_fp16_8, var_2440_cast_fp16))[name = tensor<string, []>("op_2469_cast_fp16")];
            tensor<string, []> var_2471_equation_0 = const()[name = tensor<string, []>("op_2471_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2471_cast_fp16 = einsum(equation = var_2471_equation_0, values = (var_2371_cast_fp16_9, var_2441_cast_fp16))[name = tensor<string, []>("op_2471_cast_fp16")];
            tensor<string, []> var_2473_equation_0 = const()[name = tensor<string, []>("op_2473_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2473_cast_fp16 = einsum(equation = var_2473_equation_0, values = (var_2371_cast_fp16_10, var_2442_cast_fp16))[name = tensor<string, []>("op_2473_cast_fp16")];
            tensor<string, []> var_2475_equation_0 = const()[name = tensor<string, []>("op_2475_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2475_cast_fp16 = einsum(equation = var_2475_equation_0, values = (var_2371_cast_fp16_11, var_2443_cast_fp16))[name = tensor<string, []>("op_2475_cast_fp16")];
            tensor<string, []> var_2477_equation_0 = const()[name = tensor<string, []>("op_2477_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2477_cast_fp16 = einsum(equation = var_2477_equation_0, values = (var_2371_cast_fp16_12, var_2444_cast_fp16))[name = tensor<string, []>("op_2477_cast_fp16")];
            tensor<string, []> var_2479_equation_0 = const()[name = tensor<string, []>("op_2479_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2479_cast_fp16 = einsum(equation = var_2479_equation_0, values = (var_2371_cast_fp16_13, var_2445_cast_fp16))[name = tensor<string, []>("op_2479_cast_fp16")];
            tensor<string, []> var_2481_equation_0 = const()[name = tensor<string, []>("op_2481_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2481_cast_fp16 = einsum(equation = var_2481_equation_0, values = (var_2371_cast_fp16_14, var_2446_cast_fp16))[name = tensor<string, []>("op_2481_cast_fp16")];
            tensor<string, []> var_2483_equation_0 = const()[name = tensor<string, []>("op_2483_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2483_cast_fp16 = einsum(equation = var_2483_equation_0, values = (var_2371_cast_fp16_15, var_2447_cast_fp16))[name = tensor<string, []>("op_2483_cast_fp16")];
            tensor<string, []> var_2485_equation_0 = const()[name = tensor<string, []>("op_2485_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2485_cast_fp16 = einsum(equation = var_2485_equation_0, values = (var_2371_cast_fp16_16, var_2448_cast_fp16))[name = tensor<string, []>("op_2485_cast_fp16")];
            tensor<string, []> var_2487_equation_0 = const()[name = tensor<string, []>("op_2487_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2487_cast_fp16 = einsum(equation = var_2487_equation_0, values = (var_2371_cast_fp16_17, var_2449_cast_fp16))[name = tensor<string, []>("op_2487_cast_fp16")];
            tensor<string, []> var_2489_equation_0 = const()[name = tensor<string, []>("op_2489_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2489_cast_fp16 = einsum(equation = var_2489_equation_0, values = (var_2371_cast_fp16_18, var_2450_cast_fp16))[name = tensor<string, []>("op_2489_cast_fp16")];
            tensor<string, []> var_2491_equation_0 = const()[name = tensor<string, []>("op_2491_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2491_cast_fp16 = einsum(equation = var_2491_equation_0, values = (var_2371_cast_fp16_19, var_2451_cast_fp16))[name = tensor<string, []>("op_2491_cast_fp16")];
            tensor<bool, []> input_85_interleave_0 = const()[name = tensor<string, []>("input_85_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_85_cast_fp16 = concat(axis = var_2276, interleave = input_85_interleave_0, values = (var_2453_cast_fp16, var_2455_cast_fp16, var_2457_cast_fp16, var_2459_cast_fp16, var_2461_cast_fp16, var_2463_cast_fp16, var_2465_cast_fp16, var_2467_cast_fp16, var_2469_cast_fp16, var_2471_cast_fp16, var_2473_cast_fp16, var_2475_cast_fp16, var_2477_cast_fp16, var_2479_cast_fp16, var_2481_cast_fp16, var_2483_cast_fp16, var_2485_cast_fp16, var_2487_cast_fp16, var_2489_cast_fp16, var_2491_cast_fp16))[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<string, []> var_2500_pad_type_0 = const()[name = tensor<string, []>("op_2500_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2500_strides_0 = const()[name = tensor<string, []>("op_2500_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2500_pad_0 = const()[name = tensor<string, []>("op_2500_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2500_dilations_0 = const()[name = tensor<string, []>("op_2500_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2500_groups_0 = const()[name = tensor<string, []>("op_2500_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_8_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(339326272)))];
            tensor<fp16, [1280]> blocks_8_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(342603136)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2500_cast_fp16 = conv(bias = blocks_8_attn_out_bias_to_fp16, dilations = var_2500_dilations_0, groups = var_2500_groups_0, pad = var_2500_pad_0, pad_type = var_2500_pad_type_0, strides = var_2500_strides_0, weight = blocks_8_attn_out_weight_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("op_2500_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_35_cast_fp16 = add(x = inputs_33_cast_fp16, y = var_2500_cast_fp16)[name = tensor<string, []>("inputs_35_cast_fp16")];
            tensor<int32, [1]> input_87_axes_0 = const()[name = tensor<string, []>("input_87_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_87_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(342605760)))];
            tensor<fp16, [1280]> input_87_beta_0_to_fp16 = const()[name = tensor<string, []>("input_87_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(342608384)))];
            tensor<fp16, []> var_2510_to_fp16 = const()[name = tensor<string, []>("op_2510_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_87_cast_fp16 = layer_norm(axes = input_87_axes_0, beta = input_87_beta_0_to_fp16, epsilon = var_2510_to_fp16, gamma = input_87_gamma_0_to_fp16, x = inputs_35_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_89_strides_0 = const()[name = tensor<string, []>("input_89_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_89_dilations_0 = const()[name = tensor<string, []>("input_89_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_89_groups_0 = const()[name = tensor<string, []>("input_89_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_8_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(342611008)))];
            tensor<fp16, [5120]> blocks_8_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(355718272)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_89_cast_fp16 = conv(bias = blocks_8_mlp_0_bias_to_fp16, dilations = input_89_dilations_0, groups = input_89_groups_0, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = input_89_strides_0, weight = blocks_8_mlp_0_weight_to_fp16, x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<string, []> input_91_mode_0 = const()[name = tensor<string, []>("input_91_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_91_cast_fp16 = gelu(mode = input_91_mode_0, x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<string, []> var_2536_pad_type_0 = const()[name = tensor<string, []>("op_2536_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2536_strides_0 = const()[name = tensor<string, []>("op_2536_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2536_pad_0 = const()[name = tensor<string, []>("op_2536_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2536_dilations_0 = const()[name = tensor<string, []>("op_2536_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2536_groups_0 = const()[name = tensor<string, []>("op_2536_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_8_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(355728576)))];
            tensor<fp16, [1280]> blocks_8_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368835840)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2536_cast_fp16 = conv(bias = blocks_8_mlp_2_bias_to_fp16, dilations = var_2536_dilations_0, groups = var_2536_groups_0, pad = var_2536_pad_0, pad_type = var_2536_pad_type_0, strides = var_2536_strides_0, weight = blocks_8_mlp_2_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("op_2536_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_37_cast_fp16 = add(x = inputs_35_cast_fp16, y = var_2536_cast_fp16)[name = tensor<string, []>("inputs_37_cast_fp16")];
            tensor<int32, []> var_2545 = const()[name = tensor<string, []>("op_2545"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_93_axes_0 = const()[name = tensor<string, []>("input_93_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_93_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368838464)))];
            tensor<fp16, [1280]> input_93_beta_0_to_fp16 = const()[name = tensor<string, []>("input_93_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368841088)))];
            tensor<fp16, []> var_2561_to_fp16 = const()[name = tensor<string, []>("op_2561_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_93_cast_fp16 = layer_norm(axes = input_93_axes_0, beta = input_93_beta_0_to_fp16, epsilon = var_2561_to_fp16, gamma = input_93_gamma_0_to_fp16, x = inputs_37_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<string, []> q_19_pad_type_0 = const()[name = tensor<string, []>("q_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_19_strides_0 = const()[name = tensor<string, []>("q_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_19_pad_0 = const()[name = tensor<string, []>("q_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_19_dilations_0 = const()[name = tensor<string, []>("q_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_19_groups_0 = const()[name = tensor<string, []>("q_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_2596_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2596_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368843712)))];
            tensor<fp16, [1280]> var_2596_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2596_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(372120576)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2596_cast_fp16 = conv(bias = var_2596_bias_0_to_fp16, dilations = q_19_dilations_0, groups = q_19_groups_0, pad = q_19_pad_0, pad_type = q_19_pad_type_0, strides = q_19_strides_0, weight = var_2596_weight_0_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("op_2596_cast_fp16")];
            tensor<string, []> k_19_pad_type_0 = const()[name = tensor<string, []>("k_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_19_strides_0 = const()[name = tensor<string, []>("k_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_19_pad_0 = const()[name = tensor<string, []>("k_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_19_dilations_0 = const()[name = tensor<string, []>("k_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_19_groups_0 = const()[name = tensor<string, []>("k_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_9_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(372123200)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_19_cast_fp16 = conv(dilations = k_19_dilations_0, groups = k_19_groups_0, pad = k_19_pad_0, pad_type = k_19_pad_type_0, strides = k_19_strides_0, weight = blocks_9_attn_key_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("k_19_cast_fp16")];
            tensor<string, []> var_2594_pad_type_0 = const()[name = tensor<string, []>("op_2594_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2594_strides_0 = const()[name = tensor<string, []>("op_2594_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2594_pad_0 = const()[name = tensor<string, []>("op_2594_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2594_dilations_0 = const()[name = tensor<string, []>("op_2594_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2594_groups_0 = const()[name = tensor<string, []>("op_2594_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_9_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(375400064)))];
            tensor<fp16, [1280]> blocks_9_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378676928)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2594_cast_fp16 = conv(bias = blocks_9_attn_value_bias_to_fp16, dilations = var_2594_dilations_0, groups = var_2594_groups_0, pad = var_2594_pad_0, pad_type = var_2594_pad_type_0, strides = var_2594_strides_0, weight = blocks_9_attn_value_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("op_2594_cast_fp16")];
            tensor<int32, [20]> tile_27 = const()[name = tensor<string, []>("tile_27"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2597_axis_0 = const()[name = tensor<string, []>("op_2597_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2597_cast_fp16_19 = split(axis = var_2597_axis_0, split_sizes = tile_27, x = var_2596_cast_fp16)[name = tensor<string, []>("op_2597_cast_fp16")];
            tensor<int32, [4]> var_2618_perm_0 = const()[name = tensor<string, []>("op_2618_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_28 = const()[name = tensor<string, []>("tile_28"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2619_axis_0 = const()[name = tensor<string, []>("op_2619_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_2618_cast_fp16 = transpose(perm = var_2618_perm_0, x = k_19_cast_fp16)[name = tensor<string, []>("transpose_23")];
            tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_2619_cast_fp16_19 = split(axis = var_2619_axis_0, split_sizes = tile_28, x = var_2618_cast_fp16)[name = tensor<string, []>("op_2619_cast_fp16")];
            tensor<int32, [20]> tile_29 = const()[name = tensor<string, []>("tile_29"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2640_axis_0 = const()[name = tensor<string, []>("op_2640_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2640_cast_fp16_19 = split(axis = var_2640_axis_0, split_sizes = tile_29, x = var_2594_cast_fp16)[name = tensor<string, []>("op_2640_cast_fp16")];
            tensor<string, []> aw_361_equation_0 = const()[name = tensor<string, []>("aw_361_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_361_cast_fp16 = einsum(equation = aw_361_equation_0, values = (var_2619_cast_fp16_0, var_2597_cast_fp16_0))[name = tensor<string, []>("aw_361_cast_fp16")];
            tensor<string, []> aw_363_equation_0 = const()[name = tensor<string, []>("aw_363_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_363_cast_fp16 = einsum(equation = aw_363_equation_0, values = (var_2619_cast_fp16_1, var_2597_cast_fp16_1))[name = tensor<string, []>("aw_363_cast_fp16")];
            tensor<string, []> aw_365_equation_0 = const()[name = tensor<string, []>("aw_365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_365_cast_fp16 = einsum(equation = aw_365_equation_0, values = (var_2619_cast_fp16_2, var_2597_cast_fp16_2))[name = tensor<string, []>("aw_365_cast_fp16")];
            tensor<string, []> aw_367_equation_0 = const()[name = tensor<string, []>("aw_367_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_367_cast_fp16 = einsum(equation = aw_367_equation_0, values = (var_2619_cast_fp16_3, var_2597_cast_fp16_3))[name = tensor<string, []>("aw_367_cast_fp16")];
            tensor<string, []> aw_369_equation_0 = const()[name = tensor<string, []>("aw_369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_369_cast_fp16 = einsum(equation = aw_369_equation_0, values = (var_2619_cast_fp16_4, var_2597_cast_fp16_4))[name = tensor<string, []>("aw_369_cast_fp16")];
            tensor<string, []> aw_371_equation_0 = const()[name = tensor<string, []>("aw_371_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_371_cast_fp16 = einsum(equation = aw_371_equation_0, values = (var_2619_cast_fp16_5, var_2597_cast_fp16_5))[name = tensor<string, []>("aw_371_cast_fp16")];
            tensor<string, []> aw_373_equation_0 = const()[name = tensor<string, []>("aw_373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_373_cast_fp16 = einsum(equation = aw_373_equation_0, values = (var_2619_cast_fp16_6, var_2597_cast_fp16_6))[name = tensor<string, []>("aw_373_cast_fp16")];
            tensor<string, []> aw_375_equation_0 = const()[name = tensor<string, []>("aw_375_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_375_cast_fp16 = einsum(equation = aw_375_equation_0, values = (var_2619_cast_fp16_7, var_2597_cast_fp16_7))[name = tensor<string, []>("aw_375_cast_fp16")];
            tensor<string, []> aw_377_equation_0 = const()[name = tensor<string, []>("aw_377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_377_cast_fp16 = einsum(equation = aw_377_equation_0, values = (var_2619_cast_fp16_8, var_2597_cast_fp16_8))[name = tensor<string, []>("aw_377_cast_fp16")];
            tensor<string, []> aw_379_equation_0 = const()[name = tensor<string, []>("aw_379_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_379_cast_fp16 = einsum(equation = aw_379_equation_0, values = (var_2619_cast_fp16_9, var_2597_cast_fp16_9))[name = tensor<string, []>("aw_379_cast_fp16")];
            tensor<string, []> aw_381_equation_0 = const()[name = tensor<string, []>("aw_381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_381_cast_fp16 = einsum(equation = aw_381_equation_0, values = (var_2619_cast_fp16_10, var_2597_cast_fp16_10))[name = tensor<string, []>("aw_381_cast_fp16")];
            tensor<string, []> aw_383_equation_0 = const()[name = tensor<string, []>("aw_383_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_383_cast_fp16 = einsum(equation = aw_383_equation_0, values = (var_2619_cast_fp16_11, var_2597_cast_fp16_11))[name = tensor<string, []>("aw_383_cast_fp16")];
            tensor<string, []> aw_385_equation_0 = const()[name = tensor<string, []>("aw_385_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_385_cast_fp16 = einsum(equation = aw_385_equation_0, values = (var_2619_cast_fp16_12, var_2597_cast_fp16_12))[name = tensor<string, []>("aw_385_cast_fp16")];
            tensor<string, []> aw_387_equation_0 = const()[name = tensor<string, []>("aw_387_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_387_cast_fp16 = einsum(equation = aw_387_equation_0, values = (var_2619_cast_fp16_13, var_2597_cast_fp16_13))[name = tensor<string, []>("aw_387_cast_fp16")];
            tensor<string, []> aw_389_equation_0 = const()[name = tensor<string, []>("aw_389_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_389_cast_fp16 = einsum(equation = aw_389_equation_0, values = (var_2619_cast_fp16_14, var_2597_cast_fp16_14))[name = tensor<string, []>("aw_389_cast_fp16")];
            tensor<string, []> aw_391_equation_0 = const()[name = tensor<string, []>("aw_391_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_391_cast_fp16 = einsum(equation = aw_391_equation_0, values = (var_2619_cast_fp16_15, var_2597_cast_fp16_15))[name = tensor<string, []>("aw_391_cast_fp16")];
            tensor<string, []> aw_393_equation_0 = const()[name = tensor<string, []>("aw_393_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_393_cast_fp16 = einsum(equation = aw_393_equation_0, values = (var_2619_cast_fp16_16, var_2597_cast_fp16_16))[name = tensor<string, []>("aw_393_cast_fp16")];
            tensor<string, []> aw_395_equation_0 = const()[name = tensor<string, []>("aw_395_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_395_cast_fp16 = einsum(equation = aw_395_equation_0, values = (var_2619_cast_fp16_17, var_2597_cast_fp16_17))[name = tensor<string, []>("aw_395_cast_fp16")];
            tensor<string, []> aw_397_equation_0 = const()[name = tensor<string, []>("aw_397_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_397_cast_fp16 = einsum(equation = aw_397_equation_0, values = (var_2619_cast_fp16_18, var_2597_cast_fp16_18))[name = tensor<string, []>("aw_397_cast_fp16")];
            tensor<string, []> aw_399_equation_0 = const()[name = tensor<string, []>("aw_399_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_399_cast_fp16 = einsum(equation = aw_399_equation_0, values = (var_2619_cast_fp16_19, var_2597_cast_fp16_19))[name = tensor<string, []>("aw_399_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2701_cast_fp16 = softmax(axis = var_2545, x = aw_361_cast_fp16)[name = tensor<string, []>("op_2701_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2702_cast_fp16 = softmax(axis = var_2545, x = aw_363_cast_fp16)[name = tensor<string, []>("op_2702_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2703_cast_fp16 = softmax(axis = var_2545, x = aw_365_cast_fp16)[name = tensor<string, []>("op_2703_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2704_cast_fp16 = softmax(axis = var_2545, x = aw_367_cast_fp16)[name = tensor<string, []>("op_2704_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2705_cast_fp16 = softmax(axis = var_2545, x = aw_369_cast_fp16)[name = tensor<string, []>("op_2705_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2706_cast_fp16 = softmax(axis = var_2545, x = aw_371_cast_fp16)[name = tensor<string, []>("op_2706_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2707_cast_fp16 = softmax(axis = var_2545, x = aw_373_cast_fp16)[name = tensor<string, []>("op_2707_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2708_cast_fp16 = softmax(axis = var_2545, x = aw_375_cast_fp16)[name = tensor<string, []>("op_2708_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2709_cast_fp16 = softmax(axis = var_2545, x = aw_377_cast_fp16)[name = tensor<string, []>("op_2709_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2710_cast_fp16 = softmax(axis = var_2545, x = aw_379_cast_fp16)[name = tensor<string, []>("op_2710_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2711_cast_fp16 = softmax(axis = var_2545, x = aw_381_cast_fp16)[name = tensor<string, []>("op_2711_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2712_cast_fp16 = softmax(axis = var_2545, x = aw_383_cast_fp16)[name = tensor<string, []>("op_2712_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2713_cast_fp16 = softmax(axis = var_2545, x = aw_385_cast_fp16)[name = tensor<string, []>("op_2713_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2714_cast_fp16 = softmax(axis = var_2545, x = aw_387_cast_fp16)[name = tensor<string, []>("op_2714_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2715_cast_fp16 = softmax(axis = var_2545, x = aw_389_cast_fp16)[name = tensor<string, []>("op_2715_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2716_cast_fp16 = softmax(axis = var_2545, x = aw_391_cast_fp16)[name = tensor<string, []>("op_2716_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2717_cast_fp16 = softmax(axis = var_2545, x = aw_393_cast_fp16)[name = tensor<string, []>("op_2717_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2718_cast_fp16 = softmax(axis = var_2545, x = aw_395_cast_fp16)[name = tensor<string, []>("op_2718_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2719_cast_fp16 = softmax(axis = var_2545, x = aw_397_cast_fp16)[name = tensor<string, []>("op_2719_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2720_cast_fp16 = softmax(axis = var_2545, x = aw_399_cast_fp16)[name = tensor<string, []>("op_2720_cast_fp16")];
            tensor<string, []> var_2722_equation_0 = const()[name = tensor<string, []>("op_2722_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2722_cast_fp16 = einsum(equation = var_2722_equation_0, values = (var_2640_cast_fp16_0, var_2701_cast_fp16))[name = tensor<string, []>("op_2722_cast_fp16")];
            tensor<string, []> var_2724_equation_0 = const()[name = tensor<string, []>("op_2724_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2724_cast_fp16 = einsum(equation = var_2724_equation_0, values = (var_2640_cast_fp16_1, var_2702_cast_fp16))[name = tensor<string, []>("op_2724_cast_fp16")];
            tensor<string, []> var_2726_equation_0 = const()[name = tensor<string, []>("op_2726_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2726_cast_fp16 = einsum(equation = var_2726_equation_0, values = (var_2640_cast_fp16_2, var_2703_cast_fp16))[name = tensor<string, []>("op_2726_cast_fp16")];
            tensor<string, []> var_2728_equation_0 = const()[name = tensor<string, []>("op_2728_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2728_cast_fp16 = einsum(equation = var_2728_equation_0, values = (var_2640_cast_fp16_3, var_2704_cast_fp16))[name = tensor<string, []>("op_2728_cast_fp16")];
            tensor<string, []> var_2730_equation_0 = const()[name = tensor<string, []>("op_2730_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2730_cast_fp16 = einsum(equation = var_2730_equation_0, values = (var_2640_cast_fp16_4, var_2705_cast_fp16))[name = tensor<string, []>("op_2730_cast_fp16")];
            tensor<string, []> var_2732_equation_0 = const()[name = tensor<string, []>("op_2732_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2732_cast_fp16 = einsum(equation = var_2732_equation_0, values = (var_2640_cast_fp16_5, var_2706_cast_fp16))[name = tensor<string, []>("op_2732_cast_fp16")];
            tensor<string, []> var_2734_equation_0 = const()[name = tensor<string, []>("op_2734_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2734_cast_fp16 = einsum(equation = var_2734_equation_0, values = (var_2640_cast_fp16_6, var_2707_cast_fp16))[name = tensor<string, []>("op_2734_cast_fp16")];
            tensor<string, []> var_2736_equation_0 = const()[name = tensor<string, []>("op_2736_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2736_cast_fp16 = einsum(equation = var_2736_equation_0, values = (var_2640_cast_fp16_7, var_2708_cast_fp16))[name = tensor<string, []>("op_2736_cast_fp16")];
            tensor<string, []> var_2738_equation_0 = const()[name = tensor<string, []>("op_2738_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2738_cast_fp16 = einsum(equation = var_2738_equation_0, values = (var_2640_cast_fp16_8, var_2709_cast_fp16))[name = tensor<string, []>("op_2738_cast_fp16")];
            tensor<string, []> var_2740_equation_0 = const()[name = tensor<string, []>("op_2740_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2740_cast_fp16 = einsum(equation = var_2740_equation_0, values = (var_2640_cast_fp16_9, var_2710_cast_fp16))[name = tensor<string, []>("op_2740_cast_fp16")];
            tensor<string, []> var_2742_equation_0 = const()[name = tensor<string, []>("op_2742_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2742_cast_fp16 = einsum(equation = var_2742_equation_0, values = (var_2640_cast_fp16_10, var_2711_cast_fp16))[name = tensor<string, []>("op_2742_cast_fp16")];
            tensor<string, []> var_2744_equation_0 = const()[name = tensor<string, []>("op_2744_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2744_cast_fp16 = einsum(equation = var_2744_equation_0, values = (var_2640_cast_fp16_11, var_2712_cast_fp16))[name = tensor<string, []>("op_2744_cast_fp16")];
            tensor<string, []> var_2746_equation_0 = const()[name = tensor<string, []>("op_2746_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2746_cast_fp16 = einsum(equation = var_2746_equation_0, values = (var_2640_cast_fp16_12, var_2713_cast_fp16))[name = tensor<string, []>("op_2746_cast_fp16")];
            tensor<string, []> var_2748_equation_0 = const()[name = tensor<string, []>("op_2748_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2748_cast_fp16 = einsum(equation = var_2748_equation_0, values = (var_2640_cast_fp16_13, var_2714_cast_fp16))[name = tensor<string, []>("op_2748_cast_fp16")];
            tensor<string, []> var_2750_equation_0 = const()[name = tensor<string, []>("op_2750_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2750_cast_fp16 = einsum(equation = var_2750_equation_0, values = (var_2640_cast_fp16_14, var_2715_cast_fp16))[name = tensor<string, []>("op_2750_cast_fp16")];
            tensor<string, []> var_2752_equation_0 = const()[name = tensor<string, []>("op_2752_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2752_cast_fp16 = einsum(equation = var_2752_equation_0, values = (var_2640_cast_fp16_15, var_2716_cast_fp16))[name = tensor<string, []>("op_2752_cast_fp16")];
            tensor<string, []> var_2754_equation_0 = const()[name = tensor<string, []>("op_2754_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2754_cast_fp16 = einsum(equation = var_2754_equation_0, values = (var_2640_cast_fp16_16, var_2717_cast_fp16))[name = tensor<string, []>("op_2754_cast_fp16")];
            tensor<string, []> var_2756_equation_0 = const()[name = tensor<string, []>("op_2756_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2756_cast_fp16 = einsum(equation = var_2756_equation_0, values = (var_2640_cast_fp16_17, var_2718_cast_fp16))[name = tensor<string, []>("op_2756_cast_fp16")];
            tensor<string, []> var_2758_equation_0 = const()[name = tensor<string, []>("op_2758_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2758_cast_fp16 = einsum(equation = var_2758_equation_0, values = (var_2640_cast_fp16_18, var_2719_cast_fp16))[name = tensor<string, []>("op_2758_cast_fp16")];
            tensor<string, []> var_2760_equation_0 = const()[name = tensor<string, []>("op_2760_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2760_cast_fp16 = einsum(equation = var_2760_equation_0, values = (var_2640_cast_fp16_19, var_2720_cast_fp16))[name = tensor<string, []>("op_2760_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_95_cast_fp16 = concat(axis = var_2545, interleave = input_95_interleave_0, values = (var_2722_cast_fp16, var_2724_cast_fp16, var_2726_cast_fp16, var_2728_cast_fp16, var_2730_cast_fp16, var_2732_cast_fp16, var_2734_cast_fp16, var_2736_cast_fp16, var_2738_cast_fp16, var_2740_cast_fp16, var_2742_cast_fp16, var_2744_cast_fp16, var_2746_cast_fp16, var_2748_cast_fp16, var_2750_cast_fp16, var_2752_cast_fp16, var_2754_cast_fp16, var_2756_cast_fp16, var_2758_cast_fp16, var_2760_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<string, []> var_2769_pad_type_0 = const()[name = tensor<string, []>("op_2769_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2769_strides_0 = const()[name = tensor<string, []>("op_2769_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2769_pad_0 = const()[name = tensor<string, []>("op_2769_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2769_dilations_0 = const()[name = tensor<string, []>("op_2769_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2769_groups_0 = const()[name = tensor<string, []>("op_2769_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_9_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378679552)))];
            tensor<fp16, [1280]> blocks_9_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(381956416)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2769_cast_fp16 = conv(bias = blocks_9_attn_out_bias_to_fp16, dilations = var_2769_dilations_0, groups = var_2769_groups_0, pad = var_2769_pad_0, pad_type = var_2769_pad_type_0, strides = var_2769_strides_0, weight = blocks_9_attn_out_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("op_2769_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_39_cast_fp16 = add(x = inputs_37_cast_fp16, y = var_2769_cast_fp16)[name = tensor<string, []>("inputs_39_cast_fp16")];
            tensor<int32, [1]> input_97_axes_0 = const()[name = tensor<string, []>("input_97_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_97_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_97_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(381959040)))];
            tensor<fp16, [1280]> input_97_beta_0_to_fp16 = const()[name = tensor<string, []>("input_97_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(381961664)))];
            tensor<fp16, []> var_2779_to_fp16 = const()[name = tensor<string, []>("op_2779_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_97_cast_fp16 = layer_norm(axes = input_97_axes_0, beta = input_97_beta_0_to_fp16, epsilon = var_2779_to_fp16, gamma = input_97_gamma_0_to_fp16, x = inputs_39_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_99_strides_0 = const()[name = tensor<string, []>("input_99_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_99_dilations_0 = const()[name = tensor<string, []>("input_99_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_99_groups_0 = const()[name = tensor<string, []>("input_99_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_9_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(381964288)))];
            tensor<fp16, [5120]> blocks_9_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(395071552)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_99_cast_fp16 = conv(bias = blocks_9_mlp_0_bias_to_fp16, dilations = input_99_dilations_0, groups = input_99_groups_0, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = input_99_strides_0, weight = blocks_9_mlp_0_weight_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<string, []> input_101_mode_0 = const()[name = tensor<string, []>("input_101_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_101_cast_fp16 = gelu(mode = input_101_mode_0, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<string, []> var_2805_pad_type_0 = const()[name = tensor<string, []>("op_2805_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2805_strides_0 = const()[name = tensor<string, []>("op_2805_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2805_pad_0 = const()[name = tensor<string, []>("op_2805_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2805_dilations_0 = const()[name = tensor<string, []>("op_2805_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2805_groups_0 = const()[name = tensor<string, []>("op_2805_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_9_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(395081856)))];
            tensor<fp16, [1280]> blocks_9_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408189120)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2805_cast_fp16 = conv(bias = blocks_9_mlp_2_bias_to_fp16, dilations = var_2805_dilations_0, groups = var_2805_groups_0, pad = var_2805_pad_0, pad_type = var_2805_pad_type_0, strides = var_2805_strides_0, weight = blocks_9_mlp_2_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("op_2805_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_41_cast_fp16 = add(x = inputs_39_cast_fp16, y = var_2805_cast_fp16)[name = tensor<string, []>("inputs_41_cast_fp16")];
            tensor<int32, []> var_2814 = const()[name = tensor<string, []>("op_2814"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_103_axes_0 = const()[name = tensor<string, []>("input_103_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_103_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_103_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408191744)))];
            tensor<fp16, [1280]> input_103_beta_0_to_fp16 = const()[name = tensor<string, []>("input_103_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408194368)))];
            tensor<fp16, []> var_2830_to_fp16 = const()[name = tensor<string, []>("op_2830_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_103_cast_fp16 = layer_norm(axes = input_103_axes_0, beta = input_103_beta_0_to_fp16, epsilon = var_2830_to_fp16, gamma = input_103_gamma_0_to_fp16, x = inputs_41_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<string, []> q_21_pad_type_0 = const()[name = tensor<string, []>("q_21_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_21_strides_0 = const()[name = tensor<string, []>("q_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_21_pad_0 = const()[name = tensor<string, []>("q_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_21_dilations_0 = const()[name = tensor<string, []>("q_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_21_groups_0 = const()[name = tensor<string, []>("q_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_2865_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2865_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408196992)))];
            tensor<fp16, [1280]> var_2865_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2865_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411473856)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2865_cast_fp16 = conv(bias = var_2865_bias_0_to_fp16, dilations = q_21_dilations_0, groups = q_21_groups_0, pad = q_21_pad_0, pad_type = q_21_pad_type_0, strides = q_21_strides_0, weight = var_2865_weight_0_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("op_2865_cast_fp16")];
            tensor<string, []> k_21_pad_type_0 = const()[name = tensor<string, []>("k_21_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_21_strides_0 = const()[name = tensor<string, []>("k_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_21_pad_0 = const()[name = tensor<string, []>("k_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_21_dilations_0 = const()[name = tensor<string, []>("k_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_21_groups_0 = const()[name = tensor<string, []>("k_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_10_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411476480)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_21_cast_fp16 = conv(dilations = k_21_dilations_0, groups = k_21_groups_0, pad = k_21_pad_0, pad_type = k_21_pad_type_0, strides = k_21_strides_0, weight = blocks_10_attn_key_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("k_21_cast_fp16")];
            tensor<string, []> var_2863_pad_type_0 = const()[name = tensor<string, []>("op_2863_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2863_strides_0 = const()[name = tensor<string, []>("op_2863_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2863_pad_0 = const()[name = tensor<string, []>("op_2863_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2863_dilations_0 = const()[name = tensor<string, []>("op_2863_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2863_groups_0 = const()[name = tensor<string, []>("op_2863_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_10_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(414753344)))];
            tensor<fp16, [1280]> blocks_10_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418030208)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_2863_cast_fp16 = conv(bias = blocks_10_attn_value_bias_to_fp16, dilations = var_2863_dilations_0, groups = var_2863_groups_0, pad = var_2863_pad_0, pad_type = var_2863_pad_type_0, strides = var_2863_strides_0, weight = blocks_10_attn_value_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("op_2863_cast_fp16")];
            tensor<int32, [20]> tile_30 = const()[name = tensor<string, []>("tile_30"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2866_axis_0 = const()[name = tensor<string, []>("op_2866_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2866_cast_fp16_19 = split(axis = var_2866_axis_0, split_sizes = tile_30, x = var_2865_cast_fp16)[name = tensor<string, []>("op_2866_cast_fp16")];
            tensor<int32, [4]> var_2887_perm_0 = const()[name = tensor<string, []>("op_2887_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_31 = const()[name = tensor<string, []>("tile_31"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2888_axis_0 = const()[name = tensor<string, []>("op_2888_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_2887_cast_fp16 = transpose(perm = var_2887_perm_0, x = k_21_cast_fp16)[name = tensor<string, []>("transpose_22")];
            tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_2888_cast_fp16_19 = split(axis = var_2888_axis_0, split_sizes = tile_31, x = var_2887_cast_fp16)[name = tensor<string, []>("op_2888_cast_fp16")];
            tensor<int32, [20]> tile_32 = const()[name = tensor<string, []>("tile_32"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2909_axis_0 = const()[name = tensor<string, []>("op_2909_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_2909_cast_fp16_19 = split(axis = var_2909_axis_0, split_sizes = tile_32, x = var_2863_cast_fp16)[name = tensor<string, []>("op_2909_cast_fp16")];
            tensor<string, []> aw_401_equation_0 = const()[name = tensor<string, []>("aw_401_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_401_cast_fp16 = einsum(equation = aw_401_equation_0, values = (var_2888_cast_fp16_0, var_2866_cast_fp16_0))[name = tensor<string, []>("aw_401_cast_fp16")];
            tensor<string, []> aw_403_equation_0 = const()[name = tensor<string, []>("aw_403_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_403_cast_fp16 = einsum(equation = aw_403_equation_0, values = (var_2888_cast_fp16_1, var_2866_cast_fp16_1))[name = tensor<string, []>("aw_403_cast_fp16")];
            tensor<string, []> aw_405_equation_0 = const()[name = tensor<string, []>("aw_405_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_405_cast_fp16 = einsum(equation = aw_405_equation_0, values = (var_2888_cast_fp16_2, var_2866_cast_fp16_2))[name = tensor<string, []>("aw_405_cast_fp16")];
            tensor<string, []> aw_407_equation_0 = const()[name = tensor<string, []>("aw_407_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_407_cast_fp16 = einsum(equation = aw_407_equation_0, values = (var_2888_cast_fp16_3, var_2866_cast_fp16_3))[name = tensor<string, []>("aw_407_cast_fp16")];
            tensor<string, []> aw_409_equation_0 = const()[name = tensor<string, []>("aw_409_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_409_cast_fp16 = einsum(equation = aw_409_equation_0, values = (var_2888_cast_fp16_4, var_2866_cast_fp16_4))[name = tensor<string, []>("aw_409_cast_fp16")];
            tensor<string, []> aw_411_equation_0 = const()[name = tensor<string, []>("aw_411_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_411_cast_fp16 = einsum(equation = aw_411_equation_0, values = (var_2888_cast_fp16_5, var_2866_cast_fp16_5))[name = tensor<string, []>("aw_411_cast_fp16")];
            tensor<string, []> aw_413_equation_0 = const()[name = tensor<string, []>("aw_413_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_413_cast_fp16 = einsum(equation = aw_413_equation_0, values = (var_2888_cast_fp16_6, var_2866_cast_fp16_6))[name = tensor<string, []>("aw_413_cast_fp16")];
            tensor<string, []> aw_415_equation_0 = const()[name = tensor<string, []>("aw_415_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_415_cast_fp16 = einsum(equation = aw_415_equation_0, values = (var_2888_cast_fp16_7, var_2866_cast_fp16_7))[name = tensor<string, []>("aw_415_cast_fp16")];
            tensor<string, []> aw_417_equation_0 = const()[name = tensor<string, []>("aw_417_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_417_cast_fp16 = einsum(equation = aw_417_equation_0, values = (var_2888_cast_fp16_8, var_2866_cast_fp16_8))[name = tensor<string, []>("aw_417_cast_fp16")];
            tensor<string, []> aw_419_equation_0 = const()[name = tensor<string, []>("aw_419_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_419_cast_fp16 = einsum(equation = aw_419_equation_0, values = (var_2888_cast_fp16_9, var_2866_cast_fp16_9))[name = tensor<string, []>("aw_419_cast_fp16")];
            tensor<string, []> aw_421_equation_0 = const()[name = tensor<string, []>("aw_421_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_421_cast_fp16 = einsum(equation = aw_421_equation_0, values = (var_2888_cast_fp16_10, var_2866_cast_fp16_10))[name = tensor<string, []>("aw_421_cast_fp16")];
            tensor<string, []> aw_423_equation_0 = const()[name = tensor<string, []>("aw_423_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_423_cast_fp16 = einsum(equation = aw_423_equation_0, values = (var_2888_cast_fp16_11, var_2866_cast_fp16_11))[name = tensor<string, []>("aw_423_cast_fp16")];
            tensor<string, []> aw_425_equation_0 = const()[name = tensor<string, []>("aw_425_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_425_cast_fp16 = einsum(equation = aw_425_equation_0, values = (var_2888_cast_fp16_12, var_2866_cast_fp16_12))[name = tensor<string, []>("aw_425_cast_fp16")];
            tensor<string, []> aw_427_equation_0 = const()[name = tensor<string, []>("aw_427_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_427_cast_fp16 = einsum(equation = aw_427_equation_0, values = (var_2888_cast_fp16_13, var_2866_cast_fp16_13))[name = tensor<string, []>("aw_427_cast_fp16")];
            tensor<string, []> aw_429_equation_0 = const()[name = tensor<string, []>("aw_429_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_429_cast_fp16 = einsum(equation = aw_429_equation_0, values = (var_2888_cast_fp16_14, var_2866_cast_fp16_14))[name = tensor<string, []>("aw_429_cast_fp16")];
            tensor<string, []> aw_431_equation_0 = const()[name = tensor<string, []>("aw_431_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_431_cast_fp16 = einsum(equation = aw_431_equation_0, values = (var_2888_cast_fp16_15, var_2866_cast_fp16_15))[name = tensor<string, []>("aw_431_cast_fp16")];
            tensor<string, []> aw_433_equation_0 = const()[name = tensor<string, []>("aw_433_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_433_cast_fp16 = einsum(equation = aw_433_equation_0, values = (var_2888_cast_fp16_16, var_2866_cast_fp16_16))[name = tensor<string, []>("aw_433_cast_fp16")];
            tensor<string, []> aw_435_equation_0 = const()[name = tensor<string, []>("aw_435_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_435_cast_fp16 = einsum(equation = aw_435_equation_0, values = (var_2888_cast_fp16_17, var_2866_cast_fp16_17))[name = tensor<string, []>("aw_435_cast_fp16")];
            tensor<string, []> aw_437_equation_0 = const()[name = tensor<string, []>("aw_437_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_437_cast_fp16 = einsum(equation = aw_437_equation_0, values = (var_2888_cast_fp16_18, var_2866_cast_fp16_18))[name = tensor<string, []>("aw_437_cast_fp16")];
            tensor<string, []> aw_439_equation_0 = const()[name = tensor<string, []>("aw_439_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_439_cast_fp16 = einsum(equation = aw_439_equation_0, values = (var_2888_cast_fp16_19, var_2866_cast_fp16_19))[name = tensor<string, []>("aw_439_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2970_cast_fp16 = softmax(axis = var_2814, x = aw_401_cast_fp16)[name = tensor<string, []>("op_2970_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2971_cast_fp16 = softmax(axis = var_2814, x = aw_403_cast_fp16)[name = tensor<string, []>("op_2971_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2972_cast_fp16 = softmax(axis = var_2814, x = aw_405_cast_fp16)[name = tensor<string, []>("op_2972_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2973_cast_fp16 = softmax(axis = var_2814, x = aw_407_cast_fp16)[name = tensor<string, []>("op_2973_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2974_cast_fp16 = softmax(axis = var_2814, x = aw_409_cast_fp16)[name = tensor<string, []>("op_2974_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2975_cast_fp16 = softmax(axis = var_2814, x = aw_411_cast_fp16)[name = tensor<string, []>("op_2975_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2976_cast_fp16 = softmax(axis = var_2814, x = aw_413_cast_fp16)[name = tensor<string, []>("op_2976_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2977_cast_fp16 = softmax(axis = var_2814, x = aw_415_cast_fp16)[name = tensor<string, []>("op_2977_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2978_cast_fp16 = softmax(axis = var_2814, x = aw_417_cast_fp16)[name = tensor<string, []>("op_2978_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2979_cast_fp16 = softmax(axis = var_2814, x = aw_419_cast_fp16)[name = tensor<string, []>("op_2979_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2980_cast_fp16 = softmax(axis = var_2814, x = aw_421_cast_fp16)[name = tensor<string, []>("op_2980_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2981_cast_fp16 = softmax(axis = var_2814, x = aw_423_cast_fp16)[name = tensor<string, []>("op_2981_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2982_cast_fp16 = softmax(axis = var_2814, x = aw_425_cast_fp16)[name = tensor<string, []>("op_2982_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2983_cast_fp16 = softmax(axis = var_2814, x = aw_427_cast_fp16)[name = tensor<string, []>("op_2983_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2984_cast_fp16 = softmax(axis = var_2814, x = aw_429_cast_fp16)[name = tensor<string, []>("op_2984_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2985_cast_fp16 = softmax(axis = var_2814, x = aw_431_cast_fp16)[name = tensor<string, []>("op_2985_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2986_cast_fp16 = softmax(axis = var_2814, x = aw_433_cast_fp16)[name = tensor<string, []>("op_2986_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2987_cast_fp16 = softmax(axis = var_2814, x = aw_435_cast_fp16)[name = tensor<string, []>("op_2987_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2988_cast_fp16 = softmax(axis = var_2814, x = aw_437_cast_fp16)[name = tensor<string, []>("op_2988_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2989_cast_fp16 = softmax(axis = var_2814, x = aw_439_cast_fp16)[name = tensor<string, []>("op_2989_cast_fp16")];
            tensor<string, []> var_2991_equation_0 = const()[name = tensor<string, []>("op_2991_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2991_cast_fp16 = einsum(equation = var_2991_equation_0, values = (var_2909_cast_fp16_0, var_2970_cast_fp16))[name = tensor<string, []>("op_2991_cast_fp16")];
            tensor<string, []> var_2993_equation_0 = const()[name = tensor<string, []>("op_2993_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2993_cast_fp16 = einsum(equation = var_2993_equation_0, values = (var_2909_cast_fp16_1, var_2971_cast_fp16))[name = tensor<string, []>("op_2993_cast_fp16")];
            tensor<string, []> var_2995_equation_0 = const()[name = tensor<string, []>("op_2995_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2995_cast_fp16 = einsum(equation = var_2995_equation_0, values = (var_2909_cast_fp16_2, var_2972_cast_fp16))[name = tensor<string, []>("op_2995_cast_fp16")];
            tensor<string, []> var_2997_equation_0 = const()[name = tensor<string, []>("op_2997_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2997_cast_fp16 = einsum(equation = var_2997_equation_0, values = (var_2909_cast_fp16_3, var_2973_cast_fp16))[name = tensor<string, []>("op_2997_cast_fp16")];
            tensor<string, []> var_2999_equation_0 = const()[name = tensor<string, []>("op_2999_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2999_cast_fp16 = einsum(equation = var_2999_equation_0, values = (var_2909_cast_fp16_4, var_2974_cast_fp16))[name = tensor<string, []>("op_2999_cast_fp16")];
            tensor<string, []> var_3001_equation_0 = const()[name = tensor<string, []>("op_3001_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3001_cast_fp16 = einsum(equation = var_3001_equation_0, values = (var_2909_cast_fp16_5, var_2975_cast_fp16))[name = tensor<string, []>("op_3001_cast_fp16")];
            tensor<string, []> var_3003_equation_0 = const()[name = tensor<string, []>("op_3003_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3003_cast_fp16 = einsum(equation = var_3003_equation_0, values = (var_2909_cast_fp16_6, var_2976_cast_fp16))[name = tensor<string, []>("op_3003_cast_fp16")];
            tensor<string, []> var_3005_equation_0 = const()[name = tensor<string, []>("op_3005_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3005_cast_fp16 = einsum(equation = var_3005_equation_0, values = (var_2909_cast_fp16_7, var_2977_cast_fp16))[name = tensor<string, []>("op_3005_cast_fp16")];
            tensor<string, []> var_3007_equation_0 = const()[name = tensor<string, []>("op_3007_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3007_cast_fp16 = einsum(equation = var_3007_equation_0, values = (var_2909_cast_fp16_8, var_2978_cast_fp16))[name = tensor<string, []>("op_3007_cast_fp16")];
            tensor<string, []> var_3009_equation_0 = const()[name = tensor<string, []>("op_3009_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3009_cast_fp16 = einsum(equation = var_3009_equation_0, values = (var_2909_cast_fp16_9, var_2979_cast_fp16))[name = tensor<string, []>("op_3009_cast_fp16")];
            tensor<string, []> var_3011_equation_0 = const()[name = tensor<string, []>("op_3011_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3011_cast_fp16 = einsum(equation = var_3011_equation_0, values = (var_2909_cast_fp16_10, var_2980_cast_fp16))[name = tensor<string, []>("op_3011_cast_fp16")];
            tensor<string, []> var_3013_equation_0 = const()[name = tensor<string, []>("op_3013_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3013_cast_fp16 = einsum(equation = var_3013_equation_0, values = (var_2909_cast_fp16_11, var_2981_cast_fp16))[name = tensor<string, []>("op_3013_cast_fp16")];
            tensor<string, []> var_3015_equation_0 = const()[name = tensor<string, []>("op_3015_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3015_cast_fp16 = einsum(equation = var_3015_equation_0, values = (var_2909_cast_fp16_12, var_2982_cast_fp16))[name = tensor<string, []>("op_3015_cast_fp16")];
            tensor<string, []> var_3017_equation_0 = const()[name = tensor<string, []>("op_3017_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3017_cast_fp16 = einsum(equation = var_3017_equation_0, values = (var_2909_cast_fp16_13, var_2983_cast_fp16))[name = tensor<string, []>("op_3017_cast_fp16")];
            tensor<string, []> var_3019_equation_0 = const()[name = tensor<string, []>("op_3019_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3019_cast_fp16 = einsum(equation = var_3019_equation_0, values = (var_2909_cast_fp16_14, var_2984_cast_fp16))[name = tensor<string, []>("op_3019_cast_fp16")];
            tensor<string, []> var_3021_equation_0 = const()[name = tensor<string, []>("op_3021_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3021_cast_fp16 = einsum(equation = var_3021_equation_0, values = (var_2909_cast_fp16_15, var_2985_cast_fp16))[name = tensor<string, []>("op_3021_cast_fp16")];
            tensor<string, []> var_3023_equation_0 = const()[name = tensor<string, []>("op_3023_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3023_cast_fp16 = einsum(equation = var_3023_equation_0, values = (var_2909_cast_fp16_16, var_2986_cast_fp16))[name = tensor<string, []>("op_3023_cast_fp16")];
            tensor<string, []> var_3025_equation_0 = const()[name = tensor<string, []>("op_3025_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3025_cast_fp16 = einsum(equation = var_3025_equation_0, values = (var_2909_cast_fp16_17, var_2987_cast_fp16))[name = tensor<string, []>("op_3025_cast_fp16")];
            tensor<string, []> var_3027_equation_0 = const()[name = tensor<string, []>("op_3027_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3027_cast_fp16 = einsum(equation = var_3027_equation_0, values = (var_2909_cast_fp16_18, var_2988_cast_fp16))[name = tensor<string, []>("op_3027_cast_fp16")];
            tensor<string, []> var_3029_equation_0 = const()[name = tensor<string, []>("op_3029_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3029_cast_fp16 = einsum(equation = var_3029_equation_0, values = (var_2909_cast_fp16_19, var_2989_cast_fp16))[name = tensor<string, []>("op_3029_cast_fp16")];
            tensor<bool, []> input_105_interleave_0 = const()[name = tensor<string, []>("input_105_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_105_cast_fp16 = concat(axis = var_2814, interleave = input_105_interleave_0, values = (var_2991_cast_fp16, var_2993_cast_fp16, var_2995_cast_fp16, var_2997_cast_fp16, var_2999_cast_fp16, var_3001_cast_fp16, var_3003_cast_fp16, var_3005_cast_fp16, var_3007_cast_fp16, var_3009_cast_fp16, var_3011_cast_fp16, var_3013_cast_fp16, var_3015_cast_fp16, var_3017_cast_fp16, var_3019_cast_fp16, var_3021_cast_fp16, var_3023_cast_fp16, var_3025_cast_fp16, var_3027_cast_fp16, var_3029_cast_fp16))[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<string, []> var_3038_pad_type_0 = const()[name = tensor<string, []>("op_3038_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3038_strides_0 = const()[name = tensor<string, []>("op_3038_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3038_pad_0 = const()[name = tensor<string, []>("op_3038_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3038_dilations_0 = const()[name = tensor<string, []>("op_3038_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3038_groups_0 = const()[name = tensor<string, []>("op_3038_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_10_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418032832)))];
            tensor<fp16, [1280]> blocks_10_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421309696)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3038_cast_fp16 = conv(bias = blocks_10_attn_out_bias_to_fp16, dilations = var_3038_dilations_0, groups = var_3038_groups_0, pad = var_3038_pad_0, pad_type = var_3038_pad_type_0, strides = var_3038_strides_0, weight = blocks_10_attn_out_weight_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("op_3038_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_43_cast_fp16 = add(x = inputs_41_cast_fp16, y = var_3038_cast_fp16)[name = tensor<string, []>("inputs_43_cast_fp16")];
            tensor<int32, [1]> input_107_axes_0 = const()[name = tensor<string, []>("input_107_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_107_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421312320)))];
            tensor<fp16, [1280]> input_107_beta_0_to_fp16 = const()[name = tensor<string, []>("input_107_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421314944)))];
            tensor<fp16, []> var_3048_to_fp16 = const()[name = tensor<string, []>("op_3048_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_107_cast_fp16 = layer_norm(axes = input_107_axes_0, beta = input_107_beta_0_to_fp16, epsilon = var_3048_to_fp16, gamma = input_107_gamma_0_to_fp16, x = inputs_43_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<string, []> input_109_pad_type_0 = const()[name = tensor<string, []>("input_109_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_109_strides_0 = const()[name = tensor<string, []>("input_109_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_109_pad_0 = const()[name = tensor<string, []>("input_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_109_dilations_0 = const()[name = tensor<string, []>("input_109_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_109_groups_0 = const()[name = tensor<string, []>("input_109_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_10_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421317568)))];
            tensor<fp16, [5120]> blocks_10_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(434424832)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_109_cast_fp16 = conv(bias = blocks_10_mlp_0_bias_to_fp16, dilations = input_109_dilations_0, groups = input_109_groups_0, pad = input_109_pad_0, pad_type = input_109_pad_type_0, strides = input_109_strides_0, weight = blocks_10_mlp_0_weight_to_fp16, x = input_107_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<string, []> input_111_mode_0 = const()[name = tensor<string, []>("input_111_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_111_cast_fp16 = gelu(mode = input_111_mode_0, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<string, []> var_3074_pad_type_0 = const()[name = tensor<string, []>("op_3074_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3074_strides_0 = const()[name = tensor<string, []>("op_3074_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3074_pad_0 = const()[name = tensor<string, []>("op_3074_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3074_dilations_0 = const()[name = tensor<string, []>("op_3074_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3074_groups_0 = const()[name = tensor<string, []>("op_3074_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_10_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(434435136)))];
            tensor<fp16, [1280]> blocks_10_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447542400)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3074_cast_fp16 = conv(bias = blocks_10_mlp_2_bias_to_fp16, dilations = var_3074_dilations_0, groups = var_3074_groups_0, pad = var_3074_pad_0, pad_type = var_3074_pad_type_0, strides = var_3074_strides_0, weight = blocks_10_mlp_2_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("op_3074_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_45_cast_fp16 = add(x = inputs_43_cast_fp16, y = var_3074_cast_fp16)[name = tensor<string, []>("inputs_45_cast_fp16")];
            tensor<int32, []> var_3083 = const()[name = tensor<string, []>("op_3083"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_113_axes_0 = const()[name = tensor<string, []>("input_113_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_113_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447545024)))];
            tensor<fp16, [1280]> input_113_beta_0_to_fp16 = const()[name = tensor<string, []>("input_113_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447547648)))];
            tensor<fp16, []> var_3099_to_fp16 = const()[name = tensor<string, []>("op_3099_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_113_cast_fp16 = layer_norm(axes = input_113_axes_0, beta = input_113_beta_0_to_fp16, epsilon = var_3099_to_fp16, gamma = input_113_gamma_0_to_fp16, x = inputs_45_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<string, []> q_23_pad_type_0 = const()[name = tensor<string, []>("q_23_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_23_strides_0 = const()[name = tensor<string, []>("q_23_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_23_pad_0 = const()[name = tensor<string, []>("q_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_23_dilations_0 = const()[name = tensor<string, []>("q_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_23_groups_0 = const()[name = tensor<string, []>("q_23_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_3134_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3134_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447550272)))];
            tensor<fp16, [1280]> var_3134_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3134_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(450827136)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3134_cast_fp16 = conv(bias = var_3134_bias_0_to_fp16, dilations = q_23_dilations_0, groups = q_23_groups_0, pad = q_23_pad_0, pad_type = q_23_pad_type_0, strides = q_23_strides_0, weight = var_3134_weight_0_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("op_3134_cast_fp16")];
            tensor<string, []> k_23_pad_type_0 = const()[name = tensor<string, []>("k_23_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_23_strides_0 = const()[name = tensor<string, []>("k_23_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_23_pad_0 = const()[name = tensor<string, []>("k_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_23_dilations_0 = const()[name = tensor<string, []>("k_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_23_groups_0 = const()[name = tensor<string, []>("k_23_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_11_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(450829760)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_23_cast_fp16 = conv(dilations = k_23_dilations_0, groups = k_23_groups_0, pad = k_23_pad_0, pad_type = k_23_pad_type_0, strides = k_23_strides_0, weight = blocks_11_attn_key_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("k_23_cast_fp16")];
            tensor<string, []> var_3132_pad_type_0 = const()[name = tensor<string, []>("op_3132_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3132_strides_0 = const()[name = tensor<string, []>("op_3132_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3132_pad_0 = const()[name = tensor<string, []>("op_3132_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3132_dilations_0 = const()[name = tensor<string, []>("op_3132_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3132_groups_0 = const()[name = tensor<string, []>("op_3132_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_11_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(454106624)))];
            tensor<fp16, [1280]> blocks_11_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(457383488)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3132_cast_fp16 = conv(bias = blocks_11_attn_value_bias_to_fp16, dilations = var_3132_dilations_0, groups = var_3132_groups_0, pad = var_3132_pad_0, pad_type = var_3132_pad_type_0, strides = var_3132_strides_0, weight = blocks_11_attn_value_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("op_3132_cast_fp16")];
            tensor<int32, [20]> tile_33 = const()[name = tensor<string, []>("tile_33"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3135_axis_0 = const()[name = tensor<string, []>("op_3135_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16_19 = split(axis = var_3135_axis_0, split_sizes = tile_33, x = var_3134_cast_fp16)[name = tensor<string, []>("op_3135_cast_fp16")];
            tensor<int32, [4]> var_3156_perm_0 = const()[name = tensor<string, []>("op_3156_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_34 = const()[name = tensor<string, []>("tile_34"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3157_axis_0 = const()[name = tensor<string, []>("op_3157_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_3156_cast_fp16 = transpose(perm = var_3156_perm_0, x = k_23_cast_fp16)[name = tensor<string, []>("transpose_21")];
            tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_3157_cast_fp16_19 = split(axis = var_3157_axis_0, split_sizes = tile_34, x = var_3156_cast_fp16)[name = tensor<string, []>("op_3157_cast_fp16")];
            tensor<int32, [20]> tile_35 = const()[name = tensor<string, []>("tile_35"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3178_axis_0 = const()[name = tensor<string, []>("op_3178_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3178_cast_fp16_19 = split(axis = var_3178_axis_0, split_sizes = tile_35, x = var_3132_cast_fp16)[name = tensor<string, []>("op_3178_cast_fp16")];
            tensor<string, []> aw_441_equation_0 = const()[name = tensor<string, []>("aw_441_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_441_cast_fp16 = einsum(equation = aw_441_equation_0, values = (var_3157_cast_fp16_0, var_3135_cast_fp16_0))[name = tensor<string, []>("aw_441_cast_fp16")];
            tensor<string, []> aw_443_equation_0 = const()[name = tensor<string, []>("aw_443_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_443_cast_fp16 = einsum(equation = aw_443_equation_0, values = (var_3157_cast_fp16_1, var_3135_cast_fp16_1))[name = tensor<string, []>("aw_443_cast_fp16")];
            tensor<string, []> aw_445_equation_0 = const()[name = tensor<string, []>("aw_445_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_445_cast_fp16 = einsum(equation = aw_445_equation_0, values = (var_3157_cast_fp16_2, var_3135_cast_fp16_2))[name = tensor<string, []>("aw_445_cast_fp16")];
            tensor<string, []> aw_447_equation_0 = const()[name = tensor<string, []>("aw_447_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_447_cast_fp16 = einsum(equation = aw_447_equation_0, values = (var_3157_cast_fp16_3, var_3135_cast_fp16_3))[name = tensor<string, []>("aw_447_cast_fp16")];
            tensor<string, []> aw_449_equation_0 = const()[name = tensor<string, []>("aw_449_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_449_cast_fp16 = einsum(equation = aw_449_equation_0, values = (var_3157_cast_fp16_4, var_3135_cast_fp16_4))[name = tensor<string, []>("aw_449_cast_fp16")];
            tensor<string, []> aw_451_equation_0 = const()[name = tensor<string, []>("aw_451_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_451_cast_fp16 = einsum(equation = aw_451_equation_0, values = (var_3157_cast_fp16_5, var_3135_cast_fp16_5))[name = tensor<string, []>("aw_451_cast_fp16")];
            tensor<string, []> aw_453_equation_0 = const()[name = tensor<string, []>("aw_453_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_453_cast_fp16 = einsum(equation = aw_453_equation_0, values = (var_3157_cast_fp16_6, var_3135_cast_fp16_6))[name = tensor<string, []>("aw_453_cast_fp16")];
            tensor<string, []> aw_455_equation_0 = const()[name = tensor<string, []>("aw_455_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_455_cast_fp16 = einsum(equation = aw_455_equation_0, values = (var_3157_cast_fp16_7, var_3135_cast_fp16_7))[name = tensor<string, []>("aw_455_cast_fp16")];
            tensor<string, []> aw_457_equation_0 = const()[name = tensor<string, []>("aw_457_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_457_cast_fp16 = einsum(equation = aw_457_equation_0, values = (var_3157_cast_fp16_8, var_3135_cast_fp16_8))[name = tensor<string, []>("aw_457_cast_fp16")];
            tensor<string, []> aw_459_equation_0 = const()[name = tensor<string, []>("aw_459_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_459_cast_fp16 = einsum(equation = aw_459_equation_0, values = (var_3157_cast_fp16_9, var_3135_cast_fp16_9))[name = tensor<string, []>("aw_459_cast_fp16")];
            tensor<string, []> aw_461_equation_0 = const()[name = tensor<string, []>("aw_461_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_461_cast_fp16 = einsum(equation = aw_461_equation_0, values = (var_3157_cast_fp16_10, var_3135_cast_fp16_10))[name = tensor<string, []>("aw_461_cast_fp16")];
            tensor<string, []> aw_463_equation_0 = const()[name = tensor<string, []>("aw_463_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_463_cast_fp16 = einsum(equation = aw_463_equation_0, values = (var_3157_cast_fp16_11, var_3135_cast_fp16_11))[name = tensor<string, []>("aw_463_cast_fp16")];
            tensor<string, []> aw_465_equation_0 = const()[name = tensor<string, []>("aw_465_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_465_cast_fp16 = einsum(equation = aw_465_equation_0, values = (var_3157_cast_fp16_12, var_3135_cast_fp16_12))[name = tensor<string, []>("aw_465_cast_fp16")];
            tensor<string, []> aw_467_equation_0 = const()[name = tensor<string, []>("aw_467_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_467_cast_fp16 = einsum(equation = aw_467_equation_0, values = (var_3157_cast_fp16_13, var_3135_cast_fp16_13))[name = tensor<string, []>("aw_467_cast_fp16")];
            tensor<string, []> aw_469_equation_0 = const()[name = tensor<string, []>("aw_469_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_469_cast_fp16 = einsum(equation = aw_469_equation_0, values = (var_3157_cast_fp16_14, var_3135_cast_fp16_14))[name = tensor<string, []>("aw_469_cast_fp16")];
            tensor<string, []> aw_471_equation_0 = const()[name = tensor<string, []>("aw_471_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_471_cast_fp16 = einsum(equation = aw_471_equation_0, values = (var_3157_cast_fp16_15, var_3135_cast_fp16_15))[name = tensor<string, []>("aw_471_cast_fp16")];
            tensor<string, []> aw_473_equation_0 = const()[name = tensor<string, []>("aw_473_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_473_cast_fp16 = einsum(equation = aw_473_equation_0, values = (var_3157_cast_fp16_16, var_3135_cast_fp16_16))[name = tensor<string, []>("aw_473_cast_fp16")];
            tensor<string, []> aw_475_equation_0 = const()[name = tensor<string, []>("aw_475_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_475_cast_fp16 = einsum(equation = aw_475_equation_0, values = (var_3157_cast_fp16_17, var_3135_cast_fp16_17))[name = tensor<string, []>("aw_475_cast_fp16")];
            tensor<string, []> aw_477_equation_0 = const()[name = tensor<string, []>("aw_477_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_477_cast_fp16 = einsum(equation = aw_477_equation_0, values = (var_3157_cast_fp16_18, var_3135_cast_fp16_18))[name = tensor<string, []>("aw_477_cast_fp16")];
            tensor<string, []> aw_479_equation_0 = const()[name = tensor<string, []>("aw_479_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_479_cast_fp16 = einsum(equation = aw_479_equation_0, values = (var_3157_cast_fp16_19, var_3135_cast_fp16_19))[name = tensor<string, []>("aw_479_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3239_cast_fp16 = softmax(axis = var_3083, x = aw_441_cast_fp16)[name = tensor<string, []>("op_3239_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3240_cast_fp16 = softmax(axis = var_3083, x = aw_443_cast_fp16)[name = tensor<string, []>("op_3240_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3241_cast_fp16 = softmax(axis = var_3083, x = aw_445_cast_fp16)[name = tensor<string, []>("op_3241_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3242_cast_fp16 = softmax(axis = var_3083, x = aw_447_cast_fp16)[name = tensor<string, []>("op_3242_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3243_cast_fp16 = softmax(axis = var_3083, x = aw_449_cast_fp16)[name = tensor<string, []>("op_3243_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3244_cast_fp16 = softmax(axis = var_3083, x = aw_451_cast_fp16)[name = tensor<string, []>("op_3244_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3245_cast_fp16 = softmax(axis = var_3083, x = aw_453_cast_fp16)[name = tensor<string, []>("op_3245_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3246_cast_fp16 = softmax(axis = var_3083, x = aw_455_cast_fp16)[name = tensor<string, []>("op_3246_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3247_cast_fp16 = softmax(axis = var_3083, x = aw_457_cast_fp16)[name = tensor<string, []>("op_3247_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3248_cast_fp16 = softmax(axis = var_3083, x = aw_459_cast_fp16)[name = tensor<string, []>("op_3248_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3249_cast_fp16 = softmax(axis = var_3083, x = aw_461_cast_fp16)[name = tensor<string, []>("op_3249_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3250_cast_fp16 = softmax(axis = var_3083, x = aw_463_cast_fp16)[name = tensor<string, []>("op_3250_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3251_cast_fp16 = softmax(axis = var_3083, x = aw_465_cast_fp16)[name = tensor<string, []>("op_3251_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3252_cast_fp16 = softmax(axis = var_3083, x = aw_467_cast_fp16)[name = tensor<string, []>("op_3252_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3253_cast_fp16 = softmax(axis = var_3083, x = aw_469_cast_fp16)[name = tensor<string, []>("op_3253_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3254_cast_fp16 = softmax(axis = var_3083, x = aw_471_cast_fp16)[name = tensor<string, []>("op_3254_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3255_cast_fp16 = softmax(axis = var_3083, x = aw_473_cast_fp16)[name = tensor<string, []>("op_3255_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3256_cast_fp16 = softmax(axis = var_3083, x = aw_475_cast_fp16)[name = tensor<string, []>("op_3256_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3257_cast_fp16 = softmax(axis = var_3083, x = aw_477_cast_fp16)[name = tensor<string, []>("op_3257_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3258_cast_fp16 = softmax(axis = var_3083, x = aw_479_cast_fp16)[name = tensor<string, []>("op_3258_cast_fp16")];
            tensor<string, []> var_3260_equation_0 = const()[name = tensor<string, []>("op_3260_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3260_cast_fp16 = einsum(equation = var_3260_equation_0, values = (var_3178_cast_fp16_0, var_3239_cast_fp16))[name = tensor<string, []>("op_3260_cast_fp16")];
            tensor<string, []> var_3262_equation_0 = const()[name = tensor<string, []>("op_3262_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3262_cast_fp16 = einsum(equation = var_3262_equation_0, values = (var_3178_cast_fp16_1, var_3240_cast_fp16))[name = tensor<string, []>("op_3262_cast_fp16")];
            tensor<string, []> var_3264_equation_0 = const()[name = tensor<string, []>("op_3264_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3264_cast_fp16 = einsum(equation = var_3264_equation_0, values = (var_3178_cast_fp16_2, var_3241_cast_fp16))[name = tensor<string, []>("op_3264_cast_fp16")];
            tensor<string, []> var_3266_equation_0 = const()[name = tensor<string, []>("op_3266_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3266_cast_fp16 = einsum(equation = var_3266_equation_0, values = (var_3178_cast_fp16_3, var_3242_cast_fp16))[name = tensor<string, []>("op_3266_cast_fp16")];
            tensor<string, []> var_3268_equation_0 = const()[name = tensor<string, []>("op_3268_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3268_cast_fp16 = einsum(equation = var_3268_equation_0, values = (var_3178_cast_fp16_4, var_3243_cast_fp16))[name = tensor<string, []>("op_3268_cast_fp16")];
            tensor<string, []> var_3270_equation_0 = const()[name = tensor<string, []>("op_3270_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3270_cast_fp16 = einsum(equation = var_3270_equation_0, values = (var_3178_cast_fp16_5, var_3244_cast_fp16))[name = tensor<string, []>("op_3270_cast_fp16")];
            tensor<string, []> var_3272_equation_0 = const()[name = tensor<string, []>("op_3272_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3272_cast_fp16 = einsum(equation = var_3272_equation_0, values = (var_3178_cast_fp16_6, var_3245_cast_fp16))[name = tensor<string, []>("op_3272_cast_fp16")];
            tensor<string, []> var_3274_equation_0 = const()[name = tensor<string, []>("op_3274_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3274_cast_fp16 = einsum(equation = var_3274_equation_0, values = (var_3178_cast_fp16_7, var_3246_cast_fp16))[name = tensor<string, []>("op_3274_cast_fp16")];
            tensor<string, []> var_3276_equation_0 = const()[name = tensor<string, []>("op_3276_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16 = einsum(equation = var_3276_equation_0, values = (var_3178_cast_fp16_8, var_3247_cast_fp16))[name = tensor<string, []>("op_3276_cast_fp16")];
            tensor<string, []> var_3278_equation_0 = const()[name = tensor<string, []>("op_3278_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3278_cast_fp16 = einsum(equation = var_3278_equation_0, values = (var_3178_cast_fp16_9, var_3248_cast_fp16))[name = tensor<string, []>("op_3278_cast_fp16")];
            tensor<string, []> var_3280_equation_0 = const()[name = tensor<string, []>("op_3280_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3280_cast_fp16 = einsum(equation = var_3280_equation_0, values = (var_3178_cast_fp16_10, var_3249_cast_fp16))[name = tensor<string, []>("op_3280_cast_fp16")];
            tensor<string, []> var_3282_equation_0 = const()[name = tensor<string, []>("op_3282_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3282_cast_fp16 = einsum(equation = var_3282_equation_0, values = (var_3178_cast_fp16_11, var_3250_cast_fp16))[name = tensor<string, []>("op_3282_cast_fp16")];
            tensor<string, []> var_3284_equation_0 = const()[name = tensor<string, []>("op_3284_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3284_cast_fp16 = einsum(equation = var_3284_equation_0, values = (var_3178_cast_fp16_12, var_3251_cast_fp16))[name = tensor<string, []>("op_3284_cast_fp16")];
            tensor<string, []> var_3286_equation_0 = const()[name = tensor<string, []>("op_3286_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3286_cast_fp16 = einsum(equation = var_3286_equation_0, values = (var_3178_cast_fp16_13, var_3252_cast_fp16))[name = tensor<string, []>("op_3286_cast_fp16")];
            tensor<string, []> var_3288_equation_0 = const()[name = tensor<string, []>("op_3288_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3288_cast_fp16 = einsum(equation = var_3288_equation_0, values = (var_3178_cast_fp16_14, var_3253_cast_fp16))[name = tensor<string, []>("op_3288_cast_fp16")];
            tensor<string, []> var_3290_equation_0 = const()[name = tensor<string, []>("op_3290_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3290_cast_fp16 = einsum(equation = var_3290_equation_0, values = (var_3178_cast_fp16_15, var_3254_cast_fp16))[name = tensor<string, []>("op_3290_cast_fp16")];
            tensor<string, []> var_3292_equation_0 = const()[name = tensor<string, []>("op_3292_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3292_cast_fp16 = einsum(equation = var_3292_equation_0, values = (var_3178_cast_fp16_16, var_3255_cast_fp16))[name = tensor<string, []>("op_3292_cast_fp16")];
            tensor<string, []> var_3294_equation_0 = const()[name = tensor<string, []>("op_3294_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3294_cast_fp16 = einsum(equation = var_3294_equation_0, values = (var_3178_cast_fp16_17, var_3256_cast_fp16))[name = tensor<string, []>("op_3294_cast_fp16")];
            tensor<string, []> var_3296_equation_0 = const()[name = tensor<string, []>("op_3296_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3296_cast_fp16 = einsum(equation = var_3296_equation_0, values = (var_3178_cast_fp16_18, var_3257_cast_fp16))[name = tensor<string, []>("op_3296_cast_fp16")];
            tensor<string, []> var_3298_equation_0 = const()[name = tensor<string, []>("op_3298_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3298_cast_fp16 = einsum(equation = var_3298_equation_0, values = (var_3178_cast_fp16_19, var_3258_cast_fp16))[name = tensor<string, []>("op_3298_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_115_cast_fp16 = concat(axis = var_3083, interleave = input_115_interleave_0, values = (var_3260_cast_fp16, var_3262_cast_fp16, var_3264_cast_fp16, var_3266_cast_fp16, var_3268_cast_fp16, var_3270_cast_fp16, var_3272_cast_fp16, var_3274_cast_fp16, var_3276_cast_fp16, var_3278_cast_fp16, var_3280_cast_fp16, var_3282_cast_fp16, var_3284_cast_fp16, var_3286_cast_fp16, var_3288_cast_fp16, var_3290_cast_fp16, var_3292_cast_fp16, var_3294_cast_fp16, var_3296_cast_fp16, var_3298_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<string, []> var_3307_pad_type_0 = const()[name = tensor<string, []>("op_3307_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3307_strides_0 = const()[name = tensor<string, []>("op_3307_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3307_pad_0 = const()[name = tensor<string, []>("op_3307_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3307_dilations_0 = const()[name = tensor<string, []>("op_3307_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3307_groups_0 = const()[name = tensor<string, []>("op_3307_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_11_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(457386112)))];
            tensor<fp16, [1280]> blocks_11_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(460662976)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3307_cast_fp16 = conv(bias = blocks_11_attn_out_bias_to_fp16, dilations = var_3307_dilations_0, groups = var_3307_groups_0, pad = var_3307_pad_0, pad_type = var_3307_pad_type_0, strides = var_3307_strides_0, weight = blocks_11_attn_out_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("op_3307_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_47_cast_fp16 = add(x = inputs_45_cast_fp16, y = var_3307_cast_fp16)[name = tensor<string, []>("inputs_47_cast_fp16")];
            tensor<int32, [1]> input_117_axes_0 = const()[name = tensor<string, []>("input_117_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_117_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(460665600)))];
            tensor<fp16, [1280]> input_117_beta_0_to_fp16 = const()[name = tensor<string, []>("input_117_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(460668224)))];
            tensor<fp16, []> var_3317_to_fp16 = const()[name = tensor<string, []>("op_3317_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_117_cast_fp16 = layer_norm(axes = input_117_axes_0, beta = input_117_beta_0_to_fp16, epsilon = var_3317_to_fp16, gamma = input_117_gamma_0_to_fp16, x = inputs_47_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_119_strides_0 = const()[name = tensor<string, []>("input_119_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_119_dilations_0 = const()[name = tensor<string, []>("input_119_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_119_groups_0 = const()[name = tensor<string, []>("input_119_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_11_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(460670848)))];
            tensor<fp16, [5120]> blocks_11_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473778112)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_119_cast_fp16 = conv(bias = blocks_11_mlp_0_bias_to_fp16, dilations = input_119_dilations_0, groups = input_119_groups_0, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = input_119_strides_0, weight = blocks_11_mlp_0_weight_to_fp16, x = input_117_cast_fp16)[name = tensor<string, []>("input_119_cast_fp16")];
            tensor<string, []> input_121_mode_0 = const()[name = tensor<string, []>("input_121_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_121_cast_fp16 = gelu(mode = input_121_mode_0, x = input_119_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<string, []> var_3343_pad_type_0 = const()[name = tensor<string, []>("op_3343_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3343_strides_0 = const()[name = tensor<string, []>("op_3343_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3343_pad_0 = const()[name = tensor<string, []>("op_3343_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3343_dilations_0 = const()[name = tensor<string, []>("op_3343_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3343_groups_0 = const()[name = tensor<string, []>("op_3343_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_11_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473788416)))];
            tensor<fp16, [1280]> blocks_11_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(486895680)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3343_cast_fp16 = conv(bias = blocks_11_mlp_2_bias_to_fp16, dilations = var_3343_dilations_0, groups = var_3343_groups_0, pad = var_3343_pad_0, pad_type = var_3343_pad_type_0, strides = var_3343_strides_0, weight = blocks_11_mlp_2_weight_to_fp16, x = input_121_cast_fp16)[name = tensor<string, []>("op_3343_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_49_cast_fp16 = add(x = inputs_47_cast_fp16, y = var_3343_cast_fp16)[name = tensor<string, []>("inputs_49_cast_fp16")];
            tensor<int32, []> var_3352 = const()[name = tensor<string, []>("op_3352"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_123_axes_0 = const()[name = tensor<string, []>("input_123_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_123_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_123_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(486898304)))];
            tensor<fp16, [1280]> input_123_beta_0_to_fp16 = const()[name = tensor<string, []>("input_123_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(486900928)))];
            tensor<fp16, []> var_3368_to_fp16 = const()[name = tensor<string, []>("op_3368_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_123_cast_fp16 = layer_norm(axes = input_123_axes_0, beta = input_123_beta_0_to_fp16, epsilon = var_3368_to_fp16, gamma = input_123_gamma_0_to_fp16, x = inputs_49_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<string, []> q_25_pad_type_0 = const()[name = tensor<string, []>("q_25_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_25_strides_0 = const()[name = tensor<string, []>("q_25_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_25_pad_0 = const()[name = tensor<string, []>("q_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_25_dilations_0 = const()[name = tensor<string, []>("q_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_25_groups_0 = const()[name = tensor<string, []>("q_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_3403_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3403_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(486903552)))];
            tensor<fp16, [1280]> var_3403_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3403_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(490180416)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3403_cast_fp16 = conv(bias = var_3403_bias_0_to_fp16, dilations = q_25_dilations_0, groups = q_25_groups_0, pad = q_25_pad_0, pad_type = q_25_pad_type_0, strides = q_25_strides_0, weight = var_3403_weight_0_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("op_3403_cast_fp16")];
            tensor<string, []> k_25_pad_type_0 = const()[name = tensor<string, []>("k_25_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_25_strides_0 = const()[name = tensor<string, []>("k_25_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_25_pad_0 = const()[name = tensor<string, []>("k_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_25_dilations_0 = const()[name = tensor<string, []>("k_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_25_groups_0 = const()[name = tensor<string, []>("k_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_12_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(490183040)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_25_cast_fp16 = conv(dilations = k_25_dilations_0, groups = k_25_groups_0, pad = k_25_pad_0, pad_type = k_25_pad_type_0, strides = k_25_strides_0, weight = blocks_12_attn_key_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("k_25_cast_fp16")];
            tensor<string, []> var_3401_pad_type_0 = const()[name = tensor<string, []>("op_3401_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3401_strides_0 = const()[name = tensor<string, []>("op_3401_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3401_pad_0 = const()[name = tensor<string, []>("op_3401_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3401_dilations_0 = const()[name = tensor<string, []>("op_3401_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3401_groups_0 = const()[name = tensor<string, []>("op_3401_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_12_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(493459904)))];
            tensor<fp16, [1280]> blocks_12_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496736768)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3401_cast_fp16 = conv(bias = blocks_12_attn_value_bias_to_fp16, dilations = var_3401_dilations_0, groups = var_3401_groups_0, pad = var_3401_pad_0, pad_type = var_3401_pad_type_0, strides = var_3401_strides_0, weight = blocks_12_attn_value_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("op_3401_cast_fp16")];
            tensor<int32, [20]> tile_36 = const()[name = tensor<string, []>("tile_36"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3404_axis_0 = const()[name = tensor<string, []>("op_3404_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3404_cast_fp16_19 = split(axis = var_3404_axis_0, split_sizes = tile_36, x = var_3403_cast_fp16)[name = tensor<string, []>("op_3404_cast_fp16")];
            tensor<int32, [4]> var_3425_perm_0 = const()[name = tensor<string, []>("op_3425_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_37 = const()[name = tensor<string, []>("tile_37"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3426_axis_0 = const()[name = tensor<string, []>("op_3426_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_3425_cast_fp16 = transpose(perm = var_3425_perm_0, x = k_25_cast_fp16)[name = tensor<string, []>("transpose_20")];
            tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_3426_cast_fp16_19 = split(axis = var_3426_axis_0, split_sizes = tile_37, x = var_3425_cast_fp16)[name = tensor<string, []>("op_3426_cast_fp16")];
            tensor<int32, [20]> tile_38 = const()[name = tensor<string, []>("tile_38"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3447_axis_0 = const()[name = tensor<string, []>("op_3447_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3447_cast_fp16_19 = split(axis = var_3447_axis_0, split_sizes = tile_38, x = var_3401_cast_fp16)[name = tensor<string, []>("op_3447_cast_fp16")];
            tensor<string, []> aw_481_equation_0 = const()[name = tensor<string, []>("aw_481_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_481_cast_fp16 = einsum(equation = aw_481_equation_0, values = (var_3426_cast_fp16_0, var_3404_cast_fp16_0))[name = tensor<string, []>("aw_481_cast_fp16")];
            tensor<string, []> aw_483_equation_0 = const()[name = tensor<string, []>("aw_483_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_483_cast_fp16 = einsum(equation = aw_483_equation_0, values = (var_3426_cast_fp16_1, var_3404_cast_fp16_1))[name = tensor<string, []>("aw_483_cast_fp16")];
            tensor<string, []> aw_485_equation_0 = const()[name = tensor<string, []>("aw_485_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_485_cast_fp16 = einsum(equation = aw_485_equation_0, values = (var_3426_cast_fp16_2, var_3404_cast_fp16_2))[name = tensor<string, []>("aw_485_cast_fp16")];
            tensor<string, []> aw_487_equation_0 = const()[name = tensor<string, []>("aw_487_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_487_cast_fp16 = einsum(equation = aw_487_equation_0, values = (var_3426_cast_fp16_3, var_3404_cast_fp16_3))[name = tensor<string, []>("aw_487_cast_fp16")];
            tensor<string, []> aw_489_equation_0 = const()[name = tensor<string, []>("aw_489_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_489_cast_fp16 = einsum(equation = aw_489_equation_0, values = (var_3426_cast_fp16_4, var_3404_cast_fp16_4))[name = tensor<string, []>("aw_489_cast_fp16")];
            tensor<string, []> aw_491_equation_0 = const()[name = tensor<string, []>("aw_491_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_491_cast_fp16 = einsum(equation = aw_491_equation_0, values = (var_3426_cast_fp16_5, var_3404_cast_fp16_5))[name = tensor<string, []>("aw_491_cast_fp16")];
            tensor<string, []> aw_493_equation_0 = const()[name = tensor<string, []>("aw_493_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_493_cast_fp16 = einsum(equation = aw_493_equation_0, values = (var_3426_cast_fp16_6, var_3404_cast_fp16_6))[name = tensor<string, []>("aw_493_cast_fp16")];
            tensor<string, []> aw_495_equation_0 = const()[name = tensor<string, []>("aw_495_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_495_cast_fp16 = einsum(equation = aw_495_equation_0, values = (var_3426_cast_fp16_7, var_3404_cast_fp16_7))[name = tensor<string, []>("aw_495_cast_fp16")];
            tensor<string, []> aw_497_equation_0 = const()[name = tensor<string, []>("aw_497_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_497_cast_fp16 = einsum(equation = aw_497_equation_0, values = (var_3426_cast_fp16_8, var_3404_cast_fp16_8))[name = tensor<string, []>("aw_497_cast_fp16")];
            tensor<string, []> aw_499_equation_0 = const()[name = tensor<string, []>("aw_499_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_499_cast_fp16 = einsum(equation = aw_499_equation_0, values = (var_3426_cast_fp16_9, var_3404_cast_fp16_9))[name = tensor<string, []>("aw_499_cast_fp16")];
            tensor<string, []> aw_501_equation_0 = const()[name = tensor<string, []>("aw_501_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_501_cast_fp16 = einsum(equation = aw_501_equation_0, values = (var_3426_cast_fp16_10, var_3404_cast_fp16_10))[name = tensor<string, []>("aw_501_cast_fp16")];
            tensor<string, []> aw_503_equation_0 = const()[name = tensor<string, []>("aw_503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_503_cast_fp16 = einsum(equation = aw_503_equation_0, values = (var_3426_cast_fp16_11, var_3404_cast_fp16_11))[name = tensor<string, []>("aw_503_cast_fp16")];
            tensor<string, []> aw_505_equation_0 = const()[name = tensor<string, []>("aw_505_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_505_cast_fp16 = einsum(equation = aw_505_equation_0, values = (var_3426_cast_fp16_12, var_3404_cast_fp16_12))[name = tensor<string, []>("aw_505_cast_fp16")];
            tensor<string, []> aw_507_equation_0 = const()[name = tensor<string, []>("aw_507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_507_cast_fp16 = einsum(equation = aw_507_equation_0, values = (var_3426_cast_fp16_13, var_3404_cast_fp16_13))[name = tensor<string, []>("aw_507_cast_fp16")];
            tensor<string, []> aw_509_equation_0 = const()[name = tensor<string, []>("aw_509_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_509_cast_fp16 = einsum(equation = aw_509_equation_0, values = (var_3426_cast_fp16_14, var_3404_cast_fp16_14))[name = tensor<string, []>("aw_509_cast_fp16")];
            tensor<string, []> aw_511_equation_0 = const()[name = tensor<string, []>("aw_511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_511_cast_fp16 = einsum(equation = aw_511_equation_0, values = (var_3426_cast_fp16_15, var_3404_cast_fp16_15))[name = tensor<string, []>("aw_511_cast_fp16")];
            tensor<string, []> aw_513_equation_0 = const()[name = tensor<string, []>("aw_513_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_513_cast_fp16 = einsum(equation = aw_513_equation_0, values = (var_3426_cast_fp16_16, var_3404_cast_fp16_16))[name = tensor<string, []>("aw_513_cast_fp16")];
            tensor<string, []> aw_515_equation_0 = const()[name = tensor<string, []>("aw_515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_515_cast_fp16 = einsum(equation = aw_515_equation_0, values = (var_3426_cast_fp16_17, var_3404_cast_fp16_17))[name = tensor<string, []>("aw_515_cast_fp16")];
            tensor<string, []> aw_517_equation_0 = const()[name = tensor<string, []>("aw_517_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_517_cast_fp16 = einsum(equation = aw_517_equation_0, values = (var_3426_cast_fp16_18, var_3404_cast_fp16_18))[name = tensor<string, []>("aw_517_cast_fp16")];
            tensor<string, []> aw_519_equation_0 = const()[name = tensor<string, []>("aw_519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_519_cast_fp16 = einsum(equation = aw_519_equation_0, values = (var_3426_cast_fp16_19, var_3404_cast_fp16_19))[name = tensor<string, []>("aw_519_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3508_cast_fp16 = softmax(axis = var_3352, x = aw_481_cast_fp16)[name = tensor<string, []>("op_3508_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3509_cast_fp16 = softmax(axis = var_3352, x = aw_483_cast_fp16)[name = tensor<string, []>("op_3509_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3510_cast_fp16 = softmax(axis = var_3352, x = aw_485_cast_fp16)[name = tensor<string, []>("op_3510_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3511_cast_fp16 = softmax(axis = var_3352, x = aw_487_cast_fp16)[name = tensor<string, []>("op_3511_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3512_cast_fp16 = softmax(axis = var_3352, x = aw_489_cast_fp16)[name = tensor<string, []>("op_3512_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3513_cast_fp16 = softmax(axis = var_3352, x = aw_491_cast_fp16)[name = tensor<string, []>("op_3513_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3514_cast_fp16 = softmax(axis = var_3352, x = aw_493_cast_fp16)[name = tensor<string, []>("op_3514_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3515_cast_fp16 = softmax(axis = var_3352, x = aw_495_cast_fp16)[name = tensor<string, []>("op_3515_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3516_cast_fp16 = softmax(axis = var_3352, x = aw_497_cast_fp16)[name = tensor<string, []>("op_3516_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3517_cast_fp16 = softmax(axis = var_3352, x = aw_499_cast_fp16)[name = tensor<string, []>("op_3517_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3518_cast_fp16 = softmax(axis = var_3352, x = aw_501_cast_fp16)[name = tensor<string, []>("op_3518_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3519_cast_fp16 = softmax(axis = var_3352, x = aw_503_cast_fp16)[name = tensor<string, []>("op_3519_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3520_cast_fp16 = softmax(axis = var_3352, x = aw_505_cast_fp16)[name = tensor<string, []>("op_3520_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3521_cast_fp16 = softmax(axis = var_3352, x = aw_507_cast_fp16)[name = tensor<string, []>("op_3521_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3522_cast_fp16 = softmax(axis = var_3352, x = aw_509_cast_fp16)[name = tensor<string, []>("op_3522_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3523_cast_fp16 = softmax(axis = var_3352, x = aw_511_cast_fp16)[name = tensor<string, []>("op_3523_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3524_cast_fp16 = softmax(axis = var_3352, x = aw_513_cast_fp16)[name = tensor<string, []>("op_3524_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3525_cast_fp16 = softmax(axis = var_3352, x = aw_515_cast_fp16)[name = tensor<string, []>("op_3525_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3526_cast_fp16 = softmax(axis = var_3352, x = aw_517_cast_fp16)[name = tensor<string, []>("op_3526_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3527_cast_fp16 = softmax(axis = var_3352, x = aw_519_cast_fp16)[name = tensor<string, []>("op_3527_cast_fp16")];
            tensor<string, []> var_3529_equation_0 = const()[name = tensor<string, []>("op_3529_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3529_cast_fp16 = einsum(equation = var_3529_equation_0, values = (var_3447_cast_fp16_0, var_3508_cast_fp16))[name = tensor<string, []>("op_3529_cast_fp16")];
            tensor<string, []> var_3531_equation_0 = const()[name = tensor<string, []>("op_3531_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3531_cast_fp16 = einsum(equation = var_3531_equation_0, values = (var_3447_cast_fp16_1, var_3509_cast_fp16))[name = tensor<string, []>("op_3531_cast_fp16")];
            tensor<string, []> var_3533_equation_0 = const()[name = tensor<string, []>("op_3533_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3533_cast_fp16 = einsum(equation = var_3533_equation_0, values = (var_3447_cast_fp16_2, var_3510_cast_fp16))[name = tensor<string, []>("op_3533_cast_fp16")];
            tensor<string, []> var_3535_equation_0 = const()[name = tensor<string, []>("op_3535_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3535_cast_fp16 = einsum(equation = var_3535_equation_0, values = (var_3447_cast_fp16_3, var_3511_cast_fp16))[name = tensor<string, []>("op_3535_cast_fp16")];
            tensor<string, []> var_3537_equation_0 = const()[name = tensor<string, []>("op_3537_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3537_cast_fp16 = einsum(equation = var_3537_equation_0, values = (var_3447_cast_fp16_4, var_3512_cast_fp16))[name = tensor<string, []>("op_3537_cast_fp16")];
            tensor<string, []> var_3539_equation_0 = const()[name = tensor<string, []>("op_3539_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3539_cast_fp16 = einsum(equation = var_3539_equation_0, values = (var_3447_cast_fp16_5, var_3513_cast_fp16))[name = tensor<string, []>("op_3539_cast_fp16")];
            tensor<string, []> var_3541_equation_0 = const()[name = tensor<string, []>("op_3541_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3541_cast_fp16 = einsum(equation = var_3541_equation_0, values = (var_3447_cast_fp16_6, var_3514_cast_fp16))[name = tensor<string, []>("op_3541_cast_fp16")];
            tensor<string, []> var_3543_equation_0 = const()[name = tensor<string, []>("op_3543_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3543_cast_fp16 = einsum(equation = var_3543_equation_0, values = (var_3447_cast_fp16_7, var_3515_cast_fp16))[name = tensor<string, []>("op_3543_cast_fp16")];
            tensor<string, []> var_3545_equation_0 = const()[name = tensor<string, []>("op_3545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3545_cast_fp16 = einsum(equation = var_3545_equation_0, values = (var_3447_cast_fp16_8, var_3516_cast_fp16))[name = tensor<string, []>("op_3545_cast_fp16")];
            tensor<string, []> var_3547_equation_0 = const()[name = tensor<string, []>("op_3547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3547_cast_fp16 = einsum(equation = var_3547_equation_0, values = (var_3447_cast_fp16_9, var_3517_cast_fp16))[name = tensor<string, []>("op_3547_cast_fp16")];
            tensor<string, []> var_3549_equation_0 = const()[name = tensor<string, []>("op_3549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3549_cast_fp16 = einsum(equation = var_3549_equation_0, values = (var_3447_cast_fp16_10, var_3518_cast_fp16))[name = tensor<string, []>("op_3549_cast_fp16")];
            tensor<string, []> var_3551_equation_0 = const()[name = tensor<string, []>("op_3551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3551_cast_fp16 = einsum(equation = var_3551_equation_0, values = (var_3447_cast_fp16_11, var_3519_cast_fp16))[name = tensor<string, []>("op_3551_cast_fp16")];
            tensor<string, []> var_3553_equation_0 = const()[name = tensor<string, []>("op_3553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3553_cast_fp16 = einsum(equation = var_3553_equation_0, values = (var_3447_cast_fp16_12, var_3520_cast_fp16))[name = tensor<string, []>("op_3553_cast_fp16")];
            tensor<string, []> var_3555_equation_0 = const()[name = tensor<string, []>("op_3555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3555_cast_fp16 = einsum(equation = var_3555_equation_0, values = (var_3447_cast_fp16_13, var_3521_cast_fp16))[name = tensor<string, []>("op_3555_cast_fp16")];
            tensor<string, []> var_3557_equation_0 = const()[name = tensor<string, []>("op_3557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3557_cast_fp16 = einsum(equation = var_3557_equation_0, values = (var_3447_cast_fp16_14, var_3522_cast_fp16))[name = tensor<string, []>("op_3557_cast_fp16")];
            tensor<string, []> var_3559_equation_0 = const()[name = tensor<string, []>("op_3559_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3559_cast_fp16 = einsum(equation = var_3559_equation_0, values = (var_3447_cast_fp16_15, var_3523_cast_fp16))[name = tensor<string, []>("op_3559_cast_fp16")];
            tensor<string, []> var_3561_equation_0 = const()[name = tensor<string, []>("op_3561_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3561_cast_fp16 = einsum(equation = var_3561_equation_0, values = (var_3447_cast_fp16_16, var_3524_cast_fp16))[name = tensor<string, []>("op_3561_cast_fp16")];
            tensor<string, []> var_3563_equation_0 = const()[name = tensor<string, []>("op_3563_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3563_cast_fp16 = einsum(equation = var_3563_equation_0, values = (var_3447_cast_fp16_17, var_3525_cast_fp16))[name = tensor<string, []>("op_3563_cast_fp16")];
            tensor<string, []> var_3565_equation_0 = const()[name = tensor<string, []>("op_3565_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3565_cast_fp16 = einsum(equation = var_3565_equation_0, values = (var_3447_cast_fp16_18, var_3526_cast_fp16))[name = tensor<string, []>("op_3565_cast_fp16")];
            tensor<string, []> var_3567_equation_0 = const()[name = tensor<string, []>("op_3567_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3567_cast_fp16 = einsum(equation = var_3567_equation_0, values = (var_3447_cast_fp16_19, var_3527_cast_fp16))[name = tensor<string, []>("op_3567_cast_fp16")];
            tensor<bool, []> input_125_interleave_0 = const()[name = tensor<string, []>("input_125_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_125_cast_fp16 = concat(axis = var_3352, interleave = input_125_interleave_0, values = (var_3529_cast_fp16, var_3531_cast_fp16, var_3533_cast_fp16, var_3535_cast_fp16, var_3537_cast_fp16, var_3539_cast_fp16, var_3541_cast_fp16, var_3543_cast_fp16, var_3545_cast_fp16, var_3547_cast_fp16, var_3549_cast_fp16, var_3551_cast_fp16, var_3553_cast_fp16, var_3555_cast_fp16, var_3557_cast_fp16, var_3559_cast_fp16, var_3561_cast_fp16, var_3563_cast_fp16, var_3565_cast_fp16, var_3567_cast_fp16))[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<string, []> var_3576_pad_type_0 = const()[name = tensor<string, []>("op_3576_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3576_strides_0 = const()[name = tensor<string, []>("op_3576_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3576_pad_0 = const()[name = tensor<string, []>("op_3576_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3576_dilations_0 = const()[name = tensor<string, []>("op_3576_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3576_groups_0 = const()[name = tensor<string, []>("op_3576_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_12_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496739392)))];
            tensor<fp16, [1280]> blocks_12_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500016256)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3576_cast_fp16 = conv(bias = blocks_12_attn_out_bias_to_fp16, dilations = var_3576_dilations_0, groups = var_3576_groups_0, pad = var_3576_pad_0, pad_type = var_3576_pad_type_0, strides = var_3576_strides_0, weight = blocks_12_attn_out_weight_to_fp16, x = input_125_cast_fp16)[name = tensor<string, []>("op_3576_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_51_cast_fp16 = add(x = inputs_49_cast_fp16, y = var_3576_cast_fp16)[name = tensor<string, []>("inputs_51_cast_fp16")];
            tensor<int32, [1]> input_127_axes_0 = const()[name = tensor<string, []>("input_127_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_127_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_127_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500018880)))];
            tensor<fp16, [1280]> input_127_beta_0_to_fp16 = const()[name = tensor<string, []>("input_127_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500021504)))];
            tensor<fp16, []> var_3586_to_fp16 = const()[name = tensor<string, []>("op_3586_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_127_cast_fp16 = layer_norm(axes = input_127_axes_0, beta = input_127_beta_0_to_fp16, epsilon = var_3586_to_fp16, gamma = input_127_gamma_0_to_fp16, x = inputs_51_cast_fp16)[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_129_strides_0 = const()[name = tensor<string, []>("input_129_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_129_dilations_0 = const()[name = tensor<string, []>("input_129_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_129_groups_0 = const()[name = tensor<string, []>("input_129_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_12_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500024128)))];
            tensor<fp16, [5120]> blocks_12_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513131392)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_129_cast_fp16 = conv(bias = blocks_12_mlp_0_bias_to_fp16, dilations = input_129_dilations_0, groups = input_129_groups_0, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = input_129_strides_0, weight = blocks_12_mlp_0_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<string, []> input_131_mode_0 = const()[name = tensor<string, []>("input_131_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_131_cast_fp16 = gelu(mode = input_131_mode_0, x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<string, []> var_3612_pad_type_0 = const()[name = tensor<string, []>("op_3612_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3612_strides_0 = const()[name = tensor<string, []>("op_3612_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3612_pad_0 = const()[name = tensor<string, []>("op_3612_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3612_dilations_0 = const()[name = tensor<string, []>("op_3612_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3612_groups_0 = const()[name = tensor<string, []>("op_3612_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_12_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513141696)))];
            tensor<fp16, [1280]> blocks_12_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(526248960)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3612_cast_fp16 = conv(bias = blocks_12_mlp_2_bias_to_fp16, dilations = var_3612_dilations_0, groups = var_3612_groups_0, pad = var_3612_pad_0, pad_type = var_3612_pad_type_0, strides = var_3612_strides_0, weight = blocks_12_mlp_2_weight_to_fp16, x = input_131_cast_fp16)[name = tensor<string, []>("op_3612_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_53_cast_fp16 = add(x = inputs_51_cast_fp16, y = var_3612_cast_fp16)[name = tensor<string, []>("inputs_53_cast_fp16")];
            tensor<int32, []> var_3621 = const()[name = tensor<string, []>("op_3621"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_133_axes_0 = const()[name = tensor<string, []>("input_133_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_133_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_133_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(526251584)))];
            tensor<fp16, [1280]> input_133_beta_0_to_fp16 = const()[name = tensor<string, []>("input_133_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(526254208)))];
            tensor<fp16, []> var_3637_to_fp16 = const()[name = tensor<string, []>("op_3637_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_133_cast_fp16 = layer_norm(axes = input_133_axes_0, beta = input_133_beta_0_to_fp16, epsilon = var_3637_to_fp16, gamma = input_133_gamma_0_to_fp16, x = inputs_53_cast_fp16)[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<string, []> q_27_pad_type_0 = const()[name = tensor<string, []>("q_27_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_27_strides_0 = const()[name = tensor<string, []>("q_27_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_27_pad_0 = const()[name = tensor<string, []>("q_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_27_dilations_0 = const()[name = tensor<string, []>("q_27_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_27_groups_0 = const()[name = tensor<string, []>("q_27_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_3672_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3672_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(526256832)))];
            tensor<fp16, [1280]> var_3672_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3672_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(529533696)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3672_cast_fp16 = conv(bias = var_3672_bias_0_to_fp16, dilations = q_27_dilations_0, groups = q_27_groups_0, pad = q_27_pad_0, pad_type = q_27_pad_type_0, strides = q_27_strides_0, weight = var_3672_weight_0_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("op_3672_cast_fp16")];
            tensor<string, []> k_27_pad_type_0 = const()[name = tensor<string, []>("k_27_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_27_strides_0 = const()[name = tensor<string, []>("k_27_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_27_pad_0 = const()[name = tensor<string, []>("k_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_27_dilations_0 = const()[name = tensor<string, []>("k_27_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_27_groups_0 = const()[name = tensor<string, []>("k_27_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_13_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(529536320)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_27_cast_fp16 = conv(dilations = k_27_dilations_0, groups = k_27_groups_0, pad = k_27_pad_0, pad_type = k_27_pad_type_0, strides = k_27_strides_0, weight = blocks_13_attn_key_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("k_27_cast_fp16")];
            tensor<string, []> var_3670_pad_type_0 = const()[name = tensor<string, []>("op_3670_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3670_strides_0 = const()[name = tensor<string, []>("op_3670_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3670_pad_0 = const()[name = tensor<string, []>("op_3670_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3670_dilations_0 = const()[name = tensor<string, []>("op_3670_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3670_groups_0 = const()[name = tensor<string, []>("op_3670_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_13_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(532813184)))];
            tensor<fp16, [1280]> blocks_13_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536090048)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3670_cast_fp16 = conv(bias = blocks_13_attn_value_bias_to_fp16, dilations = var_3670_dilations_0, groups = var_3670_groups_0, pad = var_3670_pad_0, pad_type = var_3670_pad_type_0, strides = var_3670_strides_0, weight = blocks_13_attn_value_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("op_3670_cast_fp16")];
            tensor<int32, [20]> tile_39 = const()[name = tensor<string, []>("tile_39"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3673_axis_0 = const()[name = tensor<string, []>("op_3673_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3673_cast_fp16_19 = split(axis = var_3673_axis_0, split_sizes = tile_39, x = var_3672_cast_fp16)[name = tensor<string, []>("op_3673_cast_fp16")];
            tensor<int32, [4]> var_3694_perm_0 = const()[name = tensor<string, []>("op_3694_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_40 = const()[name = tensor<string, []>("tile_40"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3695_axis_0 = const()[name = tensor<string, []>("op_3695_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_3694_cast_fp16 = transpose(perm = var_3694_perm_0, x = k_27_cast_fp16)[name = tensor<string, []>("transpose_19")];
            tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_3695_cast_fp16_19 = split(axis = var_3695_axis_0, split_sizes = tile_40, x = var_3694_cast_fp16)[name = tensor<string, []>("op_3695_cast_fp16")];
            tensor<int32, [20]> tile_41 = const()[name = tensor<string, []>("tile_41"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3716_axis_0 = const()[name = tensor<string, []>("op_3716_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3716_cast_fp16_19 = split(axis = var_3716_axis_0, split_sizes = tile_41, x = var_3670_cast_fp16)[name = tensor<string, []>("op_3716_cast_fp16")];
            tensor<string, []> aw_521_equation_0 = const()[name = tensor<string, []>("aw_521_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_521_cast_fp16 = einsum(equation = aw_521_equation_0, values = (var_3695_cast_fp16_0, var_3673_cast_fp16_0))[name = tensor<string, []>("aw_521_cast_fp16")];
            tensor<string, []> aw_523_equation_0 = const()[name = tensor<string, []>("aw_523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_523_cast_fp16 = einsum(equation = aw_523_equation_0, values = (var_3695_cast_fp16_1, var_3673_cast_fp16_1))[name = tensor<string, []>("aw_523_cast_fp16")];
            tensor<string, []> aw_525_equation_0 = const()[name = tensor<string, []>("aw_525_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_525_cast_fp16 = einsum(equation = aw_525_equation_0, values = (var_3695_cast_fp16_2, var_3673_cast_fp16_2))[name = tensor<string, []>("aw_525_cast_fp16")];
            tensor<string, []> aw_527_equation_0 = const()[name = tensor<string, []>("aw_527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_527_cast_fp16 = einsum(equation = aw_527_equation_0, values = (var_3695_cast_fp16_3, var_3673_cast_fp16_3))[name = tensor<string, []>("aw_527_cast_fp16")];
            tensor<string, []> aw_529_equation_0 = const()[name = tensor<string, []>("aw_529_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_529_cast_fp16 = einsum(equation = aw_529_equation_0, values = (var_3695_cast_fp16_4, var_3673_cast_fp16_4))[name = tensor<string, []>("aw_529_cast_fp16")];
            tensor<string, []> aw_531_equation_0 = const()[name = tensor<string, []>("aw_531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_531_cast_fp16 = einsum(equation = aw_531_equation_0, values = (var_3695_cast_fp16_5, var_3673_cast_fp16_5))[name = tensor<string, []>("aw_531_cast_fp16")];
            tensor<string, []> aw_533_equation_0 = const()[name = tensor<string, []>("aw_533_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_533_cast_fp16 = einsum(equation = aw_533_equation_0, values = (var_3695_cast_fp16_6, var_3673_cast_fp16_6))[name = tensor<string, []>("aw_533_cast_fp16")];
            tensor<string, []> aw_535_equation_0 = const()[name = tensor<string, []>("aw_535_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_535_cast_fp16 = einsum(equation = aw_535_equation_0, values = (var_3695_cast_fp16_7, var_3673_cast_fp16_7))[name = tensor<string, []>("aw_535_cast_fp16")];
            tensor<string, []> aw_537_equation_0 = const()[name = tensor<string, []>("aw_537_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_537_cast_fp16 = einsum(equation = aw_537_equation_0, values = (var_3695_cast_fp16_8, var_3673_cast_fp16_8))[name = tensor<string, []>("aw_537_cast_fp16")];
            tensor<string, []> aw_539_equation_0 = const()[name = tensor<string, []>("aw_539_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_539_cast_fp16 = einsum(equation = aw_539_equation_0, values = (var_3695_cast_fp16_9, var_3673_cast_fp16_9))[name = tensor<string, []>("aw_539_cast_fp16")];
            tensor<string, []> aw_541_equation_0 = const()[name = tensor<string, []>("aw_541_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_541_cast_fp16 = einsum(equation = aw_541_equation_0, values = (var_3695_cast_fp16_10, var_3673_cast_fp16_10))[name = tensor<string, []>("aw_541_cast_fp16")];
            tensor<string, []> aw_543_equation_0 = const()[name = tensor<string, []>("aw_543_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_543_cast_fp16 = einsum(equation = aw_543_equation_0, values = (var_3695_cast_fp16_11, var_3673_cast_fp16_11))[name = tensor<string, []>("aw_543_cast_fp16")];
            tensor<string, []> aw_545_equation_0 = const()[name = tensor<string, []>("aw_545_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_545_cast_fp16 = einsum(equation = aw_545_equation_0, values = (var_3695_cast_fp16_12, var_3673_cast_fp16_12))[name = tensor<string, []>("aw_545_cast_fp16")];
            tensor<string, []> aw_547_equation_0 = const()[name = tensor<string, []>("aw_547_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_547_cast_fp16 = einsum(equation = aw_547_equation_0, values = (var_3695_cast_fp16_13, var_3673_cast_fp16_13))[name = tensor<string, []>("aw_547_cast_fp16")];
            tensor<string, []> aw_549_equation_0 = const()[name = tensor<string, []>("aw_549_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_549_cast_fp16 = einsum(equation = aw_549_equation_0, values = (var_3695_cast_fp16_14, var_3673_cast_fp16_14))[name = tensor<string, []>("aw_549_cast_fp16")];
            tensor<string, []> aw_551_equation_0 = const()[name = tensor<string, []>("aw_551_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_551_cast_fp16 = einsum(equation = aw_551_equation_0, values = (var_3695_cast_fp16_15, var_3673_cast_fp16_15))[name = tensor<string, []>("aw_551_cast_fp16")];
            tensor<string, []> aw_553_equation_0 = const()[name = tensor<string, []>("aw_553_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_553_cast_fp16 = einsum(equation = aw_553_equation_0, values = (var_3695_cast_fp16_16, var_3673_cast_fp16_16))[name = tensor<string, []>("aw_553_cast_fp16")];
            tensor<string, []> aw_555_equation_0 = const()[name = tensor<string, []>("aw_555_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_555_cast_fp16 = einsum(equation = aw_555_equation_0, values = (var_3695_cast_fp16_17, var_3673_cast_fp16_17))[name = tensor<string, []>("aw_555_cast_fp16")];
            tensor<string, []> aw_557_equation_0 = const()[name = tensor<string, []>("aw_557_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_557_cast_fp16 = einsum(equation = aw_557_equation_0, values = (var_3695_cast_fp16_18, var_3673_cast_fp16_18))[name = tensor<string, []>("aw_557_cast_fp16")];
            tensor<string, []> aw_559_equation_0 = const()[name = tensor<string, []>("aw_559_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_559_cast_fp16 = einsum(equation = aw_559_equation_0, values = (var_3695_cast_fp16_19, var_3673_cast_fp16_19))[name = tensor<string, []>("aw_559_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3777_cast_fp16 = softmax(axis = var_3621, x = aw_521_cast_fp16)[name = tensor<string, []>("op_3777_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3778_cast_fp16 = softmax(axis = var_3621, x = aw_523_cast_fp16)[name = tensor<string, []>("op_3778_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3779_cast_fp16 = softmax(axis = var_3621, x = aw_525_cast_fp16)[name = tensor<string, []>("op_3779_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3780_cast_fp16 = softmax(axis = var_3621, x = aw_527_cast_fp16)[name = tensor<string, []>("op_3780_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3781_cast_fp16 = softmax(axis = var_3621, x = aw_529_cast_fp16)[name = tensor<string, []>("op_3781_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3782_cast_fp16 = softmax(axis = var_3621, x = aw_531_cast_fp16)[name = tensor<string, []>("op_3782_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3783_cast_fp16 = softmax(axis = var_3621, x = aw_533_cast_fp16)[name = tensor<string, []>("op_3783_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3784_cast_fp16 = softmax(axis = var_3621, x = aw_535_cast_fp16)[name = tensor<string, []>("op_3784_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3785_cast_fp16 = softmax(axis = var_3621, x = aw_537_cast_fp16)[name = tensor<string, []>("op_3785_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3786_cast_fp16 = softmax(axis = var_3621, x = aw_539_cast_fp16)[name = tensor<string, []>("op_3786_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3787_cast_fp16 = softmax(axis = var_3621, x = aw_541_cast_fp16)[name = tensor<string, []>("op_3787_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3788_cast_fp16 = softmax(axis = var_3621, x = aw_543_cast_fp16)[name = tensor<string, []>("op_3788_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3789_cast_fp16 = softmax(axis = var_3621, x = aw_545_cast_fp16)[name = tensor<string, []>("op_3789_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3790_cast_fp16 = softmax(axis = var_3621, x = aw_547_cast_fp16)[name = tensor<string, []>("op_3790_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3791_cast_fp16 = softmax(axis = var_3621, x = aw_549_cast_fp16)[name = tensor<string, []>("op_3791_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3792_cast_fp16 = softmax(axis = var_3621, x = aw_551_cast_fp16)[name = tensor<string, []>("op_3792_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3793_cast_fp16 = softmax(axis = var_3621, x = aw_553_cast_fp16)[name = tensor<string, []>("op_3793_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3794_cast_fp16 = softmax(axis = var_3621, x = aw_555_cast_fp16)[name = tensor<string, []>("op_3794_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3795_cast_fp16 = softmax(axis = var_3621, x = aw_557_cast_fp16)[name = tensor<string, []>("op_3795_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3796_cast_fp16 = softmax(axis = var_3621, x = aw_559_cast_fp16)[name = tensor<string, []>("op_3796_cast_fp16")];
            tensor<string, []> var_3798_equation_0 = const()[name = tensor<string, []>("op_3798_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3798_cast_fp16 = einsum(equation = var_3798_equation_0, values = (var_3716_cast_fp16_0, var_3777_cast_fp16))[name = tensor<string, []>("op_3798_cast_fp16")];
            tensor<string, []> var_3800_equation_0 = const()[name = tensor<string, []>("op_3800_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3800_cast_fp16 = einsum(equation = var_3800_equation_0, values = (var_3716_cast_fp16_1, var_3778_cast_fp16))[name = tensor<string, []>("op_3800_cast_fp16")];
            tensor<string, []> var_3802_equation_0 = const()[name = tensor<string, []>("op_3802_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3802_cast_fp16 = einsum(equation = var_3802_equation_0, values = (var_3716_cast_fp16_2, var_3779_cast_fp16))[name = tensor<string, []>("op_3802_cast_fp16")];
            tensor<string, []> var_3804_equation_0 = const()[name = tensor<string, []>("op_3804_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3804_cast_fp16 = einsum(equation = var_3804_equation_0, values = (var_3716_cast_fp16_3, var_3780_cast_fp16))[name = tensor<string, []>("op_3804_cast_fp16")];
            tensor<string, []> var_3806_equation_0 = const()[name = tensor<string, []>("op_3806_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3806_cast_fp16 = einsum(equation = var_3806_equation_0, values = (var_3716_cast_fp16_4, var_3781_cast_fp16))[name = tensor<string, []>("op_3806_cast_fp16")];
            tensor<string, []> var_3808_equation_0 = const()[name = tensor<string, []>("op_3808_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3808_cast_fp16 = einsum(equation = var_3808_equation_0, values = (var_3716_cast_fp16_5, var_3782_cast_fp16))[name = tensor<string, []>("op_3808_cast_fp16")];
            tensor<string, []> var_3810_equation_0 = const()[name = tensor<string, []>("op_3810_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3810_cast_fp16 = einsum(equation = var_3810_equation_0, values = (var_3716_cast_fp16_6, var_3783_cast_fp16))[name = tensor<string, []>("op_3810_cast_fp16")];
            tensor<string, []> var_3812_equation_0 = const()[name = tensor<string, []>("op_3812_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3812_cast_fp16 = einsum(equation = var_3812_equation_0, values = (var_3716_cast_fp16_7, var_3784_cast_fp16))[name = tensor<string, []>("op_3812_cast_fp16")];
            tensor<string, []> var_3814_equation_0 = const()[name = tensor<string, []>("op_3814_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3814_cast_fp16 = einsum(equation = var_3814_equation_0, values = (var_3716_cast_fp16_8, var_3785_cast_fp16))[name = tensor<string, []>("op_3814_cast_fp16")];
            tensor<string, []> var_3816_equation_0 = const()[name = tensor<string, []>("op_3816_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3816_cast_fp16 = einsum(equation = var_3816_equation_0, values = (var_3716_cast_fp16_9, var_3786_cast_fp16))[name = tensor<string, []>("op_3816_cast_fp16")];
            tensor<string, []> var_3818_equation_0 = const()[name = tensor<string, []>("op_3818_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3818_cast_fp16 = einsum(equation = var_3818_equation_0, values = (var_3716_cast_fp16_10, var_3787_cast_fp16))[name = tensor<string, []>("op_3818_cast_fp16")];
            tensor<string, []> var_3820_equation_0 = const()[name = tensor<string, []>("op_3820_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3820_cast_fp16 = einsum(equation = var_3820_equation_0, values = (var_3716_cast_fp16_11, var_3788_cast_fp16))[name = tensor<string, []>("op_3820_cast_fp16")];
            tensor<string, []> var_3822_equation_0 = const()[name = tensor<string, []>("op_3822_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3822_cast_fp16 = einsum(equation = var_3822_equation_0, values = (var_3716_cast_fp16_12, var_3789_cast_fp16))[name = tensor<string, []>("op_3822_cast_fp16")];
            tensor<string, []> var_3824_equation_0 = const()[name = tensor<string, []>("op_3824_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3824_cast_fp16 = einsum(equation = var_3824_equation_0, values = (var_3716_cast_fp16_13, var_3790_cast_fp16))[name = tensor<string, []>("op_3824_cast_fp16")];
            tensor<string, []> var_3826_equation_0 = const()[name = tensor<string, []>("op_3826_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3826_cast_fp16 = einsum(equation = var_3826_equation_0, values = (var_3716_cast_fp16_14, var_3791_cast_fp16))[name = tensor<string, []>("op_3826_cast_fp16")];
            tensor<string, []> var_3828_equation_0 = const()[name = tensor<string, []>("op_3828_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3828_cast_fp16 = einsum(equation = var_3828_equation_0, values = (var_3716_cast_fp16_15, var_3792_cast_fp16))[name = tensor<string, []>("op_3828_cast_fp16")];
            tensor<string, []> var_3830_equation_0 = const()[name = tensor<string, []>("op_3830_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3830_cast_fp16 = einsum(equation = var_3830_equation_0, values = (var_3716_cast_fp16_16, var_3793_cast_fp16))[name = tensor<string, []>("op_3830_cast_fp16")];
            tensor<string, []> var_3832_equation_0 = const()[name = tensor<string, []>("op_3832_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3832_cast_fp16 = einsum(equation = var_3832_equation_0, values = (var_3716_cast_fp16_17, var_3794_cast_fp16))[name = tensor<string, []>("op_3832_cast_fp16")];
            tensor<string, []> var_3834_equation_0 = const()[name = tensor<string, []>("op_3834_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3834_cast_fp16 = einsum(equation = var_3834_equation_0, values = (var_3716_cast_fp16_18, var_3795_cast_fp16))[name = tensor<string, []>("op_3834_cast_fp16")];
            tensor<string, []> var_3836_equation_0 = const()[name = tensor<string, []>("op_3836_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3836_cast_fp16 = einsum(equation = var_3836_equation_0, values = (var_3716_cast_fp16_19, var_3796_cast_fp16))[name = tensor<string, []>("op_3836_cast_fp16")];
            tensor<bool, []> input_135_interleave_0 = const()[name = tensor<string, []>("input_135_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_135_cast_fp16 = concat(axis = var_3621, interleave = input_135_interleave_0, values = (var_3798_cast_fp16, var_3800_cast_fp16, var_3802_cast_fp16, var_3804_cast_fp16, var_3806_cast_fp16, var_3808_cast_fp16, var_3810_cast_fp16, var_3812_cast_fp16, var_3814_cast_fp16, var_3816_cast_fp16, var_3818_cast_fp16, var_3820_cast_fp16, var_3822_cast_fp16, var_3824_cast_fp16, var_3826_cast_fp16, var_3828_cast_fp16, var_3830_cast_fp16, var_3832_cast_fp16, var_3834_cast_fp16, var_3836_cast_fp16))[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<string, []> var_3845_pad_type_0 = const()[name = tensor<string, []>("op_3845_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3845_strides_0 = const()[name = tensor<string, []>("op_3845_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3845_pad_0 = const()[name = tensor<string, []>("op_3845_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3845_dilations_0 = const()[name = tensor<string, []>("op_3845_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3845_groups_0 = const()[name = tensor<string, []>("op_3845_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_13_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536092672)))];
            tensor<fp16, [1280]> blocks_13_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(539369536)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3845_cast_fp16 = conv(bias = blocks_13_attn_out_bias_to_fp16, dilations = var_3845_dilations_0, groups = var_3845_groups_0, pad = var_3845_pad_0, pad_type = var_3845_pad_type_0, strides = var_3845_strides_0, weight = blocks_13_attn_out_weight_to_fp16, x = input_135_cast_fp16)[name = tensor<string, []>("op_3845_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_55_cast_fp16 = add(x = inputs_53_cast_fp16, y = var_3845_cast_fp16)[name = tensor<string, []>("inputs_55_cast_fp16")];
            tensor<int32, [1]> input_137_axes_0 = const()[name = tensor<string, []>("input_137_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_137_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_137_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(539372160)))];
            tensor<fp16, [1280]> input_137_beta_0_to_fp16 = const()[name = tensor<string, []>("input_137_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(539374784)))];
            tensor<fp16, []> var_3855_to_fp16 = const()[name = tensor<string, []>("op_3855_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_137_cast_fp16 = layer_norm(axes = input_137_axes_0, beta = input_137_beta_0_to_fp16, epsilon = var_3855_to_fp16, gamma = input_137_gamma_0_to_fp16, x = inputs_55_cast_fp16)[name = tensor<string, []>("input_137_cast_fp16")];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_139_strides_0 = const()[name = tensor<string, []>("input_139_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_139_dilations_0 = const()[name = tensor<string, []>("input_139_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_139_groups_0 = const()[name = tensor<string, []>("input_139_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_13_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(539377408)))];
            tensor<fp16, [5120]> blocks_13_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552484672)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_139_cast_fp16 = conv(bias = blocks_13_mlp_0_bias_to_fp16, dilations = input_139_dilations_0, groups = input_139_groups_0, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = input_139_strides_0, weight = blocks_13_mlp_0_weight_to_fp16, x = input_137_cast_fp16)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<string, []> input_141_mode_0 = const()[name = tensor<string, []>("input_141_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_141_cast_fp16 = gelu(mode = input_141_mode_0, x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<string, []> var_3881_pad_type_0 = const()[name = tensor<string, []>("op_3881_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3881_strides_0 = const()[name = tensor<string, []>("op_3881_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3881_pad_0 = const()[name = tensor<string, []>("op_3881_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3881_dilations_0 = const()[name = tensor<string, []>("op_3881_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3881_groups_0 = const()[name = tensor<string, []>("op_3881_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_13_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552494976)))];
            tensor<fp16, [1280]> blocks_13_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565602240)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3881_cast_fp16 = conv(bias = blocks_13_mlp_2_bias_to_fp16, dilations = var_3881_dilations_0, groups = var_3881_groups_0, pad = var_3881_pad_0, pad_type = var_3881_pad_type_0, strides = var_3881_strides_0, weight = blocks_13_mlp_2_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("op_3881_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_57_cast_fp16 = add(x = inputs_55_cast_fp16, y = var_3881_cast_fp16)[name = tensor<string, []>("inputs_57_cast_fp16")];
            tensor<int32, []> var_3890 = const()[name = tensor<string, []>("op_3890"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_143_axes_0 = const()[name = tensor<string, []>("input_143_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_143_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_143_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565604864)))];
            tensor<fp16, [1280]> input_143_beta_0_to_fp16 = const()[name = tensor<string, []>("input_143_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565607488)))];
            tensor<fp16, []> var_3906_to_fp16 = const()[name = tensor<string, []>("op_3906_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_143_cast_fp16 = layer_norm(axes = input_143_axes_0, beta = input_143_beta_0_to_fp16, epsilon = var_3906_to_fp16, gamma = input_143_gamma_0_to_fp16, x = inputs_57_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<string, []> q_29_pad_type_0 = const()[name = tensor<string, []>("q_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_29_strides_0 = const()[name = tensor<string, []>("q_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_29_pad_0 = const()[name = tensor<string, []>("q_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_29_dilations_0 = const()[name = tensor<string, []>("q_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_29_groups_0 = const()[name = tensor<string, []>("q_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_3941_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3941_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565610112)))];
            tensor<fp16, [1280]> var_3941_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3941_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568886976)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3941_cast_fp16 = conv(bias = var_3941_bias_0_to_fp16, dilations = q_29_dilations_0, groups = q_29_groups_0, pad = q_29_pad_0, pad_type = q_29_pad_type_0, strides = q_29_strides_0, weight = var_3941_weight_0_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("op_3941_cast_fp16")];
            tensor<string, []> k_29_pad_type_0 = const()[name = tensor<string, []>("k_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_29_strides_0 = const()[name = tensor<string, []>("k_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_29_pad_0 = const()[name = tensor<string, []>("k_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_29_dilations_0 = const()[name = tensor<string, []>("k_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_29_groups_0 = const()[name = tensor<string, []>("k_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_14_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568889600)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_29_cast_fp16 = conv(dilations = k_29_dilations_0, groups = k_29_groups_0, pad = k_29_pad_0, pad_type = k_29_pad_type_0, strides = k_29_strides_0, weight = blocks_14_attn_key_weight_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("k_29_cast_fp16")];
            tensor<string, []> var_3939_pad_type_0 = const()[name = tensor<string, []>("op_3939_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3939_strides_0 = const()[name = tensor<string, []>("op_3939_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3939_pad_0 = const()[name = tensor<string, []>("op_3939_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3939_dilations_0 = const()[name = tensor<string, []>("op_3939_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3939_groups_0 = const()[name = tensor<string, []>("op_3939_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_14_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572166464)))];
            tensor<fp16, [1280]> blocks_14_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(575443328)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_3939_cast_fp16 = conv(bias = blocks_14_attn_value_bias_to_fp16, dilations = var_3939_dilations_0, groups = var_3939_groups_0, pad = var_3939_pad_0, pad_type = var_3939_pad_type_0, strides = var_3939_strides_0, weight = blocks_14_attn_value_weight_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("op_3939_cast_fp16")];
            tensor<int32, [20]> tile_42 = const()[name = tensor<string, []>("tile_42"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3942_axis_0 = const()[name = tensor<string, []>("op_3942_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3942_cast_fp16_19 = split(axis = var_3942_axis_0, split_sizes = tile_42, x = var_3941_cast_fp16)[name = tensor<string, []>("op_3942_cast_fp16")];
            tensor<int32, [4]> var_3963_perm_0 = const()[name = tensor<string, []>("op_3963_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_43 = const()[name = tensor<string, []>("tile_43"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3964_axis_0 = const()[name = tensor<string, []>("op_3964_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_3963_cast_fp16 = transpose(perm = var_3963_perm_0, x = k_29_cast_fp16)[name = tensor<string, []>("transpose_18")];
            tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_3964_cast_fp16_19 = split(axis = var_3964_axis_0, split_sizes = tile_43, x = var_3963_cast_fp16)[name = tensor<string, []>("op_3964_cast_fp16")];
            tensor<int32, [20]> tile_44 = const()[name = tensor<string, []>("tile_44"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3985_axis_0 = const()[name = tensor<string, []>("op_3985_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_3985_cast_fp16_19 = split(axis = var_3985_axis_0, split_sizes = tile_44, x = var_3939_cast_fp16)[name = tensor<string, []>("op_3985_cast_fp16")];
            tensor<string, []> aw_561_equation_0 = const()[name = tensor<string, []>("aw_561_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_561_cast_fp16 = einsum(equation = aw_561_equation_0, values = (var_3964_cast_fp16_0, var_3942_cast_fp16_0))[name = tensor<string, []>("aw_561_cast_fp16")];
            tensor<string, []> aw_563_equation_0 = const()[name = tensor<string, []>("aw_563_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_563_cast_fp16 = einsum(equation = aw_563_equation_0, values = (var_3964_cast_fp16_1, var_3942_cast_fp16_1))[name = tensor<string, []>("aw_563_cast_fp16")];
            tensor<string, []> aw_565_equation_0 = const()[name = tensor<string, []>("aw_565_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_565_cast_fp16 = einsum(equation = aw_565_equation_0, values = (var_3964_cast_fp16_2, var_3942_cast_fp16_2))[name = tensor<string, []>("aw_565_cast_fp16")];
            tensor<string, []> aw_567_equation_0 = const()[name = tensor<string, []>("aw_567_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_567_cast_fp16 = einsum(equation = aw_567_equation_0, values = (var_3964_cast_fp16_3, var_3942_cast_fp16_3))[name = tensor<string, []>("aw_567_cast_fp16")];
            tensor<string, []> aw_569_equation_0 = const()[name = tensor<string, []>("aw_569_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_569_cast_fp16 = einsum(equation = aw_569_equation_0, values = (var_3964_cast_fp16_4, var_3942_cast_fp16_4))[name = tensor<string, []>("aw_569_cast_fp16")];
            tensor<string, []> aw_571_equation_0 = const()[name = tensor<string, []>("aw_571_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_571_cast_fp16 = einsum(equation = aw_571_equation_0, values = (var_3964_cast_fp16_5, var_3942_cast_fp16_5))[name = tensor<string, []>("aw_571_cast_fp16")];
            tensor<string, []> aw_573_equation_0 = const()[name = tensor<string, []>("aw_573_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_573_cast_fp16 = einsum(equation = aw_573_equation_0, values = (var_3964_cast_fp16_6, var_3942_cast_fp16_6))[name = tensor<string, []>("aw_573_cast_fp16")];
            tensor<string, []> aw_575_equation_0 = const()[name = tensor<string, []>("aw_575_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_575_cast_fp16 = einsum(equation = aw_575_equation_0, values = (var_3964_cast_fp16_7, var_3942_cast_fp16_7))[name = tensor<string, []>("aw_575_cast_fp16")];
            tensor<string, []> aw_577_equation_0 = const()[name = tensor<string, []>("aw_577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_577_cast_fp16 = einsum(equation = aw_577_equation_0, values = (var_3964_cast_fp16_8, var_3942_cast_fp16_8))[name = tensor<string, []>("aw_577_cast_fp16")];
            tensor<string, []> aw_579_equation_0 = const()[name = tensor<string, []>("aw_579_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_579_cast_fp16 = einsum(equation = aw_579_equation_0, values = (var_3964_cast_fp16_9, var_3942_cast_fp16_9))[name = tensor<string, []>("aw_579_cast_fp16")];
            tensor<string, []> aw_581_equation_0 = const()[name = tensor<string, []>("aw_581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_581_cast_fp16 = einsum(equation = aw_581_equation_0, values = (var_3964_cast_fp16_10, var_3942_cast_fp16_10))[name = tensor<string, []>("aw_581_cast_fp16")];
            tensor<string, []> aw_583_equation_0 = const()[name = tensor<string, []>("aw_583_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_583_cast_fp16 = einsum(equation = aw_583_equation_0, values = (var_3964_cast_fp16_11, var_3942_cast_fp16_11))[name = tensor<string, []>("aw_583_cast_fp16")];
            tensor<string, []> aw_585_equation_0 = const()[name = tensor<string, []>("aw_585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_585_cast_fp16 = einsum(equation = aw_585_equation_0, values = (var_3964_cast_fp16_12, var_3942_cast_fp16_12))[name = tensor<string, []>("aw_585_cast_fp16")];
            tensor<string, []> aw_587_equation_0 = const()[name = tensor<string, []>("aw_587_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_587_cast_fp16 = einsum(equation = aw_587_equation_0, values = (var_3964_cast_fp16_13, var_3942_cast_fp16_13))[name = tensor<string, []>("aw_587_cast_fp16")];
            tensor<string, []> aw_589_equation_0 = const()[name = tensor<string, []>("aw_589_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_589_cast_fp16 = einsum(equation = aw_589_equation_0, values = (var_3964_cast_fp16_14, var_3942_cast_fp16_14))[name = tensor<string, []>("aw_589_cast_fp16")];
            tensor<string, []> aw_591_equation_0 = const()[name = tensor<string, []>("aw_591_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_591_cast_fp16 = einsum(equation = aw_591_equation_0, values = (var_3964_cast_fp16_15, var_3942_cast_fp16_15))[name = tensor<string, []>("aw_591_cast_fp16")];
            tensor<string, []> aw_593_equation_0 = const()[name = tensor<string, []>("aw_593_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_593_cast_fp16 = einsum(equation = aw_593_equation_0, values = (var_3964_cast_fp16_16, var_3942_cast_fp16_16))[name = tensor<string, []>("aw_593_cast_fp16")];
            tensor<string, []> aw_595_equation_0 = const()[name = tensor<string, []>("aw_595_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_595_cast_fp16 = einsum(equation = aw_595_equation_0, values = (var_3964_cast_fp16_17, var_3942_cast_fp16_17))[name = tensor<string, []>("aw_595_cast_fp16")];
            tensor<string, []> aw_597_equation_0 = const()[name = tensor<string, []>("aw_597_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_597_cast_fp16 = einsum(equation = aw_597_equation_0, values = (var_3964_cast_fp16_18, var_3942_cast_fp16_18))[name = tensor<string, []>("aw_597_cast_fp16")];
            tensor<string, []> aw_599_equation_0 = const()[name = tensor<string, []>("aw_599_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_599_cast_fp16 = einsum(equation = aw_599_equation_0, values = (var_3964_cast_fp16_19, var_3942_cast_fp16_19))[name = tensor<string, []>("aw_599_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4046_cast_fp16 = softmax(axis = var_3890, x = aw_561_cast_fp16)[name = tensor<string, []>("op_4046_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4047_cast_fp16 = softmax(axis = var_3890, x = aw_563_cast_fp16)[name = tensor<string, []>("op_4047_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4048_cast_fp16 = softmax(axis = var_3890, x = aw_565_cast_fp16)[name = tensor<string, []>("op_4048_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4049_cast_fp16 = softmax(axis = var_3890, x = aw_567_cast_fp16)[name = tensor<string, []>("op_4049_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4050_cast_fp16 = softmax(axis = var_3890, x = aw_569_cast_fp16)[name = tensor<string, []>("op_4050_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4051_cast_fp16 = softmax(axis = var_3890, x = aw_571_cast_fp16)[name = tensor<string, []>("op_4051_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4052_cast_fp16 = softmax(axis = var_3890, x = aw_573_cast_fp16)[name = tensor<string, []>("op_4052_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4053_cast_fp16 = softmax(axis = var_3890, x = aw_575_cast_fp16)[name = tensor<string, []>("op_4053_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4054_cast_fp16 = softmax(axis = var_3890, x = aw_577_cast_fp16)[name = tensor<string, []>("op_4054_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4055_cast_fp16 = softmax(axis = var_3890, x = aw_579_cast_fp16)[name = tensor<string, []>("op_4055_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4056_cast_fp16 = softmax(axis = var_3890, x = aw_581_cast_fp16)[name = tensor<string, []>("op_4056_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4057_cast_fp16 = softmax(axis = var_3890, x = aw_583_cast_fp16)[name = tensor<string, []>("op_4057_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4058_cast_fp16 = softmax(axis = var_3890, x = aw_585_cast_fp16)[name = tensor<string, []>("op_4058_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4059_cast_fp16 = softmax(axis = var_3890, x = aw_587_cast_fp16)[name = tensor<string, []>("op_4059_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4060_cast_fp16 = softmax(axis = var_3890, x = aw_589_cast_fp16)[name = tensor<string, []>("op_4060_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4061_cast_fp16 = softmax(axis = var_3890, x = aw_591_cast_fp16)[name = tensor<string, []>("op_4061_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4062_cast_fp16 = softmax(axis = var_3890, x = aw_593_cast_fp16)[name = tensor<string, []>("op_4062_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4063_cast_fp16 = softmax(axis = var_3890, x = aw_595_cast_fp16)[name = tensor<string, []>("op_4063_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4064_cast_fp16 = softmax(axis = var_3890, x = aw_597_cast_fp16)[name = tensor<string, []>("op_4064_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4065_cast_fp16 = softmax(axis = var_3890, x = aw_599_cast_fp16)[name = tensor<string, []>("op_4065_cast_fp16")];
            tensor<string, []> var_4067_equation_0 = const()[name = tensor<string, []>("op_4067_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4067_cast_fp16 = einsum(equation = var_4067_equation_0, values = (var_3985_cast_fp16_0, var_4046_cast_fp16))[name = tensor<string, []>("op_4067_cast_fp16")];
            tensor<string, []> var_4069_equation_0 = const()[name = tensor<string, []>("op_4069_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4069_cast_fp16 = einsum(equation = var_4069_equation_0, values = (var_3985_cast_fp16_1, var_4047_cast_fp16))[name = tensor<string, []>("op_4069_cast_fp16")];
            tensor<string, []> var_4071_equation_0 = const()[name = tensor<string, []>("op_4071_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4071_cast_fp16 = einsum(equation = var_4071_equation_0, values = (var_3985_cast_fp16_2, var_4048_cast_fp16))[name = tensor<string, []>("op_4071_cast_fp16")];
            tensor<string, []> var_4073_equation_0 = const()[name = tensor<string, []>("op_4073_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4073_cast_fp16 = einsum(equation = var_4073_equation_0, values = (var_3985_cast_fp16_3, var_4049_cast_fp16))[name = tensor<string, []>("op_4073_cast_fp16")];
            tensor<string, []> var_4075_equation_0 = const()[name = tensor<string, []>("op_4075_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4075_cast_fp16 = einsum(equation = var_4075_equation_0, values = (var_3985_cast_fp16_4, var_4050_cast_fp16))[name = tensor<string, []>("op_4075_cast_fp16")];
            tensor<string, []> var_4077_equation_0 = const()[name = tensor<string, []>("op_4077_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4077_cast_fp16 = einsum(equation = var_4077_equation_0, values = (var_3985_cast_fp16_5, var_4051_cast_fp16))[name = tensor<string, []>("op_4077_cast_fp16")];
            tensor<string, []> var_4079_equation_0 = const()[name = tensor<string, []>("op_4079_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4079_cast_fp16 = einsum(equation = var_4079_equation_0, values = (var_3985_cast_fp16_6, var_4052_cast_fp16))[name = tensor<string, []>("op_4079_cast_fp16")];
            tensor<string, []> var_4081_equation_0 = const()[name = tensor<string, []>("op_4081_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4081_cast_fp16 = einsum(equation = var_4081_equation_0, values = (var_3985_cast_fp16_7, var_4053_cast_fp16))[name = tensor<string, []>("op_4081_cast_fp16")];
            tensor<string, []> var_4083_equation_0 = const()[name = tensor<string, []>("op_4083_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4083_cast_fp16 = einsum(equation = var_4083_equation_0, values = (var_3985_cast_fp16_8, var_4054_cast_fp16))[name = tensor<string, []>("op_4083_cast_fp16")];
            tensor<string, []> var_4085_equation_0 = const()[name = tensor<string, []>("op_4085_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4085_cast_fp16 = einsum(equation = var_4085_equation_0, values = (var_3985_cast_fp16_9, var_4055_cast_fp16))[name = tensor<string, []>("op_4085_cast_fp16")];
            tensor<string, []> var_4087_equation_0 = const()[name = tensor<string, []>("op_4087_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4087_cast_fp16 = einsum(equation = var_4087_equation_0, values = (var_3985_cast_fp16_10, var_4056_cast_fp16))[name = tensor<string, []>("op_4087_cast_fp16")];
            tensor<string, []> var_4089_equation_0 = const()[name = tensor<string, []>("op_4089_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4089_cast_fp16 = einsum(equation = var_4089_equation_0, values = (var_3985_cast_fp16_11, var_4057_cast_fp16))[name = tensor<string, []>("op_4089_cast_fp16")];
            tensor<string, []> var_4091_equation_0 = const()[name = tensor<string, []>("op_4091_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4091_cast_fp16 = einsum(equation = var_4091_equation_0, values = (var_3985_cast_fp16_12, var_4058_cast_fp16))[name = tensor<string, []>("op_4091_cast_fp16")];
            tensor<string, []> var_4093_equation_0 = const()[name = tensor<string, []>("op_4093_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4093_cast_fp16 = einsum(equation = var_4093_equation_0, values = (var_3985_cast_fp16_13, var_4059_cast_fp16))[name = tensor<string, []>("op_4093_cast_fp16")];
            tensor<string, []> var_4095_equation_0 = const()[name = tensor<string, []>("op_4095_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4095_cast_fp16 = einsum(equation = var_4095_equation_0, values = (var_3985_cast_fp16_14, var_4060_cast_fp16))[name = tensor<string, []>("op_4095_cast_fp16")];
            tensor<string, []> var_4097_equation_0 = const()[name = tensor<string, []>("op_4097_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4097_cast_fp16 = einsum(equation = var_4097_equation_0, values = (var_3985_cast_fp16_15, var_4061_cast_fp16))[name = tensor<string, []>("op_4097_cast_fp16")];
            tensor<string, []> var_4099_equation_0 = const()[name = tensor<string, []>("op_4099_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4099_cast_fp16 = einsum(equation = var_4099_equation_0, values = (var_3985_cast_fp16_16, var_4062_cast_fp16))[name = tensor<string, []>("op_4099_cast_fp16")];
            tensor<string, []> var_4101_equation_0 = const()[name = tensor<string, []>("op_4101_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4101_cast_fp16 = einsum(equation = var_4101_equation_0, values = (var_3985_cast_fp16_17, var_4063_cast_fp16))[name = tensor<string, []>("op_4101_cast_fp16")];
            tensor<string, []> var_4103_equation_0 = const()[name = tensor<string, []>("op_4103_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4103_cast_fp16 = einsum(equation = var_4103_equation_0, values = (var_3985_cast_fp16_18, var_4064_cast_fp16))[name = tensor<string, []>("op_4103_cast_fp16")];
            tensor<string, []> var_4105_equation_0 = const()[name = tensor<string, []>("op_4105_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4105_cast_fp16 = einsum(equation = var_4105_equation_0, values = (var_3985_cast_fp16_19, var_4065_cast_fp16))[name = tensor<string, []>("op_4105_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_145_cast_fp16 = concat(axis = var_3890, interleave = input_145_interleave_0, values = (var_4067_cast_fp16, var_4069_cast_fp16, var_4071_cast_fp16, var_4073_cast_fp16, var_4075_cast_fp16, var_4077_cast_fp16, var_4079_cast_fp16, var_4081_cast_fp16, var_4083_cast_fp16, var_4085_cast_fp16, var_4087_cast_fp16, var_4089_cast_fp16, var_4091_cast_fp16, var_4093_cast_fp16, var_4095_cast_fp16, var_4097_cast_fp16, var_4099_cast_fp16, var_4101_cast_fp16, var_4103_cast_fp16, var_4105_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<string, []> var_4114_pad_type_0 = const()[name = tensor<string, []>("op_4114_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4114_strides_0 = const()[name = tensor<string, []>("op_4114_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4114_pad_0 = const()[name = tensor<string, []>("op_4114_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4114_dilations_0 = const()[name = tensor<string, []>("op_4114_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4114_groups_0 = const()[name = tensor<string, []>("op_4114_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_14_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(575445952)))];
            tensor<fp16, [1280]> blocks_14_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578722816)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4114_cast_fp16 = conv(bias = blocks_14_attn_out_bias_to_fp16, dilations = var_4114_dilations_0, groups = var_4114_groups_0, pad = var_4114_pad_0, pad_type = var_4114_pad_type_0, strides = var_4114_strides_0, weight = blocks_14_attn_out_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("op_4114_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_59_cast_fp16 = add(x = inputs_57_cast_fp16, y = var_4114_cast_fp16)[name = tensor<string, []>("inputs_59_cast_fp16")];
            tensor<int32, [1]> input_147_axes_0 = const()[name = tensor<string, []>("input_147_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_147_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_147_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578725440)))];
            tensor<fp16, [1280]> input_147_beta_0_to_fp16 = const()[name = tensor<string, []>("input_147_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578728064)))];
            tensor<fp16, []> var_4124_to_fp16 = const()[name = tensor<string, []>("op_4124_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_147_cast_fp16 = layer_norm(axes = input_147_axes_0, beta = input_147_beta_0_to_fp16, epsilon = var_4124_to_fp16, gamma = input_147_gamma_0_to_fp16, x = inputs_59_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_149_strides_0 = const()[name = tensor<string, []>("input_149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_149_dilations_0 = const()[name = tensor<string, []>("input_149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_149_groups_0 = const()[name = tensor<string, []>("input_149_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_14_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578730688)))];
            tensor<fp16, [5120]> blocks_14_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(591837952)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_149_cast_fp16 = conv(bias = blocks_14_mlp_0_bias_to_fp16, dilations = input_149_dilations_0, groups = input_149_groups_0, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = input_149_strides_0, weight = blocks_14_mlp_0_weight_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<string, []> input_151_mode_0 = const()[name = tensor<string, []>("input_151_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_151_cast_fp16 = gelu(mode = input_151_mode_0, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<string, []> var_4150_pad_type_0 = const()[name = tensor<string, []>("op_4150_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4150_strides_0 = const()[name = tensor<string, []>("op_4150_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4150_pad_0 = const()[name = tensor<string, []>("op_4150_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4150_dilations_0 = const()[name = tensor<string, []>("op_4150_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4150_groups_0 = const()[name = tensor<string, []>("op_4150_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_14_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(591848256)))];
            tensor<fp16, [1280]> blocks_14_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(604955520)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4150_cast_fp16 = conv(bias = blocks_14_mlp_2_bias_to_fp16, dilations = var_4150_dilations_0, groups = var_4150_groups_0, pad = var_4150_pad_0, pad_type = var_4150_pad_type_0, strides = var_4150_strides_0, weight = blocks_14_mlp_2_weight_to_fp16, x = input_151_cast_fp16)[name = tensor<string, []>("op_4150_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_61_cast_fp16 = add(x = inputs_59_cast_fp16, y = var_4150_cast_fp16)[name = tensor<string, []>("inputs_61_cast_fp16")];
            tensor<int32, []> var_4159 = const()[name = tensor<string, []>("op_4159"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_153_axes_0 = const()[name = tensor<string, []>("input_153_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_153_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_153_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(604958144)))];
            tensor<fp16, [1280]> input_153_beta_0_to_fp16 = const()[name = tensor<string, []>("input_153_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(604960768)))];
            tensor<fp16, []> var_4175_to_fp16 = const()[name = tensor<string, []>("op_4175_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_153_cast_fp16 = layer_norm(axes = input_153_axes_0, beta = input_153_beta_0_to_fp16, epsilon = var_4175_to_fp16, gamma = input_153_gamma_0_to_fp16, x = inputs_61_cast_fp16)[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<string, []> q_31_pad_type_0 = const()[name = tensor<string, []>("q_31_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_31_strides_0 = const()[name = tensor<string, []>("q_31_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_31_pad_0 = const()[name = tensor<string, []>("q_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_31_dilations_0 = const()[name = tensor<string, []>("q_31_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_31_groups_0 = const()[name = tensor<string, []>("q_31_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_4210_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4210_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(604963392)))];
            tensor<fp16, [1280]> var_4210_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4210_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(608240256)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4210_cast_fp16 = conv(bias = var_4210_bias_0_to_fp16, dilations = q_31_dilations_0, groups = q_31_groups_0, pad = q_31_pad_0, pad_type = q_31_pad_type_0, strides = q_31_strides_0, weight = var_4210_weight_0_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("op_4210_cast_fp16")];
            tensor<string, []> k_31_pad_type_0 = const()[name = tensor<string, []>("k_31_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_31_strides_0 = const()[name = tensor<string, []>("k_31_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_31_pad_0 = const()[name = tensor<string, []>("k_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_31_dilations_0 = const()[name = tensor<string, []>("k_31_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_31_groups_0 = const()[name = tensor<string, []>("k_31_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_15_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(608242880)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_31_cast_fp16 = conv(dilations = k_31_dilations_0, groups = k_31_groups_0, pad = k_31_pad_0, pad_type = k_31_pad_type_0, strides = k_31_strides_0, weight = blocks_15_attn_key_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("k_31_cast_fp16")];
            tensor<string, []> var_4208_pad_type_0 = const()[name = tensor<string, []>("op_4208_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4208_strides_0 = const()[name = tensor<string, []>("op_4208_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4208_pad_0 = const()[name = tensor<string, []>("op_4208_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4208_dilations_0 = const()[name = tensor<string, []>("op_4208_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4208_groups_0 = const()[name = tensor<string, []>("op_4208_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_15_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(611519744)))];
            tensor<fp16, [1280]> blocks_15_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(614796608)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4208_cast_fp16 = conv(bias = blocks_15_attn_value_bias_to_fp16, dilations = var_4208_dilations_0, groups = var_4208_groups_0, pad = var_4208_pad_0, pad_type = var_4208_pad_type_0, strides = var_4208_strides_0, weight = blocks_15_attn_value_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("op_4208_cast_fp16")];
            tensor<int32, [20]> tile_45 = const()[name = tensor<string, []>("tile_45"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4211_axis_0 = const()[name = tensor<string, []>("op_4211_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4211_cast_fp16_19 = split(axis = var_4211_axis_0, split_sizes = tile_45, x = var_4210_cast_fp16)[name = tensor<string, []>("op_4211_cast_fp16")];
            tensor<int32, [4]> var_4232_perm_0 = const()[name = tensor<string, []>("op_4232_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_46 = const()[name = tensor<string, []>("tile_46"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4233_axis_0 = const()[name = tensor<string, []>("op_4233_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_4232_cast_fp16 = transpose(perm = var_4232_perm_0, x = k_31_cast_fp16)[name = tensor<string, []>("transpose_17")];
            tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_4233_cast_fp16_19 = split(axis = var_4233_axis_0, split_sizes = tile_46, x = var_4232_cast_fp16)[name = tensor<string, []>("op_4233_cast_fp16")];
            tensor<int32, [20]> tile_47 = const()[name = tensor<string, []>("tile_47"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4254_axis_0 = const()[name = tensor<string, []>("op_4254_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4254_cast_fp16_19 = split(axis = var_4254_axis_0, split_sizes = tile_47, x = var_4208_cast_fp16)[name = tensor<string, []>("op_4254_cast_fp16")];
            tensor<string, []> aw_601_equation_0 = const()[name = tensor<string, []>("aw_601_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_601_cast_fp16 = einsum(equation = aw_601_equation_0, values = (var_4233_cast_fp16_0, var_4211_cast_fp16_0))[name = tensor<string, []>("aw_601_cast_fp16")];
            tensor<string, []> aw_603_equation_0 = const()[name = tensor<string, []>("aw_603_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_603_cast_fp16 = einsum(equation = aw_603_equation_0, values = (var_4233_cast_fp16_1, var_4211_cast_fp16_1))[name = tensor<string, []>("aw_603_cast_fp16")];
            tensor<string, []> aw_605_equation_0 = const()[name = tensor<string, []>("aw_605_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_605_cast_fp16 = einsum(equation = aw_605_equation_0, values = (var_4233_cast_fp16_2, var_4211_cast_fp16_2))[name = tensor<string, []>("aw_605_cast_fp16")];
            tensor<string, []> aw_607_equation_0 = const()[name = tensor<string, []>("aw_607_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_607_cast_fp16 = einsum(equation = aw_607_equation_0, values = (var_4233_cast_fp16_3, var_4211_cast_fp16_3))[name = tensor<string, []>("aw_607_cast_fp16")];
            tensor<string, []> aw_609_equation_0 = const()[name = tensor<string, []>("aw_609_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_609_cast_fp16 = einsum(equation = aw_609_equation_0, values = (var_4233_cast_fp16_4, var_4211_cast_fp16_4))[name = tensor<string, []>("aw_609_cast_fp16")];
            tensor<string, []> aw_611_equation_0 = const()[name = tensor<string, []>("aw_611_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_611_cast_fp16 = einsum(equation = aw_611_equation_0, values = (var_4233_cast_fp16_5, var_4211_cast_fp16_5))[name = tensor<string, []>("aw_611_cast_fp16")];
            tensor<string, []> aw_613_equation_0 = const()[name = tensor<string, []>("aw_613_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_613_cast_fp16 = einsum(equation = aw_613_equation_0, values = (var_4233_cast_fp16_6, var_4211_cast_fp16_6))[name = tensor<string, []>("aw_613_cast_fp16")];
            tensor<string, []> aw_615_equation_0 = const()[name = tensor<string, []>("aw_615_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_615_cast_fp16 = einsum(equation = aw_615_equation_0, values = (var_4233_cast_fp16_7, var_4211_cast_fp16_7))[name = tensor<string, []>("aw_615_cast_fp16")];
            tensor<string, []> aw_617_equation_0 = const()[name = tensor<string, []>("aw_617_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_617_cast_fp16 = einsum(equation = aw_617_equation_0, values = (var_4233_cast_fp16_8, var_4211_cast_fp16_8))[name = tensor<string, []>("aw_617_cast_fp16")];
            tensor<string, []> aw_619_equation_0 = const()[name = tensor<string, []>("aw_619_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_619_cast_fp16 = einsum(equation = aw_619_equation_0, values = (var_4233_cast_fp16_9, var_4211_cast_fp16_9))[name = tensor<string, []>("aw_619_cast_fp16")];
            tensor<string, []> aw_621_equation_0 = const()[name = tensor<string, []>("aw_621_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_621_cast_fp16 = einsum(equation = aw_621_equation_0, values = (var_4233_cast_fp16_10, var_4211_cast_fp16_10))[name = tensor<string, []>("aw_621_cast_fp16")];
            tensor<string, []> aw_623_equation_0 = const()[name = tensor<string, []>("aw_623_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_623_cast_fp16 = einsum(equation = aw_623_equation_0, values = (var_4233_cast_fp16_11, var_4211_cast_fp16_11))[name = tensor<string, []>("aw_623_cast_fp16")];
            tensor<string, []> aw_625_equation_0 = const()[name = tensor<string, []>("aw_625_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_625_cast_fp16 = einsum(equation = aw_625_equation_0, values = (var_4233_cast_fp16_12, var_4211_cast_fp16_12))[name = tensor<string, []>("aw_625_cast_fp16")];
            tensor<string, []> aw_627_equation_0 = const()[name = tensor<string, []>("aw_627_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_627_cast_fp16 = einsum(equation = aw_627_equation_0, values = (var_4233_cast_fp16_13, var_4211_cast_fp16_13))[name = tensor<string, []>("aw_627_cast_fp16")];
            tensor<string, []> aw_629_equation_0 = const()[name = tensor<string, []>("aw_629_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_629_cast_fp16 = einsum(equation = aw_629_equation_0, values = (var_4233_cast_fp16_14, var_4211_cast_fp16_14))[name = tensor<string, []>("aw_629_cast_fp16")];
            tensor<string, []> aw_631_equation_0 = const()[name = tensor<string, []>("aw_631_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_631_cast_fp16 = einsum(equation = aw_631_equation_0, values = (var_4233_cast_fp16_15, var_4211_cast_fp16_15))[name = tensor<string, []>("aw_631_cast_fp16")];
            tensor<string, []> aw_633_equation_0 = const()[name = tensor<string, []>("aw_633_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_633_cast_fp16 = einsum(equation = aw_633_equation_0, values = (var_4233_cast_fp16_16, var_4211_cast_fp16_16))[name = tensor<string, []>("aw_633_cast_fp16")];
            tensor<string, []> aw_635_equation_0 = const()[name = tensor<string, []>("aw_635_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_635_cast_fp16 = einsum(equation = aw_635_equation_0, values = (var_4233_cast_fp16_17, var_4211_cast_fp16_17))[name = tensor<string, []>("aw_635_cast_fp16")];
            tensor<string, []> aw_637_equation_0 = const()[name = tensor<string, []>("aw_637_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_637_cast_fp16 = einsum(equation = aw_637_equation_0, values = (var_4233_cast_fp16_18, var_4211_cast_fp16_18))[name = tensor<string, []>("aw_637_cast_fp16")];
            tensor<string, []> aw_639_equation_0 = const()[name = tensor<string, []>("aw_639_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_639_cast_fp16 = einsum(equation = aw_639_equation_0, values = (var_4233_cast_fp16_19, var_4211_cast_fp16_19))[name = tensor<string, []>("aw_639_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4315_cast_fp16 = softmax(axis = var_4159, x = aw_601_cast_fp16)[name = tensor<string, []>("op_4315_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4316_cast_fp16 = softmax(axis = var_4159, x = aw_603_cast_fp16)[name = tensor<string, []>("op_4316_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4317_cast_fp16 = softmax(axis = var_4159, x = aw_605_cast_fp16)[name = tensor<string, []>("op_4317_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4318_cast_fp16 = softmax(axis = var_4159, x = aw_607_cast_fp16)[name = tensor<string, []>("op_4318_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4319_cast_fp16 = softmax(axis = var_4159, x = aw_609_cast_fp16)[name = tensor<string, []>("op_4319_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4320_cast_fp16 = softmax(axis = var_4159, x = aw_611_cast_fp16)[name = tensor<string, []>("op_4320_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4321_cast_fp16 = softmax(axis = var_4159, x = aw_613_cast_fp16)[name = tensor<string, []>("op_4321_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4322_cast_fp16 = softmax(axis = var_4159, x = aw_615_cast_fp16)[name = tensor<string, []>("op_4322_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4323_cast_fp16 = softmax(axis = var_4159, x = aw_617_cast_fp16)[name = tensor<string, []>("op_4323_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4324_cast_fp16 = softmax(axis = var_4159, x = aw_619_cast_fp16)[name = tensor<string, []>("op_4324_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4325_cast_fp16 = softmax(axis = var_4159, x = aw_621_cast_fp16)[name = tensor<string, []>("op_4325_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4326_cast_fp16 = softmax(axis = var_4159, x = aw_623_cast_fp16)[name = tensor<string, []>("op_4326_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4327_cast_fp16 = softmax(axis = var_4159, x = aw_625_cast_fp16)[name = tensor<string, []>("op_4327_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4328_cast_fp16 = softmax(axis = var_4159, x = aw_627_cast_fp16)[name = tensor<string, []>("op_4328_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4329_cast_fp16 = softmax(axis = var_4159, x = aw_629_cast_fp16)[name = tensor<string, []>("op_4329_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4330_cast_fp16 = softmax(axis = var_4159, x = aw_631_cast_fp16)[name = tensor<string, []>("op_4330_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4331_cast_fp16 = softmax(axis = var_4159, x = aw_633_cast_fp16)[name = tensor<string, []>("op_4331_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4332_cast_fp16 = softmax(axis = var_4159, x = aw_635_cast_fp16)[name = tensor<string, []>("op_4332_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4333_cast_fp16 = softmax(axis = var_4159, x = aw_637_cast_fp16)[name = tensor<string, []>("op_4333_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4334_cast_fp16 = softmax(axis = var_4159, x = aw_639_cast_fp16)[name = tensor<string, []>("op_4334_cast_fp16")];
            tensor<string, []> var_4336_equation_0 = const()[name = tensor<string, []>("op_4336_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4336_cast_fp16 = einsum(equation = var_4336_equation_0, values = (var_4254_cast_fp16_0, var_4315_cast_fp16))[name = tensor<string, []>("op_4336_cast_fp16")];
            tensor<string, []> var_4338_equation_0 = const()[name = tensor<string, []>("op_4338_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4338_cast_fp16 = einsum(equation = var_4338_equation_0, values = (var_4254_cast_fp16_1, var_4316_cast_fp16))[name = tensor<string, []>("op_4338_cast_fp16")];
            tensor<string, []> var_4340_equation_0 = const()[name = tensor<string, []>("op_4340_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4340_cast_fp16 = einsum(equation = var_4340_equation_0, values = (var_4254_cast_fp16_2, var_4317_cast_fp16))[name = tensor<string, []>("op_4340_cast_fp16")];
            tensor<string, []> var_4342_equation_0 = const()[name = tensor<string, []>("op_4342_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4342_cast_fp16 = einsum(equation = var_4342_equation_0, values = (var_4254_cast_fp16_3, var_4318_cast_fp16))[name = tensor<string, []>("op_4342_cast_fp16")];
            tensor<string, []> var_4344_equation_0 = const()[name = tensor<string, []>("op_4344_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4344_cast_fp16 = einsum(equation = var_4344_equation_0, values = (var_4254_cast_fp16_4, var_4319_cast_fp16))[name = tensor<string, []>("op_4344_cast_fp16")];
            tensor<string, []> var_4346_equation_0 = const()[name = tensor<string, []>("op_4346_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4346_cast_fp16 = einsum(equation = var_4346_equation_0, values = (var_4254_cast_fp16_5, var_4320_cast_fp16))[name = tensor<string, []>("op_4346_cast_fp16")];
            tensor<string, []> var_4348_equation_0 = const()[name = tensor<string, []>("op_4348_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4348_cast_fp16 = einsum(equation = var_4348_equation_0, values = (var_4254_cast_fp16_6, var_4321_cast_fp16))[name = tensor<string, []>("op_4348_cast_fp16")];
            tensor<string, []> var_4350_equation_0 = const()[name = tensor<string, []>("op_4350_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4350_cast_fp16 = einsum(equation = var_4350_equation_0, values = (var_4254_cast_fp16_7, var_4322_cast_fp16))[name = tensor<string, []>("op_4350_cast_fp16")];
            tensor<string, []> var_4352_equation_0 = const()[name = tensor<string, []>("op_4352_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4352_cast_fp16 = einsum(equation = var_4352_equation_0, values = (var_4254_cast_fp16_8, var_4323_cast_fp16))[name = tensor<string, []>("op_4352_cast_fp16")];
            tensor<string, []> var_4354_equation_0 = const()[name = tensor<string, []>("op_4354_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4354_cast_fp16 = einsum(equation = var_4354_equation_0, values = (var_4254_cast_fp16_9, var_4324_cast_fp16))[name = tensor<string, []>("op_4354_cast_fp16")];
            tensor<string, []> var_4356_equation_0 = const()[name = tensor<string, []>("op_4356_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4356_cast_fp16 = einsum(equation = var_4356_equation_0, values = (var_4254_cast_fp16_10, var_4325_cast_fp16))[name = tensor<string, []>("op_4356_cast_fp16")];
            tensor<string, []> var_4358_equation_0 = const()[name = tensor<string, []>("op_4358_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4358_cast_fp16 = einsum(equation = var_4358_equation_0, values = (var_4254_cast_fp16_11, var_4326_cast_fp16))[name = tensor<string, []>("op_4358_cast_fp16")];
            tensor<string, []> var_4360_equation_0 = const()[name = tensor<string, []>("op_4360_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4360_cast_fp16 = einsum(equation = var_4360_equation_0, values = (var_4254_cast_fp16_12, var_4327_cast_fp16))[name = tensor<string, []>("op_4360_cast_fp16")];
            tensor<string, []> var_4362_equation_0 = const()[name = tensor<string, []>("op_4362_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4362_cast_fp16 = einsum(equation = var_4362_equation_0, values = (var_4254_cast_fp16_13, var_4328_cast_fp16))[name = tensor<string, []>("op_4362_cast_fp16")];
            tensor<string, []> var_4364_equation_0 = const()[name = tensor<string, []>("op_4364_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4364_cast_fp16 = einsum(equation = var_4364_equation_0, values = (var_4254_cast_fp16_14, var_4329_cast_fp16))[name = tensor<string, []>("op_4364_cast_fp16")];
            tensor<string, []> var_4366_equation_0 = const()[name = tensor<string, []>("op_4366_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4366_cast_fp16 = einsum(equation = var_4366_equation_0, values = (var_4254_cast_fp16_15, var_4330_cast_fp16))[name = tensor<string, []>("op_4366_cast_fp16")];
            tensor<string, []> var_4368_equation_0 = const()[name = tensor<string, []>("op_4368_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4368_cast_fp16 = einsum(equation = var_4368_equation_0, values = (var_4254_cast_fp16_16, var_4331_cast_fp16))[name = tensor<string, []>("op_4368_cast_fp16")];
            tensor<string, []> var_4370_equation_0 = const()[name = tensor<string, []>("op_4370_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4370_cast_fp16 = einsum(equation = var_4370_equation_0, values = (var_4254_cast_fp16_17, var_4332_cast_fp16))[name = tensor<string, []>("op_4370_cast_fp16")];
            tensor<string, []> var_4372_equation_0 = const()[name = tensor<string, []>("op_4372_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4372_cast_fp16 = einsum(equation = var_4372_equation_0, values = (var_4254_cast_fp16_18, var_4333_cast_fp16))[name = tensor<string, []>("op_4372_cast_fp16")];
            tensor<string, []> var_4374_equation_0 = const()[name = tensor<string, []>("op_4374_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4374_cast_fp16 = einsum(equation = var_4374_equation_0, values = (var_4254_cast_fp16_19, var_4334_cast_fp16))[name = tensor<string, []>("op_4374_cast_fp16")];
            tensor<bool, []> input_155_interleave_0 = const()[name = tensor<string, []>("input_155_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_155_cast_fp16 = concat(axis = var_4159, interleave = input_155_interleave_0, values = (var_4336_cast_fp16, var_4338_cast_fp16, var_4340_cast_fp16, var_4342_cast_fp16, var_4344_cast_fp16, var_4346_cast_fp16, var_4348_cast_fp16, var_4350_cast_fp16, var_4352_cast_fp16, var_4354_cast_fp16, var_4356_cast_fp16, var_4358_cast_fp16, var_4360_cast_fp16, var_4362_cast_fp16, var_4364_cast_fp16, var_4366_cast_fp16, var_4368_cast_fp16, var_4370_cast_fp16, var_4372_cast_fp16, var_4374_cast_fp16))[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<string, []> var_4383_pad_type_0 = const()[name = tensor<string, []>("op_4383_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4383_strides_0 = const()[name = tensor<string, []>("op_4383_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4383_pad_0 = const()[name = tensor<string, []>("op_4383_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4383_dilations_0 = const()[name = tensor<string, []>("op_4383_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4383_groups_0 = const()[name = tensor<string, []>("op_4383_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_15_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(614799232)))];
            tensor<fp16, [1280]> blocks_15_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618076096)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4383_cast_fp16 = conv(bias = blocks_15_attn_out_bias_to_fp16, dilations = var_4383_dilations_0, groups = var_4383_groups_0, pad = var_4383_pad_0, pad_type = var_4383_pad_type_0, strides = var_4383_strides_0, weight = blocks_15_attn_out_weight_to_fp16, x = input_155_cast_fp16)[name = tensor<string, []>("op_4383_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_63_cast_fp16 = add(x = inputs_61_cast_fp16, y = var_4383_cast_fp16)[name = tensor<string, []>("inputs_63_cast_fp16")];
            tensor<int32, [1]> input_157_axes_0 = const()[name = tensor<string, []>("input_157_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_157_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_157_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618078720)))];
            tensor<fp16, [1280]> input_157_beta_0_to_fp16 = const()[name = tensor<string, []>("input_157_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618081344)))];
            tensor<fp16, []> var_4393_to_fp16 = const()[name = tensor<string, []>("op_4393_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_157_cast_fp16 = layer_norm(axes = input_157_axes_0, beta = input_157_beta_0_to_fp16, epsilon = var_4393_to_fp16, gamma = input_157_gamma_0_to_fp16, x = inputs_63_cast_fp16)[name = tensor<string, []>("input_157_cast_fp16")];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_159_strides_0 = const()[name = tensor<string, []>("input_159_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_159_dilations_0 = const()[name = tensor<string, []>("input_159_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_159_groups_0 = const()[name = tensor<string, []>("input_159_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_15_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618083968)))];
            tensor<fp16, [5120]> blocks_15_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631191232)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_159_cast_fp16 = conv(bias = blocks_15_mlp_0_bias_to_fp16, dilations = input_159_dilations_0, groups = input_159_groups_0, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = input_159_strides_0, weight = blocks_15_mlp_0_weight_to_fp16, x = input_157_cast_fp16)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<string, []> input_161_mode_0 = const()[name = tensor<string, []>("input_161_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_161_cast_fp16 = gelu(mode = input_161_mode_0, x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<string, []> var_4419_pad_type_0 = const()[name = tensor<string, []>("op_4419_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4419_strides_0 = const()[name = tensor<string, []>("op_4419_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4419_pad_0 = const()[name = tensor<string, []>("op_4419_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4419_dilations_0 = const()[name = tensor<string, []>("op_4419_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4419_groups_0 = const()[name = tensor<string, []>("op_4419_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_15_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631201536)))];
            tensor<fp16, [1280]> blocks_15_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(644308800)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4419_cast_fp16 = conv(bias = blocks_15_mlp_2_bias_to_fp16, dilations = var_4419_dilations_0, groups = var_4419_groups_0, pad = var_4419_pad_0, pad_type = var_4419_pad_type_0, strides = var_4419_strides_0, weight = blocks_15_mlp_2_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("op_4419_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_65_cast_fp16 = add(x = inputs_63_cast_fp16, y = var_4419_cast_fp16)[name = tensor<string, []>("inputs_65_cast_fp16")];
            tensor<int32, []> var_4428 = const()[name = tensor<string, []>("op_4428"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_163_axes_0 = const()[name = tensor<string, []>("input_163_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_163_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_163_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(644311424)))];
            tensor<fp16, [1280]> input_163_beta_0_to_fp16 = const()[name = tensor<string, []>("input_163_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(644314048)))];
            tensor<fp16, []> var_4444_to_fp16 = const()[name = tensor<string, []>("op_4444_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_163_cast_fp16 = layer_norm(axes = input_163_axes_0, beta = input_163_beta_0_to_fp16, epsilon = var_4444_to_fp16, gamma = input_163_gamma_0_to_fp16, x = inputs_65_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<string, []> q_33_pad_type_0 = const()[name = tensor<string, []>("q_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_33_strides_0 = const()[name = tensor<string, []>("q_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_33_pad_0 = const()[name = tensor<string, []>("q_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_33_dilations_0 = const()[name = tensor<string, []>("q_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_33_groups_0 = const()[name = tensor<string, []>("q_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_4479_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4479_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(644316672)))];
            tensor<fp16, [1280]> var_4479_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4479_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(647593536)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4479_cast_fp16 = conv(bias = var_4479_bias_0_to_fp16, dilations = q_33_dilations_0, groups = q_33_groups_0, pad = q_33_pad_0, pad_type = q_33_pad_type_0, strides = q_33_strides_0, weight = var_4479_weight_0_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("op_4479_cast_fp16")];
            tensor<string, []> k_33_pad_type_0 = const()[name = tensor<string, []>("k_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_33_strides_0 = const()[name = tensor<string, []>("k_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_33_pad_0 = const()[name = tensor<string, []>("k_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_33_dilations_0 = const()[name = tensor<string, []>("k_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_33_groups_0 = const()[name = tensor<string, []>("k_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_16_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(647596160)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_33_cast_fp16 = conv(dilations = k_33_dilations_0, groups = k_33_groups_0, pad = k_33_pad_0, pad_type = k_33_pad_type_0, strides = k_33_strides_0, weight = blocks_16_attn_key_weight_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("k_33_cast_fp16")];
            tensor<string, []> var_4477_pad_type_0 = const()[name = tensor<string, []>("op_4477_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4477_strides_0 = const()[name = tensor<string, []>("op_4477_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4477_pad_0 = const()[name = tensor<string, []>("op_4477_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4477_dilations_0 = const()[name = tensor<string, []>("op_4477_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4477_groups_0 = const()[name = tensor<string, []>("op_4477_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_16_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(650873024)))];
            tensor<fp16, [1280]> blocks_16_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(654149888)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4477_cast_fp16 = conv(bias = blocks_16_attn_value_bias_to_fp16, dilations = var_4477_dilations_0, groups = var_4477_groups_0, pad = var_4477_pad_0, pad_type = var_4477_pad_type_0, strides = var_4477_strides_0, weight = blocks_16_attn_value_weight_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("op_4477_cast_fp16")];
            tensor<int32, [20]> tile_48 = const()[name = tensor<string, []>("tile_48"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4480_axis_0 = const()[name = tensor<string, []>("op_4480_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4480_cast_fp16_19 = split(axis = var_4480_axis_0, split_sizes = tile_48, x = var_4479_cast_fp16)[name = tensor<string, []>("op_4480_cast_fp16")];
            tensor<int32, [4]> var_4501_perm_0 = const()[name = tensor<string, []>("op_4501_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_49 = const()[name = tensor<string, []>("tile_49"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4502_axis_0 = const()[name = tensor<string, []>("op_4502_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_4501_cast_fp16 = transpose(perm = var_4501_perm_0, x = k_33_cast_fp16)[name = tensor<string, []>("transpose_16")];
            tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_4502_cast_fp16_19 = split(axis = var_4502_axis_0, split_sizes = tile_49, x = var_4501_cast_fp16)[name = tensor<string, []>("op_4502_cast_fp16")];
            tensor<int32, [20]> tile_50 = const()[name = tensor<string, []>("tile_50"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4523_axis_0 = const()[name = tensor<string, []>("op_4523_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4523_cast_fp16_19 = split(axis = var_4523_axis_0, split_sizes = tile_50, x = var_4477_cast_fp16)[name = tensor<string, []>("op_4523_cast_fp16")];
            tensor<string, []> aw_641_equation_0 = const()[name = tensor<string, []>("aw_641_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_641_cast_fp16 = einsum(equation = aw_641_equation_0, values = (var_4502_cast_fp16_0, var_4480_cast_fp16_0))[name = tensor<string, []>("aw_641_cast_fp16")];
            tensor<string, []> aw_643_equation_0 = const()[name = tensor<string, []>("aw_643_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_643_cast_fp16 = einsum(equation = aw_643_equation_0, values = (var_4502_cast_fp16_1, var_4480_cast_fp16_1))[name = tensor<string, []>("aw_643_cast_fp16")];
            tensor<string, []> aw_645_equation_0 = const()[name = tensor<string, []>("aw_645_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_645_cast_fp16 = einsum(equation = aw_645_equation_0, values = (var_4502_cast_fp16_2, var_4480_cast_fp16_2))[name = tensor<string, []>("aw_645_cast_fp16")];
            tensor<string, []> aw_647_equation_0 = const()[name = tensor<string, []>("aw_647_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_647_cast_fp16 = einsum(equation = aw_647_equation_0, values = (var_4502_cast_fp16_3, var_4480_cast_fp16_3))[name = tensor<string, []>("aw_647_cast_fp16")];
            tensor<string, []> aw_649_equation_0 = const()[name = tensor<string, []>("aw_649_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_649_cast_fp16 = einsum(equation = aw_649_equation_0, values = (var_4502_cast_fp16_4, var_4480_cast_fp16_4))[name = tensor<string, []>("aw_649_cast_fp16")];
            tensor<string, []> aw_651_equation_0 = const()[name = tensor<string, []>("aw_651_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_651_cast_fp16 = einsum(equation = aw_651_equation_0, values = (var_4502_cast_fp16_5, var_4480_cast_fp16_5))[name = tensor<string, []>("aw_651_cast_fp16")];
            tensor<string, []> aw_653_equation_0 = const()[name = tensor<string, []>("aw_653_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_653_cast_fp16 = einsum(equation = aw_653_equation_0, values = (var_4502_cast_fp16_6, var_4480_cast_fp16_6))[name = tensor<string, []>("aw_653_cast_fp16")];
            tensor<string, []> aw_655_equation_0 = const()[name = tensor<string, []>("aw_655_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_655_cast_fp16 = einsum(equation = aw_655_equation_0, values = (var_4502_cast_fp16_7, var_4480_cast_fp16_7))[name = tensor<string, []>("aw_655_cast_fp16")];
            tensor<string, []> aw_657_equation_0 = const()[name = tensor<string, []>("aw_657_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_657_cast_fp16 = einsum(equation = aw_657_equation_0, values = (var_4502_cast_fp16_8, var_4480_cast_fp16_8))[name = tensor<string, []>("aw_657_cast_fp16")];
            tensor<string, []> aw_659_equation_0 = const()[name = tensor<string, []>("aw_659_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_659_cast_fp16 = einsum(equation = aw_659_equation_0, values = (var_4502_cast_fp16_9, var_4480_cast_fp16_9))[name = tensor<string, []>("aw_659_cast_fp16")];
            tensor<string, []> aw_661_equation_0 = const()[name = tensor<string, []>("aw_661_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_661_cast_fp16 = einsum(equation = aw_661_equation_0, values = (var_4502_cast_fp16_10, var_4480_cast_fp16_10))[name = tensor<string, []>("aw_661_cast_fp16")];
            tensor<string, []> aw_663_equation_0 = const()[name = tensor<string, []>("aw_663_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_663_cast_fp16 = einsum(equation = aw_663_equation_0, values = (var_4502_cast_fp16_11, var_4480_cast_fp16_11))[name = tensor<string, []>("aw_663_cast_fp16")];
            tensor<string, []> aw_665_equation_0 = const()[name = tensor<string, []>("aw_665_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_665_cast_fp16 = einsum(equation = aw_665_equation_0, values = (var_4502_cast_fp16_12, var_4480_cast_fp16_12))[name = tensor<string, []>("aw_665_cast_fp16")];
            tensor<string, []> aw_667_equation_0 = const()[name = tensor<string, []>("aw_667_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_667_cast_fp16 = einsum(equation = aw_667_equation_0, values = (var_4502_cast_fp16_13, var_4480_cast_fp16_13))[name = tensor<string, []>("aw_667_cast_fp16")];
            tensor<string, []> aw_669_equation_0 = const()[name = tensor<string, []>("aw_669_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_669_cast_fp16 = einsum(equation = aw_669_equation_0, values = (var_4502_cast_fp16_14, var_4480_cast_fp16_14))[name = tensor<string, []>("aw_669_cast_fp16")];
            tensor<string, []> aw_671_equation_0 = const()[name = tensor<string, []>("aw_671_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_671_cast_fp16 = einsum(equation = aw_671_equation_0, values = (var_4502_cast_fp16_15, var_4480_cast_fp16_15))[name = tensor<string, []>("aw_671_cast_fp16")];
            tensor<string, []> aw_673_equation_0 = const()[name = tensor<string, []>("aw_673_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_673_cast_fp16 = einsum(equation = aw_673_equation_0, values = (var_4502_cast_fp16_16, var_4480_cast_fp16_16))[name = tensor<string, []>("aw_673_cast_fp16")];
            tensor<string, []> aw_675_equation_0 = const()[name = tensor<string, []>("aw_675_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_675_cast_fp16 = einsum(equation = aw_675_equation_0, values = (var_4502_cast_fp16_17, var_4480_cast_fp16_17))[name = tensor<string, []>("aw_675_cast_fp16")];
            tensor<string, []> aw_677_equation_0 = const()[name = tensor<string, []>("aw_677_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_677_cast_fp16 = einsum(equation = aw_677_equation_0, values = (var_4502_cast_fp16_18, var_4480_cast_fp16_18))[name = tensor<string, []>("aw_677_cast_fp16")];
            tensor<string, []> aw_679_equation_0 = const()[name = tensor<string, []>("aw_679_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_679_cast_fp16 = einsum(equation = aw_679_equation_0, values = (var_4502_cast_fp16_19, var_4480_cast_fp16_19))[name = tensor<string, []>("aw_679_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4584_cast_fp16 = softmax(axis = var_4428, x = aw_641_cast_fp16)[name = tensor<string, []>("op_4584_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4585_cast_fp16 = softmax(axis = var_4428, x = aw_643_cast_fp16)[name = tensor<string, []>("op_4585_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4586_cast_fp16 = softmax(axis = var_4428, x = aw_645_cast_fp16)[name = tensor<string, []>("op_4586_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4587_cast_fp16 = softmax(axis = var_4428, x = aw_647_cast_fp16)[name = tensor<string, []>("op_4587_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4588_cast_fp16 = softmax(axis = var_4428, x = aw_649_cast_fp16)[name = tensor<string, []>("op_4588_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4589_cast_fp16 = softmax(axis = var_4428, x = aw_651_cast_fp16)[name = tensor<string, []>("op_4589_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4590_cast_fp16 = softmax(axis = var_4428, x = aw_653_cast_fp16)[name = tensor<string, []>("op_4590_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4591_cast_fp16 = softmax(axis = var_4428, x = aw_655_cast_fp16)[name = tensor<string, []>("op_4591_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4592_cast_fp16 = softmax(axis = var_4428, x = aw_657_cast_fp16)[name = tensor<string, []>("op_4592_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4593_cast_fp16 = softmax(axis = var_4428, x = aw_659_cast_fp16)[name = tensor<string, []>("op_4593_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4594_cast_fp16 = softmax(axis = var_4428, x = aw_661_cast_fp16)[name = tensor<string, []>("op_4594_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4595_cast_fp16 = softmax(axis = var_4428, x = aw_663_cast_fp16)[name = tensor<string, []>("op_4595_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4596_cast_fp16 = softmax(axis = var_4428, x = aw_665_cast_fp16)[name = tensor<string, []>("op_4596_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4597_cast_fp16 = softmax(axis = var_4428, x = aw_667_cast_fp16)[name = tensor<string, []>("op_4597_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4598_cast_fp16 = softmax(axis = var_4428, x = aw_669_cast_fp16)[name = tensor<string, []>("op_4598_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4599_cast_fp16 = softmax(axis = var_4428, x = aw_671_cast_fp16)[name = tensor<string, []>("op_4599_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4600_cast_fp16 = softmax(axis = var_4428, x = aw_673_cast_fp16)[name = tensor<string, []>("op_4600_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4601_cast_fp16 = softmax(axis = var_4428, x = aw_675_cast_fp16)[name = tensor<string, []>("op_4601_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4602_cast_fp16 = softmax(axis = var_4428, x = aw_677_cast_fp16)[name = tensor<string, []>("op_4602_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4603_cast_fp16 = softmax(axis = var_4428, x = aw_679_cast_fp16)[name = tensor<string, []>("op_4603_cast_fp16")];
            tensor<string, []> var_4605_equation_0 = const()[name = tensor<string, []>("op_4605_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4605_cast_fp16 = einsum(equation = var_4605_equation_0, values = (var_4523_cast_fp16_0, var_4584_cast_fp16))[name = tensor<string, []>("op_4605_cast_fp16")];
            tensor<string, []> var_4607_equation_0 = const()[name = tensor<string, []>("op_4607_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4607_cast_fp16 = einsum(equation = var_4607_equation_0, values = (var_4523_cast_fp16_1, var_4585_cast_fp16))[name = tensor<string, []>("op_4607_cast_fp16")];
            tensor<string, []> var_4609_equation_0 = const()[name = tensor<string, []>("op_4609_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4609_cast_fp16 = einsum(equation = var_4609_equation_0, values = (var_4523_cast_fp16_2, var_4586_cast_fp16))[name = tensor<string, []>("op_4609_cast_fp16")];
            tensor<string, []> var_4611_equation_0 = const()[name = tensor<string, []>("op_4611_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4611_cast_fp16 = einsum(equation = var_4611_equation_0, values = (var_4523_cast_fp16_3, var_4587_cast_fp16))[name = tensor<string, []>("op_4611_cast_fp16")];
            tensor<string, []> var_4613_equation_0 = const()[name = tensor<string, []>("op_4613_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4613_cast_fp16 = einsum(equation = var_4613_equation_0, values = (var_4523_cast_fp16_4, var_4588_cast_fp16))[name = tensor<string, []>("op_4613_cast_fp16")];
            tensor<string, []> var_4615_equation_0 = const()[name = tensor<string, []>("op_4615_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4615_cast_fp16 = einsum(equation = var_4615_equation_0, values = (var_4523_cast_fp16_5, var_4589_cast_fp16))[name = tensor<string, []>("op_4615_cast_fp16")];
            tensor<string, []> var_4617_equation_0 = const()[name = tensor<string, []>("op_4617_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4617_cast_fp16 = einsum(equation = var_4617_equation_0, values = (var_4523_cast_fp16_6, var_4590_cast_fp16))[name = tensor<string, []>("op_4617_cast_fp16")];
            tensor<string, []> var_4619_equation_0 = const()[name = tensor<string, []>("op_4619_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4619_cast_fp16 = einsum(equation = var_4619_equation_0, values = (var_4523_cast_fp16_7, var_4591_cast_fp16))[name = tensor<string, []>("op_4619_cast_fp16")];
            tensor<string, []> var_4621_equation_0 = const()[name = tensor<string, []>("op_4621_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4621_cast_fp16 = einsum(equation = var_4621_equation_0, values = (var_4523_cast_fp16_8, var_4592_cast_fp16))[name = tensor<string, []>("op_4621_cast_fp16")];
            tensor<string, []> var_4623_equation_0 = const()[name = tensor<string, []>("op_4623_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4623_cast_fp16 = einsum(equation = var_4623_equation_0, values = (var_4523_cast_fp16_9, var_4593_cast_fp16))[name = tensor<string, []>("op_4623_cast_fp16")];
            tensor<string, []> var_4625_equation_0 = const()[name = tensor<string, []>("op_4625_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4625_cast_fp16 = einsum(equation = var_4625_equation_0, values = (var_4523_cast_fp16_10, var_4594_cast_fp16))[name = tensor<string, []>("op_4625_cast_fp16")];
            tensor<string, []> var_4627_equation_0 = const()[name = tensor<string, []>("op_4627_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4627_cast_fp16 = einsum(equation = var_4627_equation_0, values = (var_4523_cast_fp16_11, var_4595_cast_fp16))[name = tensor<string, []>("op_4627_cast_fp16")];
            tensor<string, []> var_4629_equation_0 = const()[name = tensor<string, []>("op_4629_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4629_cast_fp16 = einsum(equation = var_4629_equation_0, values = (var_4523_cast_fp16_12, var_4596_cast_fp16))[name = tensor<string, []>("op_4629_cast_fp16")];
            tensor<string, []> var_4631_equation_0 = const()[name = tensor<string, []>("op_4631_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4631_cast_fp16 = einsum(equation = var_4631_equation_0, values = (var_4523_cast_fp16_13, var_4597_cast_fp16))[name = tensor<string, []>("op_4631_cast_fp16")];
            tensor<string, []> var_4633_equation_0 = const()[name = tensor<string, []>("op_4633_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4633_cast_fp16 = einsum(equation = var_4633_equation_0, values = (var_4523_cast_fp16_14, var_4598_cast_fp16))[name = tensor<string, []>("op_4633_cast_fp16")];
            tensor<string, []> var_4635_equation_0 = const()[name = tensor<string, []>("op_4635_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4635_cast_fp16 = einsum(equation = var_4635_equation_0, values = (var_4523_cast_fp16_15, var_4599_cast_fp16))[name = tensor<string, []>("op_4635_cast_fp16")];
            tensor<string, []> var_4637_equation_0 = const()[name = tensor<string, []>("op_4637_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4637_cast_fp16 = einsum(equation = var_4637_equation_0, values = (var_4523_cast_fp16_16, var_4600_cast_fp16))[name = tensor<string, []>("op_4637_cast_fp16")];
            tensor<string, []> var_4639_equation_0 = const()[name = tensor<string, []>("op_4639_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4639_cast_fp16 = einsum(equation = var_4639_equation_0, values = (var_4523_cast_fp16_17, var_4601_cast_fp16))[name = tensor<string, []>("op_4639_cast_fp16")];
            tensor<string, []> var_4641_equation_0 = const()[name = tensor<string, []>("op_4641_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4641_cast_fp16 = einsum(equation = var_4641_equation_0, values = (var_4523_cast_fp16_18, var_4602_cast_fp16))[name = tensor<string, []>("op_4641_cast_fp16")];
            tensor<string, []> var_4643_equation_0 = const()[name = tensor<string, []>("op_4643_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4643_cast_fp16 = einsum(equation = var_4643_equation_0, values = (var_4523_cast_fp16_19, var_4603_cast_fp16))[name = tensor<string, []>("op_4643_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_165_cast_fp16 = concat(axis = var_4428, interleave = input_165_interleave_0, values = (var_4605_cast_fp16, var_4607_cast_fp16, var_4609_cast_fp16, var_4611_cast_fp16, var_4613_cast_fp16, var_4615_cast_fp16, var_4617_cast_fp16, var_4619_cast_fp16, var_4621_cast_fp16, var_4623_cast_fp16, var_4625_cast_fp16, var_4627_cast_fp16, var_4629_cast_fp16, var_4631_cast_fp16, var_4633_cast_fp16, var_4635_cast_fp16, var_4637_cast_fp16, var_4639_cast_fp16, var_4641_cast_fp16, var_4643_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<string, []> var_4652_pad_type_0 = const()[name = tensor<string, []>("op_4652_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4652_strides_0 = const()[name = tensor<string, []>("op_4652_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4652_pad_0 = const()[name = tensor<string, []>("op_4652_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4652_dilations_0 = const()[name = tensor<string, []>("op_4652_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4652_groups_0 = const()[name = tensor<string, []>("op_4652_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_16_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(654152512)))];
            tensor<fp16, [1280]> blocks_16_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(657429376)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4652_cast_fp16 = conv(bias = blocks_16_attn_out_bias_to_fp16, dilations = var_4652_dilations_0, groups = var_4652_groups_0, pad = var_4652_pad_0, pad_type = var_4652_pad_type_0, strides = var_4652_strides_0, weight = blocks_16_attn_out_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("op_4652_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_67_cast_fp16 = add(x = inputs_65_cast_fp16, y = var_4652_cast_fp16)[name = tensor<string, []>("inputs_67_cast_fp16")];
            tensor<int32, [1]> input_167_axes_0 = const()[name = tensor<string, []>("input_167_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_167_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_167_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(657432000)))];
            tensor<fp16, [1280]> input_167_beta_0_to_fp16 = const()[name = tensor<string, []>("input_167_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(657434624)))];
            tensor<fp16, []> var_4662_to_fp16 = const()[name = tensor<string, []>("op_4662_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_167_cast_fp16 = layer_norm(axes = input_167_axes_0, beta = input_167_beta_0_to_fp16, epsilon = var_4662_to_fp16, gamma = input_167_gamma_0_to_fp16, x = inputs_67_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<string, []> input_169_pad_type_0 = const()[name = tensor<string, []>("input_169_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_169_strides_0 = const()[name = tensor<string, []>("input_169_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_169_pad_0 = const()[name = tensor<string, []>("input_169_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_169_dilations_0 = const()[name = tensor<string, []>("input_169_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_169_groups_0 = const()[name = tensor<string, []>("input_169_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_16_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(657437248)))];
            tensor<fp16, [5120]> blocks_16_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(670544512)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_169_cast_fp16 = conv(bias = blocks_16_mlp_0_bias_to_fp16, dilations = input_169_dilations_0, groups = input_169_groups_0, pad = input_169_pad_0, pad_type = input_169_pad_type_0, strides = input_169_strides_0, weight = blocks_16_mlp_0_weight_to_fp16, x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<string, []> input_171_mode_0 = const()[name = tensor<string, []>("input_171_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_171_cast_fp16 = gelu(mode = input_171_mode_0, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<string, []> var_4688_pad_type_0 = const()[name = tensor<string, []>("op_4688_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4688_strides_0 = const()[name = tensor<string, []>("op_4688_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4688_pad_0 = const()[name = tensor<string, []>("op_4688_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4688_dilations_0 = const()[name = tensor<string, []>("op_4688_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4688_groups_0 = const()[name = tensor<string, []>("op_4688_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_16_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(670554816)))];
            tensor<fp16, [1280]> blocks_16_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(683662080)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4688_cast_fp16 = conv(bias = blocks_16_mlp_2_bias_to_fp16, dilations = var_4688_dilations_0, groups = var_4688_groups_0, pad = var_4688_pad_0, pad_type = var_4688_pad_type_0, strides = var_4688_strides_0, weight = blocks_16_mlp_2_weight_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("op_4688_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_69_cast_fp16 = add(x = inputs_67_cast_fp16, y = var_4688_cast_fp16)[name = tensor<string, []>("inputs_69_cast_fp16")];
            tensor<int32, []> var_4697 = const()[name = tensor<string, []>("op_4697"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_173_axes_0 = const()[name = tensor<string, []>("input_173_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_173_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_173_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(683664704)))];
            tensor<fp16, [1280]> input_173_beta_0_to_fp16 = const()[name = tensor<string, []>("input_173_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(683667328)))];
            tensor<fp16, []> var_4713_to_fp16 = const()[name = tensor<string, []>("op_4713_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_173_cast_fp16 = layer_norm(axes = input_173_axes_0, beta = input_173_beta_0_to_fp16, epsilon = var_4713_to_fp16, gamma = input_173_gamma_0_to_fp16, x = inputs_69_cast_fp16)[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<string, []> q_35_pad_type_0 = const()[name = tensor<string, []>("q_35_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_35_strides_0 = const()[name = tensor<string, []>("q_35_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_35_pad_0 = const()[name = tensor<string, []>("q_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_35_dilations_0 = const()[name = tensor<string, []>("q_35_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_35_groups_0 = const()[name = tensor<string, []>("q_35_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_4748_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4748_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(683669952)))];
            tensor<fp16, [1280]> var_4748_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4748_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(686946816)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4748_cast_fp16 = conv(bias = var_4748_bias_0_to_fp16, dilations = q_35_dilations_0, groups = q_35_groups_0, pad = q_35_pad_0, pad_type = q_35_pad_type_0, strides = q_35_strides_0, weight = var_4748_weight_0_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("op_4748_cast_fp16")];
            tensor<string, []> k_35_pad_type_0 = const()[name = tensor<string, []>("k_35_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_35_strides_0 = const()[name = tensor<string, []>("k_35_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_35_pad_0 = const()[name = tensor<string, []>("k_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_35_dilations_0 = const()[name = tensor<string, []>("k_35_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_35_groups_0 = const()[name = tensor<string, []>("k_35_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_17_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(686949440)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_35_cast_fp16 = conv(dilations = k_35_dilations_0, groups = k_35_groups_0, pad = k_35_pad_0, pad_type = k_35_pad_type_0, strides = k_35_strides_0, weight = blocks_17_attn_key_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("k_35_cast_fp16")];
            tensor<string, []> var_4746_pad_type_0 = const()[name = tensor<string, []>("op_4746_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4746_strides_0 = const()[name = tensor<string, []>("op_4746_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4746_pad_0 = const()[name = tensor<string, []>("op_4746_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4746_dilations_0 = const()[name = tensor<string, []>("op_4746_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4746_groups_0 = const()[name = tensor<string, []>("op_4746_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_17_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(690226304)))];
            tensor<fp16, [1280]> blocks_17_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(693503168)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4746_cast_fp16 = conv(bias = blocks_17_attn_value_bias_to_fp16, dilations = var_4746_dilations_0, groups = var_4746_groups_0, pad = var_4746_pad_0, pad_type = var_4746_pad_type_0, strides = var_4746_strides_0, weight = blocks_17_attn_value_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("op_4746_cast_fp16")];
            tensor<int32, [20]> tile_51 = const()[name = tensor<string, []>("tile_51"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4749_axis_0 = const()[name = tensor<string, []>("op_4749_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4749_cast_fp16_19 = split(axis = var_4749_axis_0, split_sizes = tile_51, x = var_4748_cast_fp16)[name = tensor<string, []>("op_4749_cast_fp16")];
            tensor<int32, [4]> var_4770_perm_0 = const()[name = tensor<string, []>("op_4770_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_52 = const()[name = tensor<string, []>("tile_52"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4771_axis_0 = const()[name = tensor<string, []>("op_4771_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_4770_cast_fp16 = transpose(perm = var_4770_perm_0, x = k_35_cast_fp16)[name = tensor<string, []>("transpose_15")];
            tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_4771_cast_fp16_19 = split(axis = var_4771_axis_0, split_sizes = tile_52, x = var_4770_cast_fp16)[name = tensor<string, []>("op_4771_cast_fp16")];
            tensor<int32, [20]> tile_53 = const()[name = tensor<string, []>("tile_53"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4792_axis_0 = const()[name = tensor<string, []>("op_4792_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16_19 = split(axis = var_4792_axis_0, split_sizes = tile_53, x = var_4746_cast_fp16)[name = tensor<string, []>("op_4792_cast_fp16")];
            tensor<string, []> aw_681_equation_0 = const()[name = tensor<string, []>("aw_681_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_681_cast_fp16 = einsum(equation = aw_681_equation_0, values = (var_4771_cast_fp16_0, var_4749_cast_fp16_0))[name = tensor<string, []>("aw_681_cast_fp16")];
            tensor<string, []> aw_683_equation_0 = const()[name = tensor<string, []>("aw_683_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_683_cast_fp16 = einsum(equation = aw_683_equation_0, values = (var_4771_cast_fp16_1, var_4749_cast_fp16_1))[name = tensor<string, []>("aw_683_cast_fp16")];
            tensor<string, []> aw_685_equation_0 = const()[name = tensor<string, []>("aw_685_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_685_cast_fp16 = einsum(equation = aw_685_equation_0, values = (var_4771_cast_fp16_2, var_4749_cast_fp16_2))[name = tensor<string, []>("aw_685_cast_fp16")];
            tensor<string, []> aw_687_equation_0 = const()[name = tensor<string, []>("aw_687_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_687_cast_fp16 = einsum(equation = aw_687_equation_0, values = (var_4771_cast_fp16_3, var_4749_cast_fp16_3))[name = tensor<string, []>("aw_687_cast_fp16")];
            tensor<string, []> aw_689_equation_0 = const()[name = tensor<string, []>("aw_689_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_689_cast_fp16 = einsum(equation = aw_689_equation_0, values = (var_4771_cast_fp16_4, var_4749_cast_fp16_4))[name = tensor<string, []>("aw_689_cast_fp16")];
            tensor<string, []> aw_691_equation_0 = const()[name = tensor<string, []>("aw_691_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_691_cast_fp16 = einsum(equation = aw_691_equation_0, values = (var_4771_cast_fp16_5, var_4749_cast_fp16_5))[name = tensor<string, []>("aw_691_cast_fp16")];
            tensor<string, []> aw_693_equation_0 = const()[name = tensor<string, []>("aw_693_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_693_cast_fp16 = einsum(equation = aw_693_equation_0, values = (var_4771_cast_fp16_6, var_4749_cast_fp16_6))[name = tensor<string, []>("aw_693_cast_fp16")];
            tensor<string, []> aw_695_equation_0 = const()[name = tensor<string, []>("aw_695_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_695_cast_fp16 = einsum(equation = aw_695_equation_0, values = (var_4771_cast_fp16_7, var_4749_cast_fp16_7))[name = tensor<string, []>("aw_695_cast_fp16")];
            tensor<string, []> aw_697_equation_0 = const()[name = tensor<string, []>("aw_697_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_697_cast_fp16 = einsum(equation = aw_697_equation_0, values = (var_4771_cast_fp16_8, var_4749_cast_fp16_8))[name = tensor<string, []>("aw_697_cast_fp16")];
            tensor<string, []> aw_699_equation_0 = const()[name = tensor<string, []>("aw_699_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_699_cast_fp16 = einsum(equation = aw_699_equation_0, values = (var_4771_cast_fp16_9, var_4749_cast_fp16_9))[name = tensor<string, []>("aw_699_cast_fp16")];
            tensor<string, []> aw_701_equation_0 = const()[name = tensor<string, []>("aw_701_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_701_cast_fp16 = einsum(equation = aw_701_equation_0, values = (var_4771_cast_fp16_10, var_4749_cast_fp16_10))[name = tensor<string, []>("aw_701_cast_fp16")];
            tensor<string, []> aw_703_equation_0 = const()[name = tensor<string, []>("aw_703_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_703_cast_fp16 = einsum(equation = aw_703_equation_0, values = (var_4771_cast_fp16_11, var_4749_cast_fp16_11))[name = tensor<string, []>("aw_703_cast_fp16")];
            tensor<string, []> aw_705_equation_0 = const()[name = tensor<string, []>("aw_705_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_705_cast_fp16 = einsum(equation = aw_705_equation_0, values = (var_4771_cast_fp16_12, var_4749_cast_fp16_12))[name = tensor<string, []>("aw_705_cast_fp16")];
            tensor<string, []> aw_707_equation_0 = const()[name = tensor<string, []>("aw_707_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_707_cast_fp16 = einsum(equation = aw_707_equation_0, values = (var_4771_cast_fp16_13, var_4749_cast_fp16_13))[name = tensor<string, []>("aw_707_cast_fp16")];
            tensor<string, []> aw_709_equation_0 = const()[name = tensor<string, []>("aw_709_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_709_cast_fp16 = einsum(equation = aw_709_equation_0, values = (var_4771_cast_fp16_14, var_4749_cast_fp16_14))[name = tensor<string, []>("aw_709_cast_fp16")];
            tensor<string, []> aw_711_equation_0 = const()[name = tensor<string, []>("aw_711_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_711_cast_fp16 = einsum(equation = aw_711_equation_0, values = (var_4771_cast_fp16_15, var_4749_cast_fp16_15))[name = tensor<string, []>("aw_711_cast_fp16")];
            tensor<string, []> aw_713_equation_0 = const()[name = tensor<string, []>("aw_713_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_713_cast_fp16 = einsum(equation = aw_713_equation_0, values = (var_4771_cast_fp16_16, var_4749_cast_fp16_16))[name = tensor<string, []>("aw_713_cast_fp16")];
            tensor<string, []> aw_715_equation_0 = const()[name = tensor<string, []>("aw_715_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_715_cast_fp16 = einsum(equation = aw_715_equation_0, values = (var_4771_cast_fp16_17, var_4749_cast_fp16_17))[name = tensor<string, []>("aw_715_cast_fp16")];
            tensor<string, []> aw_717_equation_0 = const()[name = tensor<string, []>("aw_717_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_717_cast_fp16 = einsum(equation = aw_717_equation_0, values = (var_4771_cast_fp16_18, var_4749_cast_fp16_18))[name = tensor<string, []>("aw_717_cast_fp16")];
            tensor<string, []> aw_719_equation_0 = const()[name = tensor<string, []>("aw_719_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_719_cast_fp16 = einsum(equation = aw_719_equation_0, values = (var_4771_cast_fp16_19, var_4749_cast_fp16_19))[name = tensor<string, []>("aw_719_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4853_cast_fp16 = softmax(axis = var_4697, x = aw_681_cast_fp16)[name = tensor<string, []>("op_4853_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4854_cast_fp16 = softmax(axis = var_4697, x = aw_683_cast_fp16)[name = tensor<string, []>("op_4854_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4855_cast_fp16 = softmax(axis = var_4697, x = aw_685_cast_fp16)[name = tensor<string, []>("op_4855_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4856_cast_fp16 = softmax(axis = var_4697, x = aw_687_cast_fp16)[name = tensor<string, []>("op_4856_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4857_cast_fp16 = softmax(axis = var_4697, x = aw_689_cast_fp16)[name = tensor<string, []>("op_4857_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4858_cast_fp16 = softmax(axis = var_4697, x = aw_691_cast_fp16)[name = tensor<string, []>("op_4858_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4859_cast_fp16 = softmax(axis = var_4697, x = aw_693_cast_fp16)[name = tensor<string, []>("op_4859_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4860_cast_fp16 = softmax(axis = var_4697, x = aw_695_cast_fp16)[name = tensor<string, []>("op_4860_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4861_cast_fp16 = softmax(axis = var_4697, x = aw_697_cast_fp16)[name = tensor<string, []>("op_4861_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4862_cast_fp16 = softmax(axis = var_4697, x = aw_699_cast_fp16)[name = tensor<string, []>("op_4862_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4863_cast_fp16 = softmax(axis = var_4697, x = aw_701_cast_fp16)[name = tensor<string, []>("op_4863_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4864_cast_fp16 = softmax(axis = var_4697, x = aw_703_cast_fp16)[name = tensor<string, []>("op_4864_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4865_cast_fp16 = softmax(axis = var_4697, x = aw_705_cast_fp16)[name = tensor<string, []>("op_4865_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4866_cast_fp16 = softmax(axis = var_4697, x = aw_707_cast_fp16)[name = tensor<string, []>("op_4866_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4867_cast_fp16 = softmax(axis = var_4697, x = aw_709_cast_fp16)[name = tensor<string, []>("op_4867_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4868_cast_fp16 = softmax(axis = var_4697, x = aw_711_cast_fp16)[name = tensor<string, []>("op_4868_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4869_cast_fp16 = softmax(axis = var_4697, x = aw_713_cast_fp16)[name = tensor<string, []>("op_4869_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4870_cast_fp16 = softmax(axis = var_4697, x = aw_715_cast_fp16)[name = tensor<string, []>("op_4870_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4871_cast_fp16 = softmax(axis = var_4697, x = aw_717_cast_fp16)[name = tensor<string, []>("op_4871_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4872_cast_fp16 = softmax(axis = var_4697, x = aw_719_cast_fp16)[name = tensor<string, []>("op_4872_cast_fp16")];
            tensor<string, []> var_4874_equation_0 = const()[name = tensor<string, []>("op_4874_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4874_cast_fp16 = einsum(equation = var_4874_equation_0, values = (var_4792_cast_fp16_0, var_4853_cast_fp16))[name = tensor<string, []>("op_4874_cast_fp16")];
            tensor<string, []> var_4876_equation_0 = const()[name = tensor<string, []>("op_4876_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4876_cast_fp16 = einsum(equation = var_4876_equation_0, values = (var_4792_cast_fp16_1, var_4854_cast_fp16))[name = tensor<string, []>("op_4876_cast_fp16")];
            tensor<string, []> var_4878_equation_0 = const()[name = tensor<string, []>("op_4878_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4878_cast_fp16 = einsum(equation = var_4878_equation_0, values = (var_4792_cast_fp16_2, var_4855_cast_fp16))[name = tensor<string, []>("op_4878_cast_fp16")];
            tensor<string, []> var_4880_equation_0 = const()[name = tensor<string, []>("op_4880_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4880_cast_fp16 = einsum(equation = var_4880_equation_0, values = (var_4792_cast_fp16_3, var_4856_cast_fp16))[name = tensor<string, []>("op_4880_cast_fp16")];
            tensor<string, []> var_4882_equation_0 = const()[name = tensor<string, []>("op_4882_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4882_cast_fp16 = einsum(equation = var_4882_equation_0, values = (var_4792_cast_fp16_4, var_4857_cast_fp16))[name = tensor<string, []>("op_4882_cast_fp16")];
            tensor<string, []> var_4884_equation_0 = const()[name = tensor<string, []>("op_4884_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4884_cast_fp16 = einsum(equation = var_4884_equation_0, values = (var_4792_cast_fp16_5, var_4858_cast_fp16))[name = tensor<string, []>("op_4884_cast_fp16")];
            tensor<string, []> var_4886_equation_0 = const()[name = tensor<string, []>("op_4886_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4886_cast_fp16 = einsum(equation = var_4886_equation_0, values = (var_4792_cast_fp16_6, var_4859_cast_fp16))[name = tensor<string, []>("op_4886_cast_fp16")];
            tensor<string, []> var_4888_equation_0 = const()[name = tensor<string, []>("op_4888_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4888_cast_fp16 = einsum(equation = var_4888_equation_0, values = (var_4792_cast_fp16_7, var_4860_cast_fp16))[name = tensor<string, []>("op_4888_cast_fp16")];
            tensor<string, []> var_4890_equation_0 = const()[name = tensor<string, []>("op_4890_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4890_cast_fp16 = einsum(equation = var_4890_equation_0, values = (var_4792_cast_fp16_8, var_4861_cast_fp16))[name = tensor<string, []>("op_4890_cast_fp16")];
            tensor<string, []> var_4892_equation_0 = const()[name = tensor<string, []>("op_4892_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4892_cast_fp16 = einsum(equation = var_4892_equation_0, values = (var_4792_cast_fp16_9, var_4862_cast_fp16))[name = tensor<string, []>("op_4892_cast_fp16")];
            tensor<string, []> var_4894_equation_0 = const()[name = tensor<string, []>("op_4894_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4894_cast_fp16 = einsum(equation = var_4894_equation_0, values = (var_4792_cast_fp16_10, var_4863_cast_fp16))[name = tensor<string, []>("op_4894_cast_fp16")];
            tensor<string, []> var_4896_equation_0 = const()[name = tensor<string, []>("op_4896_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4896_cast_fp16 = einsum(equation = var_4896_equation_0, values = (var_4792_cast_fp16_11, var_4864_cast_fp16))[name = tensor<string, []>("op_4896_cast_fp16")];
            tensor<string, []> var_4898_equation_0 = const()[name = tensor<string, []>("op_4898_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4898_cast_fp16 = einsum(equation = var_4898_equation_0, values = (var_4792_cast_fp16_12, var_4865_cast_fp16))[name = tensor<string, []>("op_4898_cast_fp16")];
            tensor<string, []> var_4900_equation_0 = const()[name = tensor<string, []>("op_4900_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16 = einsum(equation = var_4900_equation_0, values = (var_4792_cast_fp16_13, var_4866_cast_fp16))[name = tensor<string, []>("op_4900_cast_fp16")];
            tensor<string, []> var_4902_equation_0 = const()[name = tensor<string, []>("op_4902_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4902_cast_fp16 = einsum(equation = var_4902_equation_0, values = (var_4792_cast_fp16_14, var_4867_cast_fp16))[name = tensor<string, []>("op_4902_cast_fp16")];
            tensor<string, []> var_4904_equation_0 = const()[name = tensor<string, []>("op_4904_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4904_cast_fp16 = einsum(equation = var_4904_equation_0, values = (var_4792_cast_fp16_15, var_4868_cast_fp16))[name = tensor<string, []>("op_4904_cast_fp16")];
            tensor<string, []> var_4906_equation_0 = const()[name = tensor<string, []>("op_4906_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4906_cast_fp16 = einsum(equation = var_4906_equation_0, values = (var_4792_cast_fp16_16, var_4869_cast_fp16))[name = tensor<string, []>("op_4906_cast_fp16")];
            tensor<string, []> var_4908_equation_0 = const()[name = tensor<string, []>("op_4908_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4908_cast_fp16 = einsum(equation = var_4908_equation_0, values = (var_4792_cast_fp16_17, var_4870_cast_fp16))[name = tensor<string, []>("op_4908_cast_fp16")];
            tensor<string, []> var_4910_equation_0 = const()[name = tensor<string, []>("op_4910_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4910_cast_fp16 = einsum(equation = var_4910_equation_0, values = (var_4792_cast_fp16_18, var_4871_cast_fp16))[name = tensor<string, []>("op_4910_cast_fp16")];
            tensor<string, []> var_4912_equation_0 = const()[name = tensor<string, []>("op_4912_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4912_cast_fp16 = einsum(equation = var_4912_equation_0, values = (var_4792_cast_fp16_19, var_4872_cast_fp16))[name = tensor<string, []>("op_4912_cast_fp16")];
            tensor<bool, []> input_175_interleave_0 = const()[name = tensor<string, []>("input_175_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_175_cast_fp16 = concat(axis = var_4697, interleave = input_175_interleave_0, values = (var_4874_cast_fp16, var_4876_cast_fp16, var_4878_cast_fp16, var_4880_cast_fp16, var_4882_cast_fp16, var_4884_cast_fp16, var_4886_cast_fp16, var_4888_cast_fp16, var_4890_cast_fp16, var_4892_cast_fp16, var_4894_cast_fp16, var_4896_cast_fp16, var_4898_cast_fp16, var_4900_cast_fp16, var_4902_cast_fp16, var_4904_cast_fp16, var_4906_cast_fp16, var_4908_cast_fp16, var_4910_cast_fp16, var_4912_cast_fp16))[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<string, []> var_4921_pad_type_0 = const()[name = tensor<string, []>("op_4921_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4921_strides_0 = const()[name = tensor<string, []>("op_4921_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4921_pad_0 = const()[name = tensor<string, []>("op_4921_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4921_dilations_0 = const()[name = tensor<string, []>("op_4921_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4921_groups_0 = const()[name = tensor<string, []>("op_4921_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_17_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(693505792)))];
            tensor<fp16, [1280]> blocks_17_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(696782656)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4921_cast_fp16 = conv(bias = blocks_17_attn_out_bias_to_fp16, dilations = var_4921_dilations_0, groups = var_4921_groups_0, pad = var_4921_pad_0, pad_type = var_4921_pad_type_0, strides = var_4921_strides_0, weight = blocks_17_attn_out_weight_to_fp16, x = input_175_cast_fp16)[name = tensor<string, []>("op_4921_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_71_cast_fp16 = add(x = inputs_69_cast_fp16, y = var_4921_cast_fp16)[name = tensor<string, []>("inputs_71_cast_fp16")];
            tensor<int32, [1]> input_177_axes_0 = const()[name = tensor<string, []>("input_177_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_177_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_177_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(696785280)))];
            tensor<fp16, [1280]> input_177_beta_0_to_fp16 = const()[name = tensor<string, []>("input_177_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(696787904)))];
            tensor<fp16, []> var_4931_to_fp16 = const()[name = tensor<string, []>("op_4931_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_177_cast_fp16 = layer_norm(axes = input_177_axes_0, beta = input_177_beta_0_to_fp16, epsilon = var_4931_to_fp16, gamma = input_177_gamma_0_to_fp16, x = inputs_71_cast_fp16)[name = tensor<string, []>("input_177_cast_fp16")];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_179_strides_0 = const()[name = tensor<string, []>("input_179_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_179_dilations_0 = const()[name = tensor<string, []>("input_179_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_179_groups_0 = const()[name = tensor<string, []>("input_179_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_17_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(696790528)))];
            tensor<fp16, [5120]> blocks_17_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(709897792)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_179_cast_fp16 = conv(bias = blocks_17_mlp_0_bias_to_fp16, dilations = input_179_dilations_0, groups = input_179_groups_0, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = input_179_strides_0, weight = blocks_17_mlp_0_weight_to_fp16, x = input_177_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<string, []> input_181_mode_0 = const()[name = tensor<string, []>("input_181_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_181_cast_fp16 = gelu(mode = input_181_mode_0, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<string, []> var_4957_pad_type_0 = const()[name = tensor<string, []>("op_4957_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4957_strides_0 = const()[name = tensor<string, []>("op_4957_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4957_pad_0 = const()[name = tensor<string, []>("op_4957_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4957_dilations_0 = const()[name = tensor<string, []>("op_4957_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4957_groups_0 = const()[name = tensor<string, []>("op_4957_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_17_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(709908096)))];
            tensor<fp16, [1280]> blocks_17_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(723015360)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_4957_cast_fp16 = conv(bias = blocks_17_mlp_2_bias_to_fp16, dilations = var_4957_dilations_0, groups = var_4957_groups_0, pad = var_4957_pad_0, pad_type = var_4957_pad_type_0, strides = var_4957_strides_0, weight = blocks_17_mlp_2_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("op_4957_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_73_cast_fp16 = add(x = inputs_71_cast_fp16, y = var_4957_cast_fp16)[name = tensor<string, []>("inputs_73_cast_fp16")];
            tensor<int32, []> var_4966 = const()[name = tensor<string, []>("op_4966"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_183_axes_0 = const()[name = tensor<string, []>("input_183_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_183_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_183_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(723017984)))];
            tensor<fp16, [1280]> input_183_beta_0_to_fp16 = const()[name = tensor<string, []>("input_183_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(723020608)))];
            tensor<fp16, []> var_4982_to_fp16 = const()[name = tensor<string, []>("op_4982_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_183_cast_fp16 = layer_norm(axes = input_183_axes_0, beta = input_183_beta_0_to_fp16, epsilon = var_4982_to_fp16, gamma = input_183_gamma_0_to_fp16, x = inputs_73_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<string, []> q_37_pad_type_0 = const()[name = tensor<string, []>("q_37_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_37_strides_0 = const()[name = tensor<string, []>("q_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_37_pad_0 = const()[name = tensor<string, []>("q_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_37_dilations_0 = const()[name = tensor<string, []>("q_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_37_groups_0 = const()[name = tensor<string, []>("q_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_5017_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5017_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(723023232)))];
            tensor<fp16, [1280]> var_5017_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5017_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(726300096)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5017_cast_fp16 = conv(bias = var_5017_bias_0_to_fp16, dilations = q_37_dilations_0, groups = q_37_groups_0, pad = q_37_pad_0, pad_type = q_37_pad_type_0, strides = q_37_strides_0, weight = var_5017_weight_0_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("op_5017_cast_fp16")];
            tensor<string, []> k_37_pad_type_0 = const()[name = tensor<string, []>("k_37_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_37_strides_0 = const()[name = tensor<string, []>("k_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_37_pad_0 = const()[name = tensor<string, []>("k_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_37_dilations_0 = const()[name = tensor<string, []>("k_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_37_groups_0 = const()[name = tensor<string, []>("k_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_18_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(726302720)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_37_cast_fp16 = conv(dilations = k_37_dilations_0, groups = k_37_groups_0, pad = k_37_pad_0, pad_type = k_37_pad_type_0, strides = k_37_strides_0, weight = blocks_18_attn_key_weight_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("k_37_cast_fp16")];
            tensor<string, []> var_5015_pad_type_0 = const()[name = tensor<string, []>("op_5015_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5015_strides_0 = const()[name = tensor<string, []>("op_5015_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5015_pad_0 = const()[name = tensor<string, []>("op_5015_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5015_dilations_0 = const()[name = tensor<string, []>("op_5015_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5015_groups_0 = const()[name = tensor<string, []>("op_5015_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_18_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(729579584)))];
            tensor<fp16, [1280]> blocks_18_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732856448)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5015_cast_fp16 = conv(bias = blocks_18_attn_value_bias_to_fp16, dilations = var_5015_dilations_0, groups = var_5015_groups_0, pad = var_5015_pad_0, pad_type = var_5015_pad_type_0, strides = var_5015_strides_0, weight = blocks_18_attn_value_weight_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("op_5015_cast_fp16")];
            tensor<int32, [20]> tile_54 = const()[name = tensor<string, []>("tile_54"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5018_axis_0 = const()[name = tensor<string, []>("op_5018_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5018_cast_fp16_19 = split(axis = var_5018_axis_0, split_sizes = tile_54, x = var_5017_cast_fp16)[name = tensor<string, []>("op_5018_cast_fp16")];
            tensor<int32, [4]> var_5039_perm_0 = const()[name = tensor<string, []>("op_5039_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_55 = const()[name = tensor<string, []>("tile_55"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5040_axis_0 = const()[name = tensor<string, []>("op_5040_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_5039_cast_fp16 = transpose(perm = var_5039_perm_0, x = k_37_cast_fp16)[name = tensor<string, []>("transpose_14")];
            tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_5040_cast_fp16_19 = split(axis = var_5040_axis_0, split_sizes = tile_55, x = var_5039_cast_fp16)[name = tensor<string, []>("op_5040_cast_fp16")];
            tensor<int32, [20]> tile_56 = const()[name = tensor<string, []>("tile_56"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5061_axis_0 = const()[name = tensor<string, []>("op_5061_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5061_cast_fp16_19 = split(axis = var_5061_axis_0, split_sizes = tile_56, x = var_5015_cast_fp16)[name = tensor<string, []>("op_5061_cast_fp16")];
            tensor<string, []> aw_721_equation_0 = const()[name = tensor<string, []>("aw_721_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_721_cast_fp16 = einsum(equation = aw_721_equation_0, values = (var_5040_cast_fp16_0, var_5018_cast_fp16_0))[name = tensor<string, []>("aw_721_cast_fp16")];
            tensor<string, []> aw_723_equation_0 = const()[name = tensor<string, []>("aw_723_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_723_cast_fp16 = einsum(equation = aw_723_equation_0, values = (var_5040_cast_fp16_1, var_5018_cast_fp16_1))[name = tensor<string, []>("aw_723_cast_fp16")];
            tensor<string, []> aw_725_equation_0 = const()[name = tensor<string, []>("aw_725_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_725_cast_fp16 = einsum(equation = aw_725_equation_0, values = (var_5040_cast_fp16_2, var_5018_cast_fp16_2))[name = tensor<string, []>("aw_725_cast_fp16")];
            tensor<string, []> aw_727_equation_0 = const()[name = tensor<string, []>("aw_727_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_727_cast_fp16 = einsum(equation = aw_727_equation_0, values = (var_5040_cast_fp16_3, var_5018_cast_fp16_3))[name = tensor<string, []>("aw_727_cast_fp16")];
            tensor<string, []> aw_729_equation_0 = const()[name = tensor<string, []>("aw_729_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_729_cast_fp16 = einsum(equation = aw_729_equation_0, values = (var_5040_cast_fp16_4, var_5018_cast_fp16_4))[name = tensor<string, []>("aw_729_cast_fp16")];
            tensor<string, []> aw_731_equation_0 = const()[name = tensor<string, []>("aw_731_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_731_cast_fp16 = einsum(equation = aw_731_equation_0, values = (var_5040_cast_fp16_5, var_5018_cast_fp16_5))[name = tensor<string, []>("aw_731_cast_fp16")];
            tensor<string, []> aw_733_equation_0 = const()[name = tensor<string, []>("aw_733_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_733_cast_fp16 = einsum(equation = aw_733_equation_0, values = (var_5040_cast_fp16_6, var_5018_cast_fp16_6))[name = tensor<string, []>("aw_733_cast_fp16")];
            tensor<string, []> aw_735_equation_0 = const()[name = tensor<string, []>("aw_735_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_735_cast_fp16 = einsum(equation = aw_735_equation_0, values = (var_5040_cast_fp16_7, var_5018_cast_fp16_7))[name = tensor<string, []>("aw_735_cast_fp16")];
            tensor<string, []> aw_737_equation_0 = const()[name = tensor<string, []>("aw_737_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_737_cast_fp16 = einsum(equation = aw_737_equation_0, values = (var_5040_cast_fp16_8, var_5018_cast_fp16_8))[name = tensor<string, []>("aw_737_cast_fp16")];
            tensor<string, []> aw_739_equation_0 = const()[name = tensor<string, []>("aw_739_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_739_cast_fp16 = einsum(equation = aw_739_equation_0, values = (var_5040_cast_fp16_9, var_5018_cast_fp16_9))[name = tensor<string, []>("aw_739_cast_fp16")];
            tensor<string, []> aw_741_equation_0 = const()[name = tensor<string, []>("aw_741_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_741_cast_fp16 = einsum(equation = aw_741_equation_0, values = (var_5040_cast_fp16_10, var_5018_cast_fp16_10))[name = tensor<string, []>("aw_741_cast_fp16")];
            tensor<string, []> aw_743_equation_0 = const()[name = tensor<string, []>("aw_743_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_743_cast_fp16 = einsum(equation = aw_743_equation_0, values = (var_5040_cast_fp16_11, var_5018_cast_fp16_11))[name = tensor<string, []>("aw_743_cast_fp16")];
            tensor<string, []> aw_745_equation_0 = const()[name = tensor<string, []>("aw_745_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_745_cast_fp16 = einsum(equation = aw_745_equation_0, values = (var_5040_cast_fp16_12, var_5018_cast_fp16_12))[name = tensor<string, []>("aw_745_cast_fp16")];
            tensor<string, []> aw_747_equation_0 = const()[name = tensor<string, []>("aw_747_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_747_cast_fp16 = einsum(equation = aw_747_equation_0, values = (var_5040_cast_fp16_13, var_5018_cast_fp16_13))[name = tensor<string, []>("aw_747_cast_fp16")];
            tensor<string, []> aw_749_equation_0 = const()[name = tensor<string, []>("aw_749_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_749_cast_fp16 = einsum(equation = aw_749_equation_0, values = (var_5040_cast_fp16_14, var_5018_cast_fp16_14))[name = tensor<string, []>("aw_749_cast_fp16")];
            tensor<string, []> aw_751_equation_0 = const()[name = tensor<string, []>("aw_751_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_751_cast_fp16 = einsum(equation = aw_751_equation_0, values = (var_5040_cast_fp16_15, var_5018_cast_fp16_15))[name = tensor<string, []>("aw_751_cast_fp16")];
            tensor<string, []> aw_753_equation_0 = const()[name = tensor<string, []>("aw_753_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_753_cast_fp16 = einsum(equation = aw_753_equation_0, values = (var_5040_cast_fp16_16, var_5018_cast_fp16_16))[name = tensor<string, []>("aw_753_cast_fp16")];
            tensor<string, []> aw_755_equation_0 = const()[name = tensor<string, []>("aw_755_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_755_cast_fp16 = einsum(equation = aw_755_equation_0, values = (var_5040_cast_fp16_17, var_5018_cast_fp16_17))[name = tensor<string, []>("aw_755_cast_fp16")];
            tensor<string, []> aw_757_equation_0 = const()[name = tensor<string, []>("aw_757_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_757_cast_fp16 = einsum(equation = aw_757_equation_0, values = (var_5040_cast_fp16_18, var_5018_cast_fp16_18))[name = tensor<string, []>("aw_757_cast_fp16")];
            tensor<string, []> aw_759_equation_0 = const()[name = tensor<string, []>("aw_759_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_759_cast_fp16 = einsum(equation = aw_759_equation_0, values = (var_5040_cast_fp16_19, var_5018_cast_fp16_19))[name = tensor<string, []>("aw_759_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5122_cast_fp16 = softmax(axis = var_4966, x = aw_721_cast_fp16)[name = tensor<string, []>("op_5122_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5123_cast_fp16 = softmax(axis = var_4966, x = aw_723_cast_fp16)[name = tensor<string, []>("op_5123_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5124_cast_fp16 = softmax(axis = var_4966, x = aw_725_cast_fp16)[name = tensor<string, []>("op_5124_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5125_cast_fp16 = softmax(axis = var_4966, x = aw_727_cast_fp16)[name = tensor<string, []>("op_5125_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5126_cast_fp16 = softmax(axis = var_4966, x = aw_729_cast_fp16)[name = tensor<string, []>("op_5126_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5127_cast_fp16 = softmax(axis = var_4966, x = aw_731_cast_fp16)[name = tensor<string, []>("op_5127_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5128_cast_fp16 = softmax(axis = var_4966, x = aw_733_cast_fp16)[name = tensor<string, []>("op_5128_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5129_cast_fp16 = softmax(axis = var_4966, x = aw_735_cast_fp16)[name = tensor<string, []>("op_5129_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5130_cast_fp16 = softmax(axis = var_4966, x = aw_737_cast_fp16)[name = tensor<string, []>("op_5130_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5131_cast_fp16 = softmax(axis = var_4966, x = aw_739_cast_fp16)[name = tensor<string, []>("op_5131_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5132_cast_fp16 = softmax(axis = var_4966, x = aw_741_cast_fp16)[name = tensor<string, []>("op_5132_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5133_cast_fp16 = softmax(axis = var_4966, x = aw_743_cast_fp16)[name = tensor<string, []>("op_5133_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5134_cast_fp16 = softmax(axis = var_4966, x = aw_745_cast_fp16)[name = tensor<string, []>("op_5134_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5135_cast_fp16 = softmax(axis = var_4966, x = aw_747_cast_fp16)[name = tensor<string, []>("op_5135_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5136_cast_fp16 = softmax(axis = var_4966, x = aw_749_cast_fp16)[name = tensor<string, []>("op_5136_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5137_cast_fp16 = softmax(axis = var_4966, x = aw_751_cast_fp16)[name = tensor<string, []>("op_5137_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5138_cast_fp16 = softmax(axis = var_4966, x = aw_753_cast_fp16)[name = tensor<string, []>("op_5138_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5139_cast_fp16 = softmax(axis = var_4966, x = aw_755_cast_fp16)[name = tensor<string, []>("op_5139_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5140_cast_fp16 = softmax(axis = var_4966, x = aw_757_cast_fp16)[name = tensor<string, []>("op_5140_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5141_cast_fp16 = softmax(axis = var_4966, x = aw_759_cast_fp16)[name = tensor<string, []>("op_5141_cast_fp16")];
            tensor<string, []> var_5143_equation_0 = const()[name = tensor<string, []>("op_5143_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5143_cast_fp16 = einsum(equation = var_5143_equation_0, values = (var_5061_cast_fp16_0, var_5122_cast_fp16))[name = tensor<string, []>("op_5143_cast_fp16")];
            tensor<string, []> var_5145_equation_0 = const()[name = tensor<string, []>("op_5145_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5145_cast_fp16 = einsum(equation = var_5145_equation_0, values = (var_5061_cast_fp16_1, var_5123_cast_fp16))[name = tensor<string, []>("op_5145_cast_fp16")];
            tensor<string, []> var_5147_equation_0 = const()[name = tensor<string, []>("op_5147_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5147_cast_fp16 = einsum(equation = var_5147_equation_0, values = (var_5061_cast_fp16_2, var_5124_cast_fp16))[name = tensor<string, []>("op_5147_cast_fp16")];
            tensor<string, []> var_5149_equation_0 = const()[name = tensor<string, []>("op_5149_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5149_cast_fp16 = einsum(equation = var_5149_equation_0, values = (var_5061_cast_fp16_3, var_5125_cast_fp16))[name = tensor<string, []>("op_5149_cast_fp16")];
            tensor<string, []> var_5151_equation_0 = const()[name = tensor<string, []>("op_5151_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5151_cast_fp16 = einsum(equation = var_5151_equation_0, values = (var_5061_cast_fp16_4, var_5126_cast_fp16))[name = tensor<string, []>("op_5151_cast_fp16")];
            tensor<string, []> var_5153_equation_0 = const()[name = tensor<string, []>("op_5153_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5153_cast_fp16 = einsum(equation = var_5153_equation_0, values = (var_5061_cast_fp16_5, var_5127_cast_fp16))[name = tensor<string, []>("op_5153_cast_fp16")];
            tensor<string, []> var_5155_equation_0 = const()[name = tensor<string, []>("op_5155_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5155_cast_fp16 = einsum(equation = var_5155_equation_0, values = (var_5061_cast_fp16_6, var_5128_cast_fp16))[name = tensor<string, []>("op_5155_cast_fp16")];
            tensor<string, []> var_5157_equation_0 = const()[name = tensor<string, []>("op_5157_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5157_cast_fp16 = einsum(equation = var_5157_equation_0, values = (var_5061_cast_fp16_7, var_5129_cast_fp16))[name = tensor<string, []>("op_5157_cast_fp16")];
            tensor<string, []> var_5159_equation_0 = const()[name = tensor<string, []>("op_5159_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5159_cast_fp16 = einsum(equation = var_5159_equation_0, values = (var_5061_cast_fp16_8, var_5130_cast_fp16))[name = tensor<string, []>("op_5159_cast_fp16")];
            tensor<string, []> var_5161_equation_0 = const()[name = tensor<string, []>("op_5161_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5161_cast_fp16 = einsum(equation = var_5161_equation_0, values = (var_5061_cast_fp16_9, var_5131_cast_fp16))[name = tensor<string, []>("op_5161_cast_fp16")];
            tensor<string, []> var_5163_equation_0 = const()[name = tensor<string, []>("op_5163_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5163_cast_fp16 = einsum(equation = var_5163_equation_0, values = (var_5061_cast_fp16_10, var_5132_cast_fp16))[name = tensor<string, []>("op_5163_cast_fp16")];
            tensor<string, []> var_5165_equation_0 = const()[name = tensor<string, []>("op_5165_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5165_cast_fp16 = einsum(equation = var_5165_equation_0, values = (var_5061_cast_fp16_11, var_5133_cast_fp16))[name = tensor<string, []>("op_5165_cast_fp16")];
            tensor<string, []> var_5167_equation_0 = const()[name = tensor<string, []>("op_5167_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5167_cast_fp16 = einsum(equation = var_5167_equation_0, values = (var_5061_cast_fp16_12, var_5134_cast_fp16))[name = tensor<string, []>("op_5167_cast_fp16")];
            tensor<string, []> var_5169_equation_0 = const()[name = tensor<string, []>("op_5169_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5169_cast_fp16 = einsum(equation = var_5169_equation_0, values = (var_5061_cast_fp16_13, var_5135_cast_fp16))[name = tensor<string, []>("op_5169_cast_fp16")];
            tensor<string, []> var_5171_equation_0 = const()[name = tensor<string, []>("op_5171_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5171_cast_fp16 = einsum(equation = var_5171_equation_0, values = (var_5061_cast_fp16_14, var_5136_cast_fp16))[name = tensor<string, []>("op_5171_cast_fp16")];
            tensor<string, []> var_5173_equation_0 = const()[name = tensor<string, []>("op_5173_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5173_cast_fp16 = einsum(equation = var_5173_equation_0, values = (var_5061_cast_fp16_15, var_5137_cast_fp16))[name = tensor<string, []>("op_5173_cast_fp16")];
            tensor<string, []> var_5175_equation_0 = const()[name = tensor<string, []>("op_5175_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5175_cast_fp16 = einsum(equation = var_5175_equation_0, values = (var_5061_cast_fp16_16, var_5138_cast_fp16))[name = tensor<string, []>("op_5175_cast_fp16")];
            tensor<string, []> var_5177_equation_0 = const()[name = tensor<string, []>("op_5177_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5177_cast_fp16 = einsum(equation = var_5177_equation_0, values = (var_5061_cast_fp16_17, var_5139_cast_fp16))[name = tensor<string, []>("op_5177_cast_fp16")];
            tensor<string, []> var_5179_equation_0 = const()[name = tensor<string, []>("op_5179_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5179_cast_fp16 = einsum(equation = var_5179_equation_0, values = (var_5061_cast_fp16_18, var_5140_cast_fp16))[name = tensor<string, []>("op_5179_cast_fp16")];
            tensor<string, []> var_5181_equation_0 = const()[name = tensor<string, []>("op_5181_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5181_cast_fp16 = einsum(equation = var_5181_equation_0, values = (var_5061_cast_fp16_19, var_5141_cast_fp16))[name = tensor<string, []>("op_5181_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_185_cast_fp16 = concat(axis = var_4966, interleave = input_185_interleave_0, values = (var_5143_cast_fp16, var_5145_cast_fp16, var_5147_cast_fp16, var_5149_cast_fp16, var_5151_cast_fp16, var_5153_cast_fp16, var_5155_cast_fp16, var_5157_cast_fp16, var_5159_cast_fp16, var_5161_cast_fp16, var_5163_cast_fp16, var_5165_cast_fp16, var_5167_cast_fp16, var_5169_cast_fp16, var_5171_cast_fp16, var_5173_cast_fp16, var_5175_cast_fp16, var_5177_cast_fp16, var_5179_cast_fp16, var_5181_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<string, []> var_5190_pad_type_0 = const()[name = tensor<string, []>("op_5190_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5190_strides_0 = const()[name = tensor<string, []>("op_5190_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5190_pad_0 = const()[name = tensor<string, []>("op_5190_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5190_dilations_0 = const()[name = tensor<string, []>("op_5190_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5190_groups_0 = const()[name = tensor<string, []>("op_5190_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_18_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732859072)))];
            tensor<fp16, [1280]> blocks_18_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736135936)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5190_cast_fp16 = conv(bias = blocks_18_attn_out_bias_to_fp16, dilations = var_5190_dilations_0, groups = var_5190_groups_0, pad = var_5190_pad_0, pad_type = var_5190_pad_type_0, strides = var_5190_strides_0, weight = blocks_18_attn_out_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("op_5190_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_75_cast_fp16 = add(x = inputs_73_cast_fp16, y = var_5190_cast_fp16)[name = tensor<string, []>("inputs_75_cast_fp16")];
            tensor<int32, [1]> input_187_axes_0 = const()[name = tensor<string, []>("input_187_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_187_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_187_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736138560)))];
            tensor<fp16, [1280]> input_187_beta_0_to_fp16 = const()[name = tensor<string, []>("input_187_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736141184)))];
            tensor<fp16, []> var_5200_to_fp16 = const()[name = tensor<string, []>("op_5200_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_187_cast_fp16 = layer_norm(axes = input_187_axes_0, beta = input_187_beta_0_to_fp16, epsilon = var_5200_to_fp16, gamma = input_187_gamma_0_to_fp16, x = inputs_75_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_189_strides_0 = const()[name = tensor<string, []>("input_189_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_189_dilations_0 = const()[name = tensor<string, []>("input_189_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_189_groups_0 = const()[name = tensor<string, []>("input_189_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_18_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736143808)))];
            tensor<fp16, [5120]> blocks_18_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(749251072)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_189_cast_fp16 = conv(bias = blocks_18_mlp_0_bias_to_fp16, dilations = input_189_dilations_0, groups = input_189_groups_0, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = input_189_strides_0, weight = blocks_18_mlp_0_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<string, []> input_191_mode_0 = const()[name = tensor<string, []>("input_191_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_191_cast_fp16 = gelu(mode = input_191_mode_0, x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<string, []> var_5226_pad_type_0 = const()[name = tensor<string, []>("op_5226_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5226_strides_0 = const()[name = tensor<string, []>("op_5226_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5226_pad_0 = const()[name = tensor<string, []>("op_5226_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5226_dilations_0 = const()[name = tensor<string, []>("op_5226_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5226_groups_0 = const()[name = tensor<string, []>("op_5226_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_18_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(749261376)))];
            tensor<fp16, [1280]> blocks_18_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762368640)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5226_cast_fp16 = conv(bias = blocks_18_mlp_2_bias_to_fp16, dilations = var_5226_dilations_0, groups = var_5226_groups_0, pad = var_5226_pad_0, pad_type = var_5226_pad_type_0, strides = var_5226_strides_0, weight = blocks_18_mlp_2_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("op_5226_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_77_cast_fp16 = add(x = inputs_75_cast_fp16, y = var_5226_cast_fp16)[name = tensor<string, []>("inputs_77_cast_fp16")];
            tensor<int32, []> var_5235 = const()[name = tensor<string, []>("op_5235"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_193_axes_0 = const()[name = tensor<string, []>("input_193_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_193_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_193_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762371264)))];
            tensor<fp16, [1280]> input_193_beta_0_to_fp16 = const()[name = tensor<string, []>("input_193_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762373888)))];
            tensor<fp16, []> var_5251_to_fp16 = const()[name = tensor<string, []>("op_5251_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_193_cast_fp16 = layer_norm(axes = input_193_axes_0, beta = input_193_beta_0_to_fp16, epsilon = var_5251_to_fp16, gamma = input_193_gamma_0_to_fp16, x = inputs_77_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<string, []> q_39_pad_type_0 = const()[name = tensor<string, []>("q_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_39_strides_0 = const()[name = tensor<string, []>("q_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_39_pad_0 = const()[name = tensor<string, []>("q_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_39_dilations_0 = const()[name = tensor<string, []>("q_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_39_groups_0 = const()[name = tensor<string, []>("q_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_5286_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5286_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762376512)))];
            tensor<fp16, [1280]> var_5286_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5286_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765653376)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5286_cast_fp16 = conv(bias = var_5286_bias_0_to_fp16, dilations = q_39_dilations_0, groups = q_39_groups_0, pad = q_39_pad_0, pad_type = q_39_pad_type_0, strides = q_39_strides_0, weight = var_5286_weight_0_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("op_5286_cast_fp16")];
            tensor<string, []> k_39_pad_type_0 = const()[name = tensor<string, []>("k_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_39_strides_0 = const()[name = tensor<string, []>("k_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_39_pad_0 = const()[name = tensor<string, []>("k_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_39_dilations_0 = const()[name = tensor<string, []>("k_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_39_groups_0 = const()[name = tensor<string, []>("k_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_19_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765656000)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_39_cast_fp16 = conv(dilations = k_39_dilations_0, groups = k_39_groups_0, pad = k_39_pad_0, pad_type = k_39_pad_type_0, strides = k_39_strides_0, weight = blocks_19_attn_key_weight_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("k_39_cast_fp16")];
            tensor<string, []> var_5284_pad_type_0 = const()[name = tensor<string, []>("op_5284_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5284_strides_0 = const()[name = tensor<string, []>("op_5284_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5284_pad_0 = const()[name = tensor<string, []>("op_5284_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5284_dilations_0 = const()[name = tensor<string, []>("op_5284_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5284_groups_0 = const()[name = tensor<string, []>("op_5284_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_19_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768932864)))];
            tensor<fp16, [1280]> blocks_19_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772209728)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5284_cast_fp16 = conv(bias = blocks_19_attn_value_bias_to_fp16, dilations = var_5284_dilations_0, groups = var_5284_groups_0, pad = var_5284_pad_0, pad_type = var_5284_pad_type_0, strides = var_5284_strides_0, weight = blocks_19_attn_value_weight_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("op_5284_cast_fp16")];
            tensor<int32, [20]> tile_57 = const()[name = tensor<string, []>("tile_57"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5287_axis_0 = const()[name = tensor<string, []>("op_5287_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5287_cast_fp16_19 = split(axis = var_5287_axis_0, split_sizes = tile_57, x = var_5286_cast_fp16)[name = tensor<string, []>("op_5287_cast_fp16")];
            tensor<int32, [4]> var_5308_perm_0 = const()[name = tensor<string, []>("op_5308_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_58 = const()[name = tensor<string, []>("tile_58"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5309_axis_0 = const()[name = tensor<string, []>("op_5309_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_5308_cast_fp16 = transpose(perm = var_5308_perm_0, x = k_39_cast_fp16)[name = tensor<string, []>("transpose_13")];
            tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_5309_cast_fp16_19 = split(axis = var_5309_axis_0, split_sizes = tile_58, x = var_5308_cast_fp16)[name = tensor<string, []>("op_5309_cast_fp16")];
            tensor<int32, [20]> tile_59 = const()[name = tensor<string, []>("tile_59"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5330_axis_0 = const()[name = tensor<string, []>("op_5330_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5330_cast_fp16_19 = split(axis = var_5330_axis_0, split_sizes = tile_59, x = var_5284_cast_fp16)[name = tensor<string, []>("op_5330_cast_fp16")];
            tensor<string, []> aw_761_equation_0 = const()[name = tensor<string, []>("aw_761_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_761_cast_fp16 = einsum(equation = aw_761_equation_0, values = (var_5309_cast_fp16_0, var_5287_cast_fp16_0))[name = tensor<string, []>("aw_761_cast_fp16")];
            tensor<string, []> aw_763_equation_0 = const()[name = tensor<string, []>("aw_763_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_763_cast_fp16 = einsum(equation = aw_763_equation_0, values = (var_5309_cast_fp16_1, var_5287_cast_fp16_1))[name = tensor<string, []>("aw_763_cast_fp16")];
            tensor<string, []> aw_765_equation_0 = const()[name = tensor<string, []>("aw_765_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_765_cast_fp16 = einsum(equation = aw_765_equation_0, values = (var_5309_cast_fp16_2, var_5287_cast_fp16_2))[name = tensor<string, []>("aw_765_cast_fp16")];
            tensor<string, []> aw_767_equation_0 = const()[name = tensor<string, []>("aw_767_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_767_cast_fp16 = einsum(equation = aw_767_equation_0, values = (var_5309_cast_fp16_3, var_5287_cast_fp16_3))[name = tensor<string, []>("aw_767_cast_fp16")];
            tensor<string, []> aw_769_equation_0 = const()[name = tensor<string, []>("aw_769_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_769_cast_fp16 = einsum(equation = aw_769_equation_0, values = (var_5309_cast_fp16_4, var_5287_cast_fp16_4))[name = tensor<string, []>("aw_769_cast_fp16")];
            tensor<string, []> aw_771_equation_0 = const()[name = tensor<string, []>("aw_771_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_771_cast_fp16 = einsum(equation = aw_771_equation_0, values = (var_5309_cast_fp16_5, var_5287_cast_fp16_5))[name = tensor<string, []>("aw_771_cast_fp16")];
            tensor<string, []> aw_773_equation_0 = const()[name = tensor<string, []>("aw_773_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_773_cast_fp16 = einsum(equation = aw_773_equation_0, values = (var_5309_cast_fp16_6, var_5287_cast_fp16_6))[name = tensor<string, []>("aw_773_cast_fp16")];
            tensor<string, []> aw_775_equation_0 = const()[name = tensor<string, []>("aw_775_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_775_cast_fp16 = einsum(equation = aw_775_equation_0, values = (var_5309_cast_fp16_7, var_5287_cast_fp16_7))[name = tensor<string, []>("aw_775_cast_fp16")];
            tensor<string, []> aw_777_equation_0 = const()[name = tensor<string, []>("aw_777_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_777_cast_fp16 = einsum(equation = aw_777_equation_0, values = (var_5309_cast_fp16_8, var_5287_cast_fp16_8))[name = tensor<string, []>("aw_777_cast_fp16")];
            tensor<string, []> aw_779_equation_0 = const()[name = tensor<string, []>("aw_779_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_779_cast_fp16 = einsum(equation = aw_779_equation_0, values = (var_5309_cast_fp16_9, var_5287_cast_fp16_9))[name = tensor<string, []>("aw_779_cast_fp16")];
            tensor<string, []> aw_781_equation_0 = const()[name = tensor<string, []>("aw_781_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_781_cast_fp16 = einsum(equation = aw_781_equation_0, values = (var_5309_cast_fp16_10, var_5287_cast_fp16_10))[name = tensor<string, []>("aw_781_cast_fp16")];
            tensor<string, []> aw_783_equation_0 = const()[name = tensor<string, []>("aw_783_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_783_cast_fp16 = einsum(equation = aw_783_equation_0, values = (var_5309_cast_fp16_11, var_5287_cast_fp16_11))[name = tensor<string, []>("aw_783_cast_fp16")];
            tensor<string, []> aw_785_equation_0 = const()[name = tensor<string, []>("aw_785_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_785_cast_fp16 = einsum(equation = aw_785_equation_0, values = (var_5309_cast_fp16_12, var_5287_cast_fp16_12))[name = tensor<string, []>("aw_785_cast_fp16")];
            tensor<string, []> aw_787_equation_0 = const()[name = tensor<string, []>("aw_787_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_787_cast_fp16 = einsum(equation = aw_787_equation_0, values = (var_5309_cast_fp16_13, var_5287_cast_fp16_13))[name = tensor<string, []>("aw_787_cast_fp16")];
            tensor<string, []> aw_789_equation_0 = const()[name = tensor<string, []>("aw_789_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_789_cast_fp16 = einsum(equation = aw_789_equation_0, values = (var_5309_cast_fp16_14, var_5287_cast_fp16_14))[name = tensor<string, []>("aw_789_cast_fp16")];
            tensor<string, []> aw_791_equation_0 = const()[name = tensor<string, []>("aw_791_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_791_cast_fp16 = einsum(equation = aw_791_equation_0, values = (var_5309_cast_fp16_15, var_5287_cast_fp16_15))[name = tensor<string, []>("aw_791_cast_fp16")];
            tensor<string, []> aw_793_equation_0 = const()[name = tensor<string, []>("aw_793_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_793_cast_fp16 = einsum(equation = aw_793_equation_0, values = (var_5309_cast_fp16_16, var_5287_cast_fp16_16))[name = tensor<string, []>("aw_793_cast_fp16")];
            tensor<string, []> aw_795_equation_0 = const()[name = tensor<string, []>("aw_795_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_795_cast_fp16 = einsum(equation = aw_795_equation_0, values = (var_5309_cast_fp16_17, var_5287_cast_fp16_17))[name = tensor<string, []>("aw_795_cast_fp16")];
            tensor<string, []> aw_797_equation_0 = const()[name = tensor<string, []>("aw_797_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_797_cast_fp16 = einsum(equation = aw_797_equation_0, values = (var_5309_cast_fp16_18, var_5287_cast_fp16_18))[name = tensor<string, []>("aw_797_cast_fp16")];
            tensor<string, []> aw_799_equation_0 = const()[name = tensor<string, []>("aw_799_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_799_cast_fp16 = einsum(equation = aw_799_equation_0, values = (var_5309_cast_fp16_19, var_5287_cast_fp16_19))[name = tensor<string, []>("aw_799_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5391_cast_fp16 = softmax(axis = var_5235, x = aw_761_cast_fp16)[name = tensor<string, []>("op_5391_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5392_cast_fp16 = softmax(axis = var_5235, x = aw_763_cast_fp16)[name = tensor<string, []>("op_5392_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5393_cast_fp16 = softmax(axis = var_5235, x = aw_765_cast_fp16)[name = tensor<string, []>("op_5393_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5394_cast_fp16 = softmax(axis = var_5235, x = aw_767_cast_fp16)[name = tensor<string, []>("op_5394_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5395_cast_fp16 = softmax(axis = var_5235, x = aw_769_cast_fp16)[name = tensor<string, []>("op_5395_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5396_cast_fp16 = softmax(axis = var_5235, x = aw_771_cast_fp16)[name = tensor<string, []>("op_5396_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5397_cast_fp16 = softmax(axis = var_5235, x = aw_773_cast_fp16)[name = tensor<string, []>("op_5397_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5398_cast_fp16 = softmax(axis = var_5235, x = aw_775_cast_fp16)[name = tensor<string, []>("op_5398_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5399_cast_fp16 = softmax(axis = var_5235, x = aw_777_cast_fp16)[name = tensor<string, []>("op_5399_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5400_cast_fp16 = softmax(axis = var_5235, x = aw_779_cast_fp16)[name = tensor<string, []>("op_5400_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5401_cast_fp16 = softmax(axis = var_5235, x = aw_781_cast_fp16)[name = tensor<string, []>("op_5401_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5402_cast_fp16 = softmax(axis = var_5235, x = aw_783_cast_fp16)[name = tensor<string, []>("op_5402_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5403_cast_fp16 = softmax(axis = var_5235, x = aw_785_cast_fp16)[name = tensor<string, []>("op_5403_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5404_cast_fp16 = softmax(axis = var_5235, x = aw_787_cast_fp16)[name = tensor<string, []>("op_5404_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5405_cast_fp16 = softmax(axis = var_5235, x = aw_789_cast_fp16)[name = tensor<string, []>("op_5405_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5406_cast_fp16 = softmax(axis = var_5235, x = aw_791_cast_fp16)[name = tensor<string, []>("op_5406_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5407_cast_fp16 = softmax(axis = var_5235, x = aw_793_cast_fp16)[name = tensor<string, []>("op_5407_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5408_cast_fp16 = softmax(axis = var_5235, x = aw_795_cast_fp16)[name = tensor<string, []>("op_5408_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5409_cast_fp16 = softmax(axis = var_5235, x = aw_797_cast_fp16)[name = tensor<string, []>("op_5409_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5410_cast_fp16 = softmax(axis = var_5235, x = aw_799_cast_fp16)[name = tensor<string, []>("op_5410_cast_fp16")];
            tensor<string, []> var_5412_equation_0 = const()[name = tensor<string, []>("op_5412_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5412_cast_fp16 = einsum(equation = var_5412_equation_0, values = (var_5330_cast_fp16_0, var_5391_cast_fp16))[name = tensor<string, []>("op_5412_cast_fp16")];
            tensor<string, []> var_5414_equation_0 = const()[name = tensor<string, []>("op_5414_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5414_cast_fp16 = einsum(equation = var_5414_equation_0, values = (var_5330_cast_fp16_1, var_5392_cast_fp16))[name = tensor<string, []>("op_5414_cast_fp16")];
            tensor<string, []> var_5416_equation_0 = const()[name = tensor<string, []>("op_5416_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5416_cast_fp16 = einsum(equation = var_5416_equation_0, values = (var_5330_cast_fp16_2, var_5393_cast_fp16))[name = tensor<string, []>("op_5416_cast_fp16")];
            tensor<string, []> var_5418_equation_0 = const()[name = tensor<string, []>("op_5418_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5418_cast_fp16 = einsum(equation = var_5418_equation_0, values = (var_5330_cast_fp16_3, var_5394_cast_fp16))[name = tensor<string, []>("op_5418_cast_fp16")];
            tensor<string, []> var_5420_equation_0 = const()[name = tensor<string, []>("op_5420_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5420_cast_fp16 = einsum(equation = var_5420_equation_0, values = (var_5330_cast_fp16_4, var_5395_cast_fp16))[name = tensor<string, []>("op_5420_cast_fp16")];
            tensor<string, []> var_5422_equation_0 = const()[name = tensor<string, []>("op_5422_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5422_cast_fp16 = einsum(equation = var_5422_equation_0, values = (var_5330_cast_fp16_5, var_5396_cast_fp16))[name = tensor<string, []>("op_5422_cast_fp16")];
            tensor<string, []> var_5424_equation_0 = const()[name = tensor<string, []>("op_5424_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5424_cast_fp16 = einsum(equation = var_5424_equation_0, values = (var_5330_cast_fp16_6, var_5397_cast_fp16))[name = tensor<string, []>("op_5424_cast_fp16")];
            tensor<string, []> var_5426_equation_0 = const()[name = tensor<string, []>("op_5426_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5426_cast_fp16 = einsum(equation = var_5426_equation_0, values = (var_5330_cast_fp16_7, var_5398_cast_fp16))[name = tensor<string, []>("op_5426_cast_fp16")];
            tensor<string, []> var_5428_equation_0 = const()[name = tensor<string, []>("op_5428_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5428_cast_fp16 = einsum(equation = var_5428_equation_0, values = (var_5330_cast_fp16_8, var_5399_cast_fp16))[name = tensor<string, []>("op_5428_cast_fp16")];
            tensor<string, []> var_5430_equation_0 = const()[name = tensor<string, []>("op_5430_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5430_cast_fp16 = einsum(equation = var_5430_equation_0, values = (var_5330_cast_fp16_9, var_5400_cast_fp16))[name = tensor<string, []>("op_5430_cast_fp16")];
            tensor<string, []> var_5432_equation_0 = const()[name = tensor<string, []>("op_5432_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5432_cast_fp16 = einsum(equation = var_5432_equation_0, values = (var_5330_cast_fp16_10, var_5401_cast_fp16))[name = tensor<string, []>("op_5432_cast_fp16")];
            tensor<string, []> var_5434_equation_0 = const()[name = tensor<string, []>("op_5434_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5434_cast_fp16 = einsum(equation = var_5434_equation_0, values = (var_5330_cast_fp16_11, var_5402_cast_fp16))[name = tensor<string, []>("op_5434_cast_fp16")];
            tensor<string, []> var_5436_equation_0 = const()[name = tensor<string, []>("op_5436_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5436_cast_fp16 = einsum(equation = var_5436_equation_0, values = (var_5330_cast_fp16_12, var_5403_cast_fp16))[name = tensor<string, []>("op_5436_cast_fp16")];
            tensor<string, []> var_5438_equation_0 = const()[name = tensor<string, []>("op_5438_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5438_cast_fp16 = einsum(equation = var_5438_equation_0, values = (var_5330_cast_fp16_13, var_5404_cast_fp16))[name = tensor<string, []>("op_5438_cast_fp16")];
            tensor<string, []> var_5440_equation_0 = const()[name = tensor<string, []>("op_5440_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5440_cast_fp16 = einsum(equation = var_5440_equation_0, values = (var_5330_cast_fp16_14, var_5405_cast_fp16))[name = tensor<string, []>("op_5440_cast_fp16")];
            tensor<string, []> var_5442_equation_0 = const()[name = tensor<string, []>("op_5442_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5442_cast_fp16 = einsum(equation = var_5442_equation_0, values = (var_5330_cast_fp16_15, var_5406_cast_fp16))[name = tensor<string, []>("op_5442_cast_fp16")];
            tensor<string, []> var_5444_equation_0 = const()[name = tensor<string, []>("op_5444_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5444_cast_fp16 = einsum(equation = var_5444_equation_0, values = (var_5330_cast_fp16_16, var_5407_cast_fp16))[name = tensor<string, []>("op_5444_cast_fp16")];
            tensor<string, []> var_5446_equation_0 = const()[name = tensor<string, []>("op_5446_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5446_cast_fp16 = einsum(equation = var_5446_equation_0, values = (var_5330_cast_fp16_17, var_5408_cast_fp16))[name = tensor<string, []>("op_5446_cast_fp16")];
            tensor<string, []> var_5448_equation_0 = const()[name = tensor<string, []>("op_5448_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5448_cast_fp16 = einsum(equation = var_5448_equation_0, values = (var_5330_cast_fp16_18, var_5409_cast_fp16))[name = tensor<string, []>("op_5448_cast_fp16")];
            tensor<string, []> var_5450_equation_0 = const()[name = tensor<string, []>("op_5450_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5450_cast_fp16 = einsum(equation = var_5450_equation_0, values = (var_5330_cast_fp16_19, var_5410_cast_fp16))[name = tensor<string, []>("op_5450_cast_fp16")];
            tensor<bool, []> input_195_interleave_0 = const()[name = tensor<string, []>("input_195_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_195_cast_fp16 = concat(axis = var_5235, interleave = input_195_interleave_0, values = (var_5412_cast_fp16, var_5414_cast_fp16, var_5416_cast_fp16, var_5418_cast_fp16, var_5420_cast_fp16, var_5422_cast_fp16, var_5424_cast_fp16, var_5426_cast_fp16, var_5428_cast_fp16, var_5430_cast_fp16, var_5432_cast_fp16, var_5434_cast_fp16, var_5436_cast_fp16, var_5438_cast_fp16, var_5440_cast_fp16, var_5442_cast_fp16, var_5444_cast_fp16, var_5446_cast_fp16, var_5448_cast_fp16, var_5450_cast_fp16))[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<string, []> var_5459_pad_type_0 = const()[name = tensor<string, []>("op_5459_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5459_strides_0 = const()[name = tensor<string, []>("op_5459_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5459_pad_0 = const()[name = tensor<string, []>("op_5459_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5459_dilations_0 = const()[name = tensor<string, []>("op_5459_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5459_groups_0 = const()[name = tensor<string, []>("op_5459_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_19_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772212352)))];
            tensor<fp16, [1280]> blocks_19_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775489216)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5459_cast_fp16 = conv(bias = blocks_19_attn_out_bias_to_fp16, dilations = var_5459_dilations_0, groups = var_5459_groups_0, pad = var_5459_pad_0, pad_type = var_5459_pad_type_0, strides = var_5459_strides_0, weight = blocks_19_attn_out_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_5459_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_79_cast_fp16 = add(x = inputs_77_cast_fp16, y = var_5459_cast_fp16)[name = tensor<string, []>("inputs_79_cast_fp16")];
            tensor<int32, [1]> input_197_axes_0 = const()[name = tensor<string, []>("input_197_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_197_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_197_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775491840)))];
            tensor<fp16, [1280]> input_197_beta_0_to_fp16 = const()[name = tensor<string, []>("input_197_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775494464)))];
            tensor<fp16, []> var_5469_to_fp16 = const()[name = tensor<string, []>("op_5469_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_197_cast_fp16 = layer_norm(axes = input_197_axes_0, beta = input_197_beta_0_to_fp16, epsilon = var_5469_to_fp16, gamma = input_197_gamma_0_to_fp16, x = inputs_79_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<string, []> input_199_pad_type_0 = const()[name = tensor<string, []>("input_199_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_199_strides_0 = const()[name = tensor<string, []>("input_199_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_199_pad_0 = const()[name = tensor<string, []>("input_199_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_199_dilations_0 = const()[name = tensor<string, []>("input_199_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_199_groups_0 = const()[name = tensor<string, []>("input_199_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_19_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775497088)))];
            tensor<fp16, [5120]> blocks_19_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(788604352)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_199_cast_fp16 = conv(bias = blocks_19_mlp_0_bias_to_fp16, dilations = input_199_dilations_0, groups = input_199_groups_0, pad = input_199_pad_0, pad_type = input_199_pad_type_0, strides = input_199_strides_0, weight = blocks_19_mlp_0_weight_to_fp16, x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<string, []> input_201_mode_0 = const()[name = tensor<string, []>("input_201_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_201_cast_fp16 = gelu(mode = input_201_mode_0, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<string, []> var_5495_pad_type_0 = const()[name = tensor<string, []>("op_5495_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5495_strides_0 = const()[name = tensor<string, []>("op_5495_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5495_pad_0 = const()[name = tensor<string, []>("op_5495_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5495_dilations_0 = const()[name = tensor<string, []>("op_5495_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5495_groups_0 = const()[name = tensor<string, []>("op_5495_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_19_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(788614656)))];
            tensor<fp16, [1280]> blocks_19_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801721920)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5495_cast_fp16 = conv(bias = blocks_19_mlp_2_bias_to_fp16, dilations = var_5495_dilations_0, groups = var_5495_groups_0, pad = var_5495_pad_0, pad_type = var_5495_pad_type_0, strides = var_5495_strides_0, weight = blocks_19_mlp_2_weight_to_fp16, x = input_201_cast_fp16)[name = tensor<string, []>("op_5495_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_81_cast_fp16 = add(x = inputs_79_cast_fp16, y = var_5495_cast_fp16)[name = tensor<string, []>("inputs_81_cast_fp16")];
            tensor<int32, []> var_5504 = const()[name = tensor<string, []>("op_5504"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_203_axes_0 = const()[name = tensor<string, []>("input_203_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_203_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_203_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801724544)))];
            tensor<fp16, [1280]> input_203_beta_0_to_fp16 = const()[name = tensor<string, []>("input_203_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801727168)))];
            tensor<fp16, []> var_5520_to_fp16 = const()[name = tensor<string, []>("op_5520_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_203_cast_fp16 = layer_norm(axes = input_203_axes_0, beta = input_203_beta_0_to_fp16, epsilon = var_5520_to_fp16, gamma = input_203_gamma_0_to_fp16, x = inputs_81_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<string, []> q_41_pad_type_0 = const()[name = tensor<string, []>("q_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_41_strides_0 = const()[name = tensor<string, []>("q_41_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_41_pad_0 = const()[name = tensor<string, []>("q_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_41_dilations_0 = const()[name = tensor<string, []>("q_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_41_groups_0 = const()[name = tensor<string, []>("q_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_5555_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5555_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801729792)))];
            tensor<fp16, [1280]> var_5555_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5555_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805006656)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5555_cast_fp16 = conv(bias = var_5555_bias_0_to_fp16, dilations = q_41_dilations_0, groups = q_41_groups_0, pad = q_41_pad_0, pad_type = q_41_pad_type_0, strides = q_41_strides_0, weight = var_5555_weight_0_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_5555_cast_fp16")];
            tensor<string, []> k_41_pad_type_0 = const()[name = tensor<string, []>("k_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_41_strides_0 = const()[name = tensor<string, []>("k_41_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_41_pad_0 = const()[name = tensor<string, []>("k_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_41_dilations_0 = const()[name = tensor<string, []>("k_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_41_groups_0 = const()[name = tensor<string, []>("k_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_20_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805009280)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_41_cast_fp16 = conv(dilations = k_41_dilations_0, groups = k_41_groups_0, pad = k_41_pad_0, pad_type = k_41_pad_type_0, strides = k_41_strides_0, weight = blocks_20_attn_key_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("k_41_cast_fp16")];
            tensor<string, []> var_5553_pad_type_0 = const()[name = tensor<string, []>("op_5553_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5553_strides_0 = const()[name = tensor<string, []>("op_5553_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5553_pad_0 = const()[name = tensor<string, []>("op_5553_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5553_dilations_0 = const()[name = tensor<string, []>("op_5553_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5553_groups_0 = const()[name = tensor<string, []>("op_5553_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_20_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808286144)))];
            tensor<fp16, [1280]> blocks_20_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811563008)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5553_cast_fp16 = conv(bias = blocks_20_attn_value_bias_to_fp16, dilations = var_5553_dilations_0, groups = var_5553_groups_0, pad = var_5553_pad_0, pad_type = var_5553_pad_type_0, strides = var_5553_strides_0, weight = blocks_20_attn_value_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_5553_cast_fp16")];
            tensor<int32, [20]> tile_60 = const()[name = tensor<string, []>("tile_60"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5556_axis_0 = const()[name = tensor<string, []>("op_5556_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5556_cast_fp16_19 = split(axis = var_5556_axis_0, split_sizes = tile_60, x = var_5555_cast_fp16)[name = tensor<string, []>("op_5556_cast_fp16")];
            tensor<int32, [4]> var_5577_perm_0 = const()[name = tensor<string, []>("op_5577_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_61 = const()[name = tensor<string, []>("tile_61"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5578_axis_0 = const()[name = tensor<string, []>("op_5578_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_5577_cast_fp16 = transpose(perm = var_5577_perm_0, x = k_41_cast_fp16)[name = tensor<string, []>("transpose_12")];
            tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_5578_cast_fp16_19 = split(axis = var_5578_axis_0, split_sizes = tile_61, x = var_5577_cast_fp16)[name = tensor<string, []>("op_5578_cast_fp16")];
            tensor<int32, [20]> tile_62 = const()[name = tensor<string, []>("tile_62"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5599_axis_0 = const()[name = tensor<string, []>("op_5599_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5599_cast_fp16_19 = split(axis = var_5599_axis_0, split_sizes = tile_62, x = var_5553_cast_fp16)[name = tensor<string, []>("op_5599_cast_fp16")];
            tensor<string, []> aw_801_equation_0 = const()[name = tensor<string, []>("aw_801_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_801_cast_fp16 = einsum(equation = aw_801_equation_0, values = (var_5578_cast_fp16_0, var_5556_cast_fp16_0))[name = tensor<string, []>("aw_801_cast_fp16")];
            tensor<string, []> aw_803_equation_0 = const()[name = tensor<string, []>("aw_803_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_803_cast_fp16 = einsum(equation = aw_803_equation_0, values = (var_5578_cast_fp16_1, var_5556_cast_fp16_1))[name = tensor<string, []>("aw_803_cast_fp16")];
            tensor<string, []> aw_805_equation_0 = const()[name = tensor<string, []>("aw_805_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_805_cast_fp16 = einsum(equation = aw_805_equation_0, values = (var_5578_cast_fp16_2, var_5556_cast_fp16_2))[name = tensor<string, []>("aw_805_cast_fp16")];
            tensor<string, []> aw_807_equation_0 = const()[name = tensor<string, []>("aw_807_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_807_cast_fp16 = einsum(equation = aw_807_equation_0, values = (var_5578_cast_fp16_3, var_5556_cast_fp16_3))[name = tensor<string, []>("aw_807_cast_fp16")];
            tensor<string, []> aw_809_equation_0 = const()[name = tensor<string, []>("aw_809_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_809_cast_fp16 = einsum(equation = aw_809_equation_0, values = (var_5578_cast_fp16_4, var_5556_cast_fp16_4))[name = tensor<string, []>("aw_809_cast_fp16")];
            tensor<string, []> aw_811_equation_0 = const()[name = tensor<string, []>("aw_811_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_811_cast_fp16 = einsum(equation = aw_811_equation_0, values = (var_5578_cast_fp16_5, var_5556_cast_fp16_5))[name = tensor<string, []>("aw_811_cast_fp16")];
            tensor<string, []> aw_813_equation_0 = const()[name = tensor<string, []>("aw_813_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_813_cast_fp16 = einsum(equation = aw_813_equation_0, values = (var_5578_cast_fp16_6, var_5556_cast_fp16_6))[name = tensor<string, []>("aw_813_cast_fp16")];
            tensor<string, []> aw_815_equation_0 = const()[name = tensor<string, []>("aw_815_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_815_cast_fp16 = einsum(equation = aw_815_equation_0, values = (var_5578_cast_fp16_7, var_5556_cast_fp16_7))[name = tensor<string, []>("aw_815_cast_fp16")];
            tensor<string, []> aw_817_equation_0 = const()[name = tensor<string, []>("aw_817_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_817_cast_fp16 = einsum(equation = aw_817_equation_0, values = (var_5578_cast_fp16_8, var_5556_cast_fp16_8))[name = tensor<string, []>("aw_817_cast_fp16")];
            tensor<string, []> aw_819_equation_0 = const()[name = tensor<string, []>("aw_819_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_819_cast_fp16 = einsum(equation = aw_819_equation_0, values = (var_5578_cast_fp16_9, var_5556_cast_fp16_9))[name = tensor<string, []>("aw_819_cast_fp16")];
            tensor<string, []> aw_821_equation_0 = const()[name = tensor<string, []>("aw_821_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_821_cast_fp16 = einsum(equation = aw_821_equation_0, values = (var_5578_cast_fp16_10, var_5556_cast_fp16_10))[name = tensor<string, []>("aw_821_cast_fp16")];
            tensor<string, []> aw_823_equation_0 = const()[name = tensor<string, []>("aw_823_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_823_cast_fp16 = einsum(equation = aw_823_equation_0, values = (var_5578_cast_fp16_11, var_5556_cast_fp16_11))[name = tensor<string, []>("aw_823_cast_fp16")];
            tensor<string, []> aw_825_equation_0 = const()[name = tensor<string, []>("aw_825_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_825_cast_fp16 = einsum(equation = aw_825_equation_0, values = (var_5578_cast_fp16_12, var_5556_cast_fp16_12))[name = tensor<string, []>("aw_825_cast_fp16")];
            tensor<string, []> aw_827_equation_0 = const()[name = tensor<string, []>("aw_827_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_827_cast_fp16 = einsum(equation = aw_827_equation_0, values = (var_5578_cast_fp16_13, var_5556_cast_fp16_13))[name = tensor<string, []>("aw_827_cast_fp16")];
            tensor<string, []> aw_829_equation_0 = const()[name = tensor<string, []>("aw_829_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_829_cast_fp16 = einsum(equation = aw_829_equation_0, values = (var_5578_cast_fp16_14, var_5556_cast_fp16_14))[name = tensor<string, []>("aw_829_cast_fp16")];
            tensor<string, []> aw_831_equation_0 = const()[name = tensor<string, []>("aw_831_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_831_cast_fp16 = einsum(equation = aw_831_equation_0, values = (var_5578_cast_fp16_15, var_5556_cast_fp16_15))[name = tensor<string, []>("aw_831_cast_fp16")];
            tensor<string, []> aw_833_equation_0 = const()[name = tensor<string, []>("aw_833_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_833_cast_fp16 = einsum(equation = aw_833_equation_0, values = (var_5578_cast_fp16_16, var_5556_cast_fp16_16))[name = tensor<string, []>("aw_833_cast_fp16")];
            tensor<string, []> aw_835_equation_0 = const()[name = tensor<string, []>("aw_835_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_835_cast_fp16 = einsum(equation = aw_835_equation_0, values = (var_5578_cast_fp16_17, var_5556_cast_fp16_17))[name = tensor<string, []>("aw_835_cast_fp16")];
            tensor<string, []> aw_837_equation_0 = const()[name = tensor<string, []>("aw_837_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_837_cast_fp16 = einsum(equation = aw_837_equation_0, values = (var_5578_cast_fp16_18, var_5556_cast_fp16_18))[name = tensor<string, []>("aw_837_cast_fp16")];
            tensor<string, []> aw_839_equation_0 = const()[name = tensor<string, []>("aw_839_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_839_cast_fp16 = einsum(equation = aw_839_equation_0, values = (var_5578_cast_fp16_19, var_5556_cast_fp16_19))[name = tensor<string, []>("aw_839_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5660_cast_fp16 = softmax(axis = var_5504, x = aw_801_cast_fp16)[name = tensor<string, []>("op_5660_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5661_cast_fp16 = softmax(axis = var_5504, x = aw_803_cast_fp16)[name = tensor<string, []>("op_5661_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5662_cast_fp16 = softmax(axis = var_5504, x = aw_805_cast_fp16)[name = tensor<string, []>("op_5662_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5663_cast_fp16 = softmax(axis = var_5504, x = aw_807_cast_fp16)[name = tensor<string, []>("op_5663_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5664_cast_fp16 = softmax(axis = var_5504, x = aw_809_cast_fp16)[name = tensor<string, []>("op_5664_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5665_cast_fp16 = softmax(axis = var_5504, x = aw_811_cast_fp16)[name = tensor<string, []>("op_5665_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5666_cast_fp16 = softmax(axis = var_5504, x = aw_813_cast_fp16)[name = tensor<string, []>("op_5666_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5667_cast_fp16 = softmax(axis = var_5504, x = aw_815_cast_fp16)[name = tensor<string, []>("op_5667_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5668_cast_fp16 = softmax(axis = var_5504, x = aw_817_cast_fp16)[name = tensor<string, []>("op_5668_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5669_cast_fp16 = softmax(axis = var_5504, x = aw_819_cast_fp16)[name = tensor<string, []>("op_5669_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5670_cast_fp16 = softmax(axis = var_5504, x = aw_821_cast_fp16)[name = tensor<string, []>("op_5670_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5671_cast_fp16 = softmax(axis = var_5504, x = aw_823_cast_fp16)[name = tensor<string, []>("op_5671_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5672_cast_fp16 = softmax(axis = var_5504, x = aw_825_cast_fp16)[name = tensor<string, []>("op_5672_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5673_cast_fp16 = softmax(axis = var_5504, x = aw_827_cast_fp16)[name = tensor<string, []>("op_5673_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5674_cast_fp16 = softmax(axis = var_5504, x = aw_829_cast_fp16)[name = tensor<string, []>("op_5674_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5675_cast_fp16 = softmax(axis = var_5504, x = aw_831_cast_fp16)[name = tensor<string, []>("op_5675_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5676_cast_fp16 = softmax(axis = var_5504, x = aw_833_cast_fp16)[name = tensor<string, []>("op_5676_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5677_cast_fp16 = softmax(axis = var_5504, x = aw_835_cast_fp16)[name = tensor<string, []>("op_5677_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5678_cast_fp16 = softmax(axis = var_5504, x = aw_837_cast_fp16)[name = tensor<string, []>("op_5678_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5679_cast_fp16 = softmax(axis = var_5504, x = aw_839_cast_fp16)[name = tensor<string, []>("op_5679_cast_fp16")];
            tensor<string, []> var_5681_equation_0 = const()[name = tensor<string, []>("op_5681_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5681_cast_fp16 = einsum(equation = var_5681_equation_0, values = (var_5599_cast_fp16_0, var_5660_cast_fp16))[name = tensor<string, []>("op_5681_cast_fp16")];
            tensor<string, []> var_5683_equation_0 = const()[name = tensor<string, []>("op_5683_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5683_cast_fp16 = einsum(equation = var_5683_equation_0, values = (var_5599_cast_fp16_1, var_5661_cast_fp16))[name = tensor<string, []>("op_5683_cast_fp16")];
            tensor<string, []> var_5685_equation_0 = const()[name = tensor<string, []>("op_5685_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5685_cast_fp16 = einsum(equation = var_5685_equation_0, values = (var_5599_cast_fp16_2, var_5662_cast_fp16))[name = tensor<string, []>("op_5685_cast_fp16")];
            tensor<string, []> var_5687_equation_0 = const()[name = tensor<string, []>("op_5687_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5687_cast_fp16 = einsum(equation = var_5687_equation_0, values = (var_5599_cast_fp16_3, var_5663_cast_fp16))[name = tensor<string, []>("op_5687_cast_fp16")];
            tensor<string, []> var_5689_equation_0 = const()[name = tensor<string, []>("op_5689_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5689_cast_fp16 = einsum(equation = var_5689_equation_0, values = (var_5599_cast_fp16_4, var_5664_cast_fp16))[name = tensor<string, []>("op_5689_cast_fp16")];
            tensor<string, []> var_5691_equation_0 = const()[name = tensor<string, []>("op_5691_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5691_cast_fp16 = einsum(equation = var_5691_equation_0, values = (var_5599_cast_fp16_5, var_5665_cast_fp16))[name = tensor<string, []>("op_5691_cast_fp16")];
            tensor<string, []> var_5693_equation_0 = const()[name = tensor<string, []>("op_5693_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5693_cast_fp16 = einsum(equation = var_5693_equation_0, values = (var_5599_cast_fp16_6, var_5666_cast_fp16))[name = tensor<string, []>("op_5693_cast_fp16")];
            tensor<string, []> var_5695_equation_0 = const()[name = tensor<string, []>("op_5695_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5695_cast_fp16 = einsum(equation = var_5695_equation_0, values = (var_5599_cast_fp16_7, var_5667_cast_fp16))[name = tensor<string, []>("op_5695_cast_fp16")];
            tensor<string, []> var_5697_equation_0 = const()[name = tensor<string, []>("op_5697_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5697_cast_fp16 = einsum(equation = var_5697_equation_0, values = (var_5599_cast_fp16_8, var_5668_cast_fp16))[name = tensor<string, []>("op_5697_cast_fp16")];
            tensor<string, []> var_5699_equation_0 = const()[name = tensor<string, []>("op_5699_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5699_cast_fp16 = einsum(equation = var_5699_equation_0, values = (var_5599_cast_fp16_9, var_5669_cast_fp16))[name = tensor<string, []>("op_5699_cast_fp16")];
            tensor<string, []> var_5701_equation_0 = const()[name = tensor<string, []>("op_5701_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5701_cast_fp16 = einsum(equation = var_5701_equation_0, values = (var_5599_cast_fp16_10, var_5670_cast_fp16))[name = tensor<string, []>("op_5701_cast_fp16")];
            tensor<string, []> var_5703_equation_0 = const()[name = tensor<string, []>("op_5703_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5703_cast_fp16 = einsum(equation = var_5703_equation_0, values = (var_5599_cast_fp16_11, var_5671_cast_fp16))[name = tensor<string, []>("op_5703_cast_fp16")];
            tensor<string, []> var_5705_equation_0 = const()[name = tensor<string, []>("op_5705_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5705_cast_fp16 = einsum(equation = var_5705_equation_0, values = (var_5599_cast_fp16_12, var_5672_cast_fp16))[name = tensor<string, []>("op_5705_cast_fp16")];
            tensor<string, []> var_5707_equation_0 = const()[name = tensor<string, []>("op_5707_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5707_cast_fp16 = einsum(equation = var_5707_equation_0, values = (var_5599_cast_fp16_13, var_5673_cast_fp16))[name = tensor<string, []>("op_5707_cast_fp16")];
            tensor<string, []> var_5709_equation_0 = const()[name = tensor<string, []>("op_5709_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5709_cast_fp16 = einsum(equation = var_5709_equation_0, values = (var_5599_cast_fp16_14, var_5674_cast_fp16))[name = tensor<string, []>("op_5709_cast_fp16")];
            tensor<string, []> var_5711_equation_0 = const()[name = tensor<string, []>("op_5711_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5711_cast_fp16 = einsum(equation = var_5711_equation_0, values = (var_5599_cast_fp16_15, var_5675_cast_fp16))[name = tensor<string, []>("op_5711_cast_fp16")];
            tensor<string, []> var_5713_equation_0 = const()[name = tensor<string, []>("op_5713_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5713_cast_fp16 = einsum(equation = var_5713_equation_0, values = (var_5599_cast_fp16_16, var_5676_cast_fp16))[name = tensor<string, []>("op_5713_cast_fp16")];
            tensor<string, []> var_5715_equation_0 = const()[name = tensor<string, []>("op_5715_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5715_cast_fp16 = einsum(equation = var_5715_equation_0, values = (var_5599_cast_fp16_17, var_5677_cast_fp16))[name = tensor<string, []>("op_5715_cast_fp16")];
            tensor<string, []> var_5717_equation_0 = const()[name = tensor<string, []>("op_5717_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5717_cast_fp16 = einsum(equation = var_5717_equation_0, values = (var_5599_cast_fp16_18, var_5678_cast_fp16))[name = tensor<string, []>("op_5717_cast_fp16")];
            tensor<string, []> var_5719_equation_0 = const()[name = tensor<string, []>("op_5719_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5719_cast_fp16 = einsum(equation = var_5719_equation_0, values = (var_5599_cast_fp16_19, var_5679_cast_fp16))[name = tensor<string, []>("op_5719_cast_fp16")];
            tensor<bool, []> input_205_interleave_0 = const()[name = tensor<string, []>("input_205_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_205_cast_fp16 = concat(axis = var_5504, interleave = input_205_interleave_0, values = (var_5681_cast_fp16, var_5683_cast_fp16, var_5685_cast_fp16, var_5687_cast_fp16, var_5689_cast_fp16, var_5691_cast_fp16, var_5693_cast_fp16, var_5695_cast_fp16, var_5697_cast_fp16, var_5699_cast_fp16, var_5701_cast_fp16, var_5703_cast_fp16, var_5705_cast_fp16, var_5707_cast_fp16, var_5709_cast_fp16, var_5711_cast_fp16, var_5713_cast_fp16, var_5715_cast_fp16, var_5717_cast_fp16, var_5719_cast_fp16))[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<string, []> var_5728_pad_type_0 = const()[name = tensor<string, []>("op_5728_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5728_strides_0 = const()[name = tensor<string, []>("op_5728_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5728_pad_0 = const()[name = tensor<string, []>("op_5728_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5728_dilations_0 = const()[name = tensor<string, []>("op_5728_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5728_groups_0 = const()[name = tensor<string, []>("op_5728_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_20_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811565632)))];
            tensor<fp16, [1280]> blocks_20_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814842496)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5728_cast_fp16 = conv(bias = blocks_20_attn_out_bias_to_fp16, dilations = var_5728_dilations_0, groups = var_5728_groups_0, pad = var_5728_pad_0, pad_type = var_5728_pad_type_0, strides = var_5728_strides_0, weight = blocks_20_attn_out_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("op_5728_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_83_cast_fp16 = add(x = inputs_81_cast_fp16, y = var_5728_cast_fp16)[name = tensor<string, []>("inputs_83_cast_fp16")];
            tensor<int32, [1]> input_207_axes_0 = const()[name = tensor<string, []>("input_207_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_207_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_207_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814845120)))];
            tensor<fp16, [1280]> input_207_beta_0_to_fp16 = const()[name = tensor<string, []>("input_207_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814847744)))];
            tensor<fp16, []> var_5738_to_fp16 = const()[name = tensor<string, []>("op_5738_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_207_cast_fp16 = layer_norm(axes = input_207_axes_0, beta = input_207_beta_0_to_fp16, epsilon = var_5738_to_fp16, gamma = input_207_gamma_0_to_fp16, x = inputs_83_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_209_strides_0 = const()[name = tensor<string, []>("input_209_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_209_dilations_0 = const()[name = tensor<string, []>("input_209_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_209_groups_0 = const()[name = tensor<string, []>("input_209_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_20_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814850368)))];
            tensor<fp16, [5120]> blocks_20_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827957632)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_209_cast_fp16 = conv(bias = blocks_20_mlp_0_bias_to_fp16, dilations = input_209_dilations_0, groups = input_209_groups_0, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = input_209_strides_0, weight = blocks_20_mlp_0_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<string, []> input_211_mode_0 = const()[name = tensor<string, []>("input_211_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_211_cast_fp16 = gelu(mode = input_211_mode_0, x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<string, []> var_5764_pad_type_0 = const()[name = tensor<string, []>("op_5764_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5764_strides_0 = const()[name = tensor<string, []>("op_5764_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5764_pad_0 = const()[name = tensor<string, []>("op_5764_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5764_dilations_0 = const()[name = tensor<string, []>("op_5764_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5764_groups_0 = const()[name = tensor<string, []>("op_5764_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_20_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827967936)))];
            tensor<fp16, [1280]> blocks_20_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(841075200)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5764_cast_fp16 = conv(bias = blocks_20_mlp_2_bias_to_fp16, dilations = var_5764_dilations_0, groups = var_5764_groups_0, pad = var_5764_pad_0, pad_type = var_5764_pad_type_0, strides = var_5764_strides_0, weight = blocks_20_mlp_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_5764_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_85_cast_fp16 = add(x = inputs_83_cast_fp16, y = var_5764_cast_fp16)[name = tensor<string, []>("inputs_85_cast_fp16")];
            tensor<int32, []> var_5773 = const()[name = tensor<string, []>("op_5773"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_213_axes_0 = const()[name = tensor<string, []>("input_213_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_213_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_213_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(841077824)))];
            tensor<fp16, [1280]> input_213_beta_0_to_fp16 = const()[name = tensor<string, []>("input_213_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(841080448)))];
            tensor<fp16, []> var_5789_to_fp16 = const()[name = tensor<string, []>("op_5789_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_213_cast_fp16 = layer_norm(axes = input_213_axes_0, beta = input_213_beta_0_to_fp16, epsilon = var_5789_to_fp16, gamma = input_213_gamma_0_to_fp16, x = inputs_85_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<string, []> q_43_pad_type_0 = const()[name = tensor<string, []>("q_43_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_43_strides_0 = const()[name = tensor<string, []>("q_43_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_43_pad_0 = const()[name = tensor<string, []>("q_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_43_dilations_0 = const()[name = tensor<string, []>("q_43_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_43_groups_0 = const()[name = tensor<string, []>("q_43_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_5824_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5824_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(841083072)))];
            tensor<fp16, [1280]> var_5824_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5824_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(844359936)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5824_cast_fp16 = conv(bias = var_5824_bias_0_to_fp16, dilations = q_43_dilations_0, groups = q_43_groups_0, pad = q_43_pad_0, pad_type = q_43_pad_type_0, strides = q_43_strides_0, weight = var_5824_weight_0_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("op_5824_cast_fp16")];
            tensor<string, []> k_43_pad_type_0 = const()[name = tensor<string, []>("k_43_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_43_strides_0 = const()[name = tensor<string, []>("k_43_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_43_pad_0 = const()[name = tensor<string, []>("k_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_43_dilations_0 = const()[name = tensor<string, []>("k_43_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_43_groups_0 = const()[name = tensor<string, []>("k_43_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_21_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(844362560)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_43_cast_fp16 = conv(dilations = k_43_dilations_0, groups = k_43_groups_0, pad = k_43_pad_0, pad_type = k_43_pad_type_0, strides = k_43_strides_0, weight = blocks_21_attn_key_weight_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("k_43_cast_fp16")];
            tensor<string, []> var_5822_pad_type_0 = const()[name = tensor<string, []>("op_5822_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5822_strides_0 = const()[name = tensor<string, []>("op_5822_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5822_pad_0 = const()[name = tensor<string, []>("op_5822_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5822_dilations_0 = const()[name = tensor<string, []>("op_5822_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5822_groups_0 = const()[name = tensor<string, []>("op_5822_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_21_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(847639424)))];
            tensor<fp16, [1280]> blocks_21_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(850916288)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5822_cast_fp16 = conv(bias = blocks_21_attn_value_bias_to_fp16, dilations = var_5822_dilations_0, groups = var_5822_groups_0, pad = var_5822_pad_0, pad_type = var_5822_pad_type_0, strides = var_5822_strides_0, weight = blocks_21_attn_value_weight_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("op_5822_cast_fp16")];
            tensor<int32, [20]> tile_63 = const()[name = tensor<string, []>("tile_63"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5825_axis_0 = const()[name = tensor<string, []>("op_5825_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5825_cast_fp16_19 = split(axis = var_5825_axis_0, split_sizes = tile_63, x = var_5824_cast_fp16)[name = tensor<string, []>("op_5825_cast_fp16")];
            tensor<int32, [4]> var_5846_perm_0 = const()[name = tensor<string, []>("op_5846_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_64 = const()[name = tensor<string, []>("tile_64"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5847_axis_0 = const()[name = tensor<string, []>("op_5847_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_5846_cast_fp16 = transpose(perm = var_5846_perm_0, x = k_43_cast_fp16)[name = tensor<string, []>("transpose_11")];
            tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_5847_cast_fp16_19 = split(axis = var_5847_axis_0, split_sizes = tile_64, x = var_5846_cast_fp16)[name = tensor<string, []>("op_5847_cast_fp16")];
            tensor<int32, [20]> tile_65 = const()[name = tensor<string, []>("tile_65"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5868_axis_0 = const()[name = tensor<string, []>("op_5868_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_5868_cast_fp16_19 = split(axis = var_5868_axis_0, split_sizes = tile_65, x = var_5822_cast_fp16)[name = tensor<string, []>("op_5868_cast_fp16")];
            tensor<string, []> aw_841_equation_0 = const()[name = tensor<string, []>("aw_841_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_841_cast_fp16 = einsum(equation = aw_841_equation_0, values = (var_5847_cast_fp16_0, var_5825_cast_fp16_0))[name = tensor<string, []>("aw_841_cast_fp16")];
            tensor<string, []> aw_843_equation_0 = const()[name = tensor<string, []>("aw_843_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_843_cast_fp16 = einsum(equation = aw_843_equation_0, values = (var_5847_cast_fp16_1, var_5825_cast_fp16_1))[name = tensor<string, []>("aw_843_cast_fp16")];
            tensor<string, []> aw_845_equation_0 = const()[name = tensor<string, []>("aw_845_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_845_cast_fp16 = einsum(equation = aw_845_equation_0, values = (var_5847_cast_fp16_2, var_5825_cast_fp16_2))[name = tensor<string, []>("aw_845_cast_fp16")];
            tensor<string, []> aw_847_equation_0 = const()[name = tensor<string, []>("aw_847_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_847_cast_fp16 = einsum(equation = aw_847_equation_0, values = (var_5847_cast_fp16_3, var_5825_cast_fp16_3))[name = tensor<string, []>("aw_847_cast_fp16")];
            tensor<string, []> aw_849_equation_0 = const()[name = tensor<string, []>("aw_849_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_849_cast_fp16 = einsum(equation = aw_849_equation_0, values = (var_5847_cast_fp16_4, var_5825_cast_fp16_4))[name = tensor<string, []>("aw_849_cast_fp16")];
            tensor<string, []> aw_851_equation_0 = const()[name = tensor<string, []>("aw_851_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_851_cast_fp16 = einsum(equation = aw_851_equation_0, values = (var_5847_cast_fp16_5, var_5825_cast_fp16_5))[name = tensor<string, []>("aw_851_cast_fp16")];
            tensor<string, []> aw_853_equation_0 = const()[name = tensor<string, []>("aw_853_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_853_cast_fp16 = einsum(equation = aw_853_equation_0, values = (var_5847_cast_fp16_6, var_5825_cast_fp16_6))[name = tensor<string, []>("aw_853_cast_fp16")];
            tensor<string, []> aw_855_equation_0 = const()[name = tensor<string, []>("aw_855_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_855_cast_fp16 = einsum(equation = aw_855_equation_0, values = (var_5847_cast_fp16_7, var_5825_cast_fp16_7))[name = tensor<string, []>("aw_855_cast_fp16")];
            tensor<string, []> aw_857_equation_0 = const()[name = tensor<string, []>("aw_857_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_857_cast_fp16 = einsum(equation = aw_857_equation_0, values = (var_5847_cast_fp16_8, var_5825_cast_fp16_8))[name = tensor<string, []>("aw_857_cast_fp16")];
            tensor<string, []> aw_859_equation_0 = const()[name = tensor<string, []>("aw_859_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_859_cast_fp16 = einsum(equation = aw_859_equation_0, values = (var_5847_cast_fp16_9, var_5825_cast_fp16_9))[name = tensor<string, []>("aw_859_cast_fp16")];
            tensor<string, []> aw_861_equation_0 = const()[name = tensor<string, []>("aw_861_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_861_cast_fp16 = einsum(equation = aw_861_equation_0, values = (var_5847_cast_fp16_10, var_5825_cast_fp16_10))[name = tensor<string, []>("aw_861_cast_fp16")];
            tensor<string, []> aw_863_equation_0 = const()[name = tensor<string, []>("aw_863_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_863_cast_fp16 = einsum(equation = aw_863_equation_0, values = (var_5847_cast_fp16_11, var_5825_cast_fp16_11))[name = tensor<string, []>("aw_863_cast_fp16")];
            tensor<string, []> aw_865_equation_0 = const()[name = tensor<string, []>("aw_865_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_865_cast_fp16 = einsum(equation = aw_865_equation_0, values = (var_5847_cast_fp16_12, var_5825_cast_fp16_12))[name = tensor<string, []>("aw_865_cast_fp16")];
            tensor<string, []> aw_867_equation_0 = const()[name = tensor<string, []>("aw_867_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_867_cast_fp16 = einsum(equation = aw_867_equation_0, values = (var_5847_cast_fp16_13, var_5825_cast_fp16_13))[name = tensor<string, []>("aw_867_cast_fp16")];
            tensor<string, []> aw_869_equation_0 = const()[name = tensor<string, []>("aw_869_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_869_cast_fp16 = einsum(equation = aw_869_equation_0, values = (var_5847_cast_fp16_14, var_5825_cast_fp16_14))[name = tensor<string, []>("aw_869_cast_fp16")];
            tensor<string, []> aw_871_equation_0 = const()[name = tensor<string, []>("aw_871_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_871_cast_fp16 = einsum(equation = aw_871_equation_0, values = (var_5847_cast_fp16_15, var_5825_cast_fp16_15))[name = tensor<string, []>("aw_871_cast_fp16")];
            tensor<string, []> aw_873_equation_0 = const()[name = tensor<string, []>("aw_873_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_873_cast_fp16 = einsum(equation = aw_873_equation_0, values = (var_5847_cast_fp16_16, var_5825_cast_fp16_16))[name = tensor<string, []>("aw_873_cast_fp16")];
            tensor<string, []> aw_875_equation_0 = const()[name = tensor<string, []>("aw_875_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_875_cast_fp16 = einsum(equation = aw_875_equation_0, values = (var_5847_cast_fp16_17, var_5825_cast_fp16_17))[name = tensor<string, []>("aw_875_cast_fp16")];
            tensor<string, []> aw_877_equation_0 = const()[name = tensor<string, []>("aw_877_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_877_cast_fp16 = einsum(equation = aw_877_equation_0, values = (var_5847_cast_fp16_18, var_5825_cast_fp16_18))[name = tensor<string, []>("aw_877_cast_fp16")];
            tensor<string, []> aw_879_equation_0 = const()[name = tensor<string, []>("aw_879_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_879_cast_fp16 = einsum(equation = aw_879_equation_0, values = (var_5847_cast_fp16_19, var_5825_cast_fp16_19))[name = tensor<string, []>("aw_879_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5929_cast_fp16 = softmax(axis = var_5773, x = aw_841_cast_fp16)[name = tensor<string, []>("op_5929_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5930_cast_fp16 = softmax(axis = var_5773, x = aw_843_cast_fp16)[name = tensor<string, []>("op_5930_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5931_cast_fp16 = softmax(axis = var_5773, x = aw_845_cast_fp16)[name = tensor<string, []>("op_5931_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5932_cast_fp16 = softmax(axis = var_5773, x = aw_847_cast_fp16)[name = tensor<string, []>("op_5932_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5933_cast_fp16 = softmax(axis = var_5773, x = aw_849_cast_fp16)[name = tensor<string, []>("op_5933_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5934_cast_fp16 = softmax(axis = var_5773, x = aw_851_cast_fp16)[name = tensor<string, []>("op_5934_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5935_cast_fp16 = softmax(axis = var_5773, x = aw_853_cast_fp16)[name = tensor<string, []>("op_5935_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5936_cast_fp16 = softmax(axis = var_5773, x = aw_855_cast_fp16)[name = tensor<string, []>("op_5936_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5937_cast_fp16 = softmax(axis = var_5773, x = aw_857_cast_fp16)[name = tensor<string, []>("op_5937_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5938_cast_fp16 = softmax(axis = var_5773, x = aw_859_cast_fp16)[name = tensor<string, []>("op_5938_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5939_cast_fp16 = softmax(axis = var_5773, x = aw_861_cast_fp16)[name = tensor<string, []>("op_5939_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5940_cast_fp16 = softmax(axis = var_5773, x = aw_863_cast_fp16)[name = tensor<string, []>("op_5940_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5941_cast_fp16 = softmax(axis = var_5773, x = aw_865_cast_fp16)[name = tensor<string, []>("op_5941_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5942_cast_fp16 = softmax(axis = var_5773, x = aw_867_cast_fp16)[name = tensor<string, []>("op_5942_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5943_cast_fp16 = softmax(axis = var_5773, x = aw_869_cast_fp16)[name = tensor<string, []>("op_5943_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5944_cast_fp16 = softmax(axis = var_5773, x = aw_871_cast_fp16)[name = tensor<string, []>("op_5944_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5945_cast_fp16 = softmax(axis = var_5773, x = aw_873_cast_fp16)[name = tensor<string, []>("op_5945_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5946_cast_fp16 = softmax(axis = var_5773, x = aw_875_cast_fp16)[name = tensor<string, []>("op_5946_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5947_cast_fp16 = softmax(axis = var_5773, x = aw_877_cast_fp16)[name = tensor<string, []>("op_5947_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5948_cast_fp16 = softmax(axis = var_5773, x = aw_879_cast_fp16)[name = tensor<string, []>("op_5948_cast_fp16")];
            tensor<string, []> var_5950_equation_0 = const()[name = tensor<string, []>("op_5950_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5950_cast_fp16 = einsum(equation = var_5950_equation_0, values = (var_5868_cast_fp16_0, var_5929_cast_fp16))[name = tensor<string, []>("op_5950_cast_fp16")];
            tensor<string, []> var_5952_equation_0 = const()[name = tensor<string, []>("op_5952_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5952_cast_fp16 = einsum(equation = var_5952_equation_0, values = (var_5868_cast_fp16_1, var_5930_cast_fp16))[name = tensor<string, []>("op_5952_cast_fp16")];
            tensor<string, []> var_5954_equation_0 = const()[name = tensor<string, []>("op_5954_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5954_cast_fp16 = einsum(equation = var_5954_equation_0, values = (var_5868_cast_fp16_2, var_5931_cast_fp16))[name = tensor<string, []>("op_5954_cast_fp16")];
            tensor<string, []> var_5956_equation_0 = const()[name = tensor<string, []>("op_5956_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5956_cast_fp16 = einsum(equation = var_5956_equation_0, values = (var_5868_cast_fp16_3, var_5932_cast_fp16))[name = tensor<string, []>("op_5956_cast_fp16")];
            tensor<string, []> var_5958_equation_0 = const()[name = tensor<string, []>("op_5958_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5958_cast_fp16 = einsum(equation = var_5958_equation_0, values = (var_5868_cast_fp16_4, var_5933_cast_fp16))[name = tensor<string, []>("op_5958_cast_fp16")];
            tensor<string, []> var_5960_equation_0 = const()[name = tensor<string, []>("op_5960_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5960_cast_fp16 = einsum(equation = var_5960_equation_0, values = (var_5868_cast_fp16_5, var_5934_cast_fp16))[name = tensor<string, []>("op_5960_cast_fp16")];
            tensor<string, []> var_5962_equation_0 = const()[name = tensor<string, []>("op_5962_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5962_cast_fp16 = einsum(equation = var_5962_equation_0, values = (var_5868_cast_fp16_6, var_5935_cast_fp16))[name = tensor<string, []>("op_5962_cast_fp16")];
            tensor<string, []> var_5964_equation_0 = const()[name = tensor<string, []>("op_5964_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5964_cast_fp16 = einsum(equation = var_5964_equation_0, values = (var_5868_cast_fp16_7, var_5936_cast_fp16))[name = tensor<string, []>("op_5964_cast_fp16")];
            tensor<string, []> var_5966_equation_0 = const()[name = tensor<string, []>("op_5966_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5966_cast_fp16 = einsum(equation = var_5966_equation_0, values = (var_5868_cast_fp16_8, var_5937_cast_fp16))[name = tensor<string, []>("op_5966_cast_fp16")];
            tensor<string, []> var_5968_equation_0 = const()[name = tensor<string, []>("op_5968_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5968_cast_fp16 = einsum(equation = var_5968_equation_0, values = (var_5868_cast_fp16_9, var_5938_cast_fp16))[name = tensor<string, []>("op_5968_cast_fp16")];
            tensor<string, []> var_5970_equation_0 = const()[name = tensor<string, []>("op_5970_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5970_cast_fp16 = einsum(equation = var_5970_equation_0, values = (var_5868_cast_fp16_10, var_5939_cast_fp16))[name = tensor<string, []>("op_5970_cast_fp16")];
            tensor<string, []> var_5972_equation_0 = const()[name = tensor<string, []>("op_5972_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5972_cast_fp16 = einsum(equation = var_5972_equation_0, values = (var_5868_cast_fp16_11, var_5940_cast_fp16))[name = tensor<string, []>("op_5972_cast_fp16")];
            tensor<string, []> var_5974_equation_0 = const()[name = tensor<string, []>("op_5974_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5974_cast_fp16 = einsum(equation = var_5974_equation_0, values = (var_5868_cast_fp16_12, var_5941_cast_fp16))[name = tensor<string, []>("op_5974_cast_fp16")];
            tensor<string, []> var_5976_equation_0 = const()[name = tensor<string, []>("op_5976_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5976_cast_fp16 = einsum(equation = var_5976_equation_0, values = (var_5868_cast_fp16_13, var_5942_cast_fp16))[name = tensor<string, []>("op_5976_cast_fp16")];
            tensor<string, []> var_5978_equation_0 = const()[name = tensor<string, []>("op_5978_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5978_cast_fp16 = einsum(equation = var_5978_equation_0, values = (var_5868_cast_fp16_14, var_5943_cast_fp16))[name = tensor<string, []>("op_5978_cast_fp16")];
            tensor<string, []> var_5980_equation_0 = const()[name = tensor<string, []>("op_5980_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5980_cast_fp16 = einsum(equation = var_5980_equation_0, values = (var_5868_cast_fp16_15, var_5944_cast_fp16))[name = tensor<string, []>("op_5980_cast_fp16")];
            tensor<string, []> var_5982_equation_0 = const()[name = tensor<string, []>("op_5982_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5982_cast_fp16 = einsum(equation = var_5982_equation_0, values = (var_5868_cast_fp16_16, var_5945_cast_fp16))[name = tensor<string, []>("op_5982_cast_fp16")];
            tensor<string, []> var_5984_equation_0 = const()[name = tensor<string, []>("op_5984_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5984_cast_fp16 = einsum(equation = var_5984_equation_0, values = (var_5868_cast_fp16_17, var_5946_cast_fp16))[name = tensor<string, []>("op_5984_cast_fp16")];
            tensor<string, []> var_5986_equation_0 = const()[name = tensor<string, []>("op_5986_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5986_cast_fp16 = einsum(equation = var_5986_equation_0, values = (var_5868_cast_fp16_18, var_5947_cast_fp16))[name = tensor<string, []>("op_5986_cast_fp16")];
            tensor<string, []> var_5988_equation_0 = const()[name = tensor<string, []>("op_5988_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5988_cast_fp16 = einsum(equation = var_5988_equation_0, values = (var_5868_cast_fp16_19, var_5948_cast_fp16))[name = tensor<string, []>("op_5988_cast_fp16")];
            tensor<bool, []> input_215_interleave_0 = const()[name = tensor<string, []>("input_215_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_215_cast_fp16 = concat(axis = var_5773, interleave = input_215_interleave_0, values = (var_5950_cast_fp16, var_5952_cast_fp16, var_5954_cast_fp16, var_5956_cast_fp16, var_5958_cast_fp16, var_5960_cast_fp16, var_5962_cast_fp16, var_5964_cast_fp16, var_5966_cast_fp16, var_5968_cast_fp16, var_5970_cast_fp16, var_5972_cast_fp16, var_5974_cast_fp16, var_5976_cast_fp16, var_5978_cast_fp16, var_5980_cast_fp16, var_5982_cast_fp16, var_5984_cast_fp16, var_5986_cast_fp16, var_5988_cast_fp16))[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<string, []> var_5997_pad_type_0 = const()[name = tensor<string, []>("op_5997_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5997_strides_0 = const()[name = tensor<string, []>("op_5997_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5997_pad_0 = const()[name = tensor<string, []>("op_5997_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5997_dilations_0 = const()[name = tensor<string, []>("op_5997_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5997_groups_0 = const()[name = tensor<string, []>("op_5997_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_21_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(850918912)))];
            tensor<fp16, [1280]> blocks_21_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854195776)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_5997_cast_fp16 = conv(bias = blocks_21_attn_out_bias_to_fp16, dilations = var_5997_dilations_0, groups = var_5997_groups_0, pad = var_5997_pad_0, pad_type = var_5997_pad_type_0, strides = var_5997_strides_0, weight = blocks_21_attn_out_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("op_5997_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_87_cast_fp16 = add(x = inputs_85_cast_fp16, y = var_5997_cast_fp16)[name = tensor<string, []>("inputs_87_cast_fp16")];
            tensor<int32, [1]> input_217_axes_0 = const()[name = tensor<string, []>("input_217_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_217_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_217_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854198400)))];
            tensor<fp16, [1280]> input_217_beta_0_to_fp16 = const()[name = tensor<string, []>("input_217_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854201024)))];
            tensor<fp16, []> var_6007_to_fp16 = const()[name = tensor<string, []>("op_6007_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_217_cast_fp16 = layer_norm(axes = input_217_axes_0, beta = input_217_beta_0_to_fp16, epsilon = var_6007_to_fp16, gamma = input_217_gamma_0_to_fp16, x = inputs_87_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<string, []> input_219_pad_type_0 = const()[name = tensor<string, []>("input_219_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_219_strides_0 = const()[name = tensor<string, []>("input_219_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_219_pad_0 = const()[name = tensor<string, []>("input_219_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_219_dilations_0 = const()[name = tensor<string, []>("input_219_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_219_groups_0 = const()[name = tensor<string, []>("input_219_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_21_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854203648)))];
            tensor<fp16, [5120]> blocks_21_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(867310912)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_219_cast_fp16 = conv(bias = blocks_21_mlp_0_bias_to_fp16, dilations = input_219_dilations_0, groups = input_219_groups_0, pad = input_219_pad_0, pad_type = input_219_pad_type_0, strides = input_219_strides_0, weight = blocks_21_mlp_0_weight_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<string, []> input_221_mode_0 = const()[name = tensor<string, []>("input_221_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_221_cast_fp16 = gelu(mode = input_221_mode_0, x = input_219_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<string, []> var_6033_pad_type_0 = const()[name = tensor<string, []>("op_6033_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6033_strides_0 = const()[name = tensor<string, []>("op_6033_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6033_pad_0 = const()[name = tensor<string, []>("op_6033_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6033_dilations_0 = const()[name = tensor<string, []>("op_6033_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6033_groups_0 = const()[name = tensor<string, []>("op_6033_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_21_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(867321216)))];
            tensor<fp16, [1280]> blocks_21_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(880428480)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6033_cast_fp16 = conv(bias = blocks_21_mlp_2_bias_to_fp16, dilations = var_6033_dilations_0, groups = var_6033_groups_0, pad = var_6033_pad_0, pad_type = var_6033_pad_type_0, strides = var_6033_strides_0, weight = blocks_21_mlp_2_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("op_6033_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_89_cast_fp16 = add(x = inputs_87_cast_fp16, y = var_6033_cast_fp16)[name = tensor<string, []>("inputs_89_cast_fp16")];
            tensor<int32, []> var_6042 = const()[name = tensor<string, []>("op_6042"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_223_axes_0 = const()[name = tensor<string, []>("input_223_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_223_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_223_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(880431104)))];
            tensor<fp16, [1280]> input_223_beta_0_to_fp16 = const()[name = tensor<string, []>("input_223_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(880433728)))];
            tensor<fp16, []> var_6058_to_fp16 = const()[name = tensor<string, []>("op_6058_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_223_cast_fp16 = layer_norm(axes = input_223_axes_0, beta = input_223_beta_0_to_fp16, epsilon = var_6058_to_fp16, gamma = input_223_gamma_0_to_fp16, x = inputs_89_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<string, []> q_45_pad_type_0 = const()[name = tensor<string, []>("q_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_45_strides_0 = const()[name = tensor<string, []>("q_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_45_pad_0 = const()[name = tensor<string, []>("q_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_45_dilations_0 = const()[name = tensor<string, []>("q_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_45_groups_0 = const()[name = tensor<string, []>("q_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_6093_weight_0_to_fp16 = const()[name = tensor<string, []>("op_6093_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(880436352)))];
            tensor<fp16, [1280]> var_6093_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6093_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(883713216)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6093_cast_fp16 = conv(bias = var_6093_bias_0_to_fp16, dilations = q_45_dilations_0, groups = q_45_groups_0, pad = q_45_pad_0, pad_type = q_45_pad_type_0, strides = q_45_strides_0, weight = var_6093_weight_0_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("op_6093_cast_fp16")];
            tensor<string, []> k_45_pad_type_0 = const()[name = tensor<string, []>("k_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_45_strides_0 = const()[name = tensor<string, []>("k_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_45_pad_0 = const()[name = tensor<string, []>("k_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_45_dilations_0 = const()[name = tensor<string, []>("k_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_45_groups_0 = const()[name = tensor<string, []>("k_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_22_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(883715840)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_45_cast_fp16 = conv(dilations = k_45_dilations_0, groups = k_45_groups_0, pad = k_45_pad_0, pad_type = k_45_pad_type_0, strides = k_45_strides_0, weight = blocks_22_attn_key_weight_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("k_45_cast_fp16")];
            tensor<string, []> var_6091_pad_type_0 = const()[name = tensor<string, []>("op_6091_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6091_strides_0 = const()[name = tensor<string, []>("op_6091_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6091_pad_0 = const()[name = tensor<string, []>("op_6091_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6091_dilations_0 = const()[name = tensor<string, []>("op_6091_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6091_groups_0 = const()[name = tensor<string, []>("op_6091_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_22_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(886992704)))];
            tensor<fp16, [1280]> blocks_22_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(890269568)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6091_cast_fp16 = conv(bias = blocks_22_attn_value_bias_to_fp16, dilations = var_6091_dilations_0, groups = var_6091_groups_0, pad = var_6091_pad_0, pad_type = var_6091_pad_type_0, strides = var_6091_strides_0, weight = blocks_22_attn_value_weight_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("op_6091_cast_fp16")];
            tensor<int32, [20]> tile_66 = const()[name = tensor<string, []>("tile_66"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6094_axis_0 = const()[name = tensor<string, []>("op_6094_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6094_cast_fp16_19 = split(axis = var_6094_axis_0, split_sizes = tile_66, x = var_6093_cast_fp16)[name = tensor<string, []>("op_6094_cast_fp16")];
            tensor<int32, [4]> var_6115_perm_0 = const()[name = tensor<string, []>("op_6115_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_67 = const()[name = tensor<string, []>("tile_67"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6116_axis_0 = const()[name = tensor<string, []>("op_6116_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_6115_cast_fp16 = transpose(perm = var_6115_perm_0, x = k_45_cast_fp16)[name = tensor<string, []>("transpose_10")];
            tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_6116_cast_fp16_19 = split(axis = var_6116_axis_0, split_sizes = tile_67, x = var_6115_cast_fp16)[name = tensor<string, []>("op_6116_cast_fp16")];
            tensor<int32, [20]> tile_68 = const()[name = tensor<string, []>("tile_68"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6137_axis_0 = const()[name = tensor<string, []>("op_6137_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6137_cast_fp16_19 = split(axis = var_6137_axis_0, split_sizes = tile_68, x = var_6091_cast_fp16)[name = tensor<string, []>("op_6137_cast_fp16")];
            tensor<string, []> aw_881_equation_0 = const()[name = tensor<string, []>("aw_881_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_881_cast_fp16 = einsum(equation = aw_881_equation_0, values = (var_6116_cast_fp16_0, var_6094_cast_fp16_0))[name = tensor<string, []>("aw_881_cast_fp16")];
            tensor<string, []> aw_883_equation_0 = const()[name = tensor<string, []>("aw_883_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_883_cast_fp16 = einsum(equation = aw_883_equation_0, values = (var_6116_cast_fp16_1, var_6094_cast_fp16_1))[name = tensor<string, []>("aw_883_cast_fp16")];
            tensor<string, []> aw_885_equation_0 = const()[name = tensor<string, []>("aw_885_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_885_cast_fp16 = einsum(equation = aw_885_equation_0, values = (var_6116_cast_fp16_2, var_6094_cast_fp16_2))[name = tensor<string, []>("aw_885_cast_fp16")];
            tensor<string, []> aw_887_equation_0 = const()[name = tensor<string, []>("aw_887_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_887_cast_fp16 = einsum(equation = aw_887_equation_0, values = (var_6116_cast_fp16_3, var_6094_cast_fp16_3))[name = tensor<string, []>("aw_887_cast_fp16")];
            tensor<string, []> aw_889_equation_0 = const()[name = tensor<string, []>("aw_889_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_889_cast_fp16 = einsum(equation = aw_889_equation_0, values = (var_6116_cast_fp16_4, var_6094_cast_fp16_4))[name = tensor<string, []>("aw_889_cast_fp16")];
            tensor<string, []> aw_891_equation_0 = const()[name = tensor<string, []>("aw_891_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_891_cast_fp16 = einsum(equation = aw_891_equation_0, values = (var_6116_cast_fp16_5, var_6094_cast_fp16_5))[name = tensor<string, []>("aw_891_cast_fp16")];
            tensor<string, []> aw_893_equation_0 = const()[name = tensor<string, []>("aw_893_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_893_cast_fp16 = einsum(equation = aw_893_equation_0, values = (var_6116_cast_fp16_6, var_6094_cast_fp16_6))[name = tensor<string, []>("aw_893_cast_fp16")];
            tensor<string, []> aw_895_equation_0 = const()[name = tensor<string, []>("aw_895_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_895_cast_fp16 = einsum(equation = aw_895_equation_0, values = (var_6116_cast_fp16_7, var_6094_cast_fp16_7))[name = tensor<string, []>("aw_895_cast_fp16")];
            tensor<string, []> aw_897_equation_0 = const()[name = tensor<string, []>("aw_897_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_897_cast_fp16 = einsum(equation = aw_897_equation_0, values = (var_6116_cast_fp16_8, var_6094_cast_fp16_8))[name = tensor<string, []>("aw_897_cast_fp16")];
            tensor<string, []> aw_899_equation_0 = const()[name = tensor<string, []>("aw_899_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_899_cast_fp16 = einsum(equation = aw_899_equation_0, values = (var_6116_cast_fp16_9, var_6094_cast_fp16_9))[name = tensor<string, []>("aw_899_cast_fp16")];
            tensor<string, []> aw_901_equation_0 = const()[name = tensor<string, []>("aw_901_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_901_cast_fp16 = einsum(equation = aw_901_equation_0, values = (var_6116_cast_fp16_10, var_6094_cast_fp16_10))[name = tensor<string, []>("aw_901_cast_fp16")];
            tensor<string, []> aw_903_equation_0 = const()[name = tensor<string, []>("aw_903_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_903_cast_fp16 = einsum(equation = aw_903_equation_0, values = (var_6116_cast_fp16_11, var_6094_cast_fp16_11))[name = tensor<string, []>("aw_903_cast_fp16")];
            tensor<string, []> aw_905_equation_0 = const()[name = tensor<string, []>("aw_905_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_905_cast_fp16 = einsum(equation = aw_905_equation_0, values = (var_6116_cast_fp16_12, var_6094_cast_fp16_12))[name = tensor<string, []>("aw_905_cast_fp16")];
            tensor<string, []> aw_907_equation_0 = const()[name = tensor<string, []>("aw_907_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_907_cast_fp16 = einsum(equation = aw_907_equation_0, values = (var_6116_cast_fp16_13, var_6094_cast_fp16_13))[name = tensor<string, []>("aw_907_cast_fp16")];
            tensor<string, []> aw_909_equation_0 = const()[name = tensor<string, []>("aw_909_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_909_cast_fp16 = einsum(equation = aw_909_equation_0, values = (var_6116_cast_fp16_14, var_6094_cast_fp16_14))[name = tensor<string, []>("aw_909_cast_fp16")];
            tensor<string, []> aw_911_equation_0 = const()[name = tensor<string, []>("aw_911_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_911_cast_fp16 = einsum(equation = aw_911_equation_0, values = (var_6116_cast_fp16_15, var_6094_cast_fp16_15))[name = tensor<string, []>("aw_911_cast_fp16")];
            tensor<string, []> aw_913_equation_0 = const()[name = tensor<string, []>("aw_913_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_913_cast_fp16 = einsum(equation = aw_913_equation_0, values = (var_6116_cast_fp16_16, var_6094_cast_fp16_16))[name = tensor<string, []>("aw_913_cast_fp16")];
            tensor<string, []> aw_915_equation_0 = const()[name = tensor<string, []>("aw_915_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_915_cast_fp16 = einsum(equation = aw_915_equation_0, values = (var_6116_cast_fp16_17, var_6094_cast_fp16_17))[name = tensor<string, []>("aw_915_cast_fp16")];
            tensor<string, []> aw_917_equation_0 = const()[name = tensor<string, []>("aw_917_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_917_cast_fp16 = einsum(equation = aw_917_equation_0, values = (var_6116_cast_fp16_18, var_6094_cast_fp16_18))[name = tensor<string, []>("aw_917_cast_fp16")];
            tensor<string, []> aw_919_equation_0 = const()[name = tensor<string, []>("aw_919_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_919_cast_fp16 = einsum(equation = aw_919_equation_0, values = (var_6116_cast_fp16_19, var_6094_cast_fp16_19))[name = tensor<string, []>("aw_919_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6198_cast_fp16 = softmax(axis = var_6042, x = aw_881_cast_fp16)[name = tensor<string, []>("op_6198_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6199_cast_fp16 = softmax(axis = var_6042, x = aw_883_cast_fp16)[name = tensor<string, []>("op_6199_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6200_cast_fp16 = softmax(axis = var_6042, x = aw_885_cast_fp16)[name = tensor<string, []>("op_6200_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6201_cast_fp16 = softmax(axis = var_6042, x = aw_887_cast_fp16)[name = tensor<string, []>("op_6201_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6202_cast_fp16 = softmax(axis = var_6042, x = aw_889_cast_fp16)[name = tensor<string, []>("op_6202_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6203_cast_fp16 = softmax(axis = var_6042, x = aw_891_cast_fp16)[name = tensor<string, []>("op_6203_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6204_cast_fp16 = softmax(axis = var_6042, x = aw_893_cast_fp16)[name = tensor<string, []>("op_6204_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6205_cast_fp16 = softmax(axis = var_6042, x = aw_895_cast_fp16)[name = tensor<string, []>("op_6205_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6206_cast_fp16 = softmax(axis = var_6042, x = aw_897_cast_fp16)[name = tensor<string, []>("op_6206_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6207_cast_fp16 = softmax(axis = var_6042, x = aw_899_cast_fp16)[name = tensor<string, []>("op_6207_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6208_cast_fp16 = softmax(axis = var_6042, x = aw_901_cast_fp16)[name = tensor<string, []>("op_6208_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6209_cast_fp16 = softmax(axis = var_6042, x = aw_903_cast_fp16)[name = tensor<string, []>("op_6209_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6210_cast_fp16 = softmax(axis = var_6042, x = aw_905_cast_fp16)[name = tensor<string, []>("op_6210_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6211_cast_fp16 = softmax(axis = var_6042, x = aw_907_cast_fp16)[name = tensor<string, []>("op_6211_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6212_cast_fp16 = softmax(axis = var_6042, x = aw_909_cast_fp16)[name = tensor<string, []>("op_6212_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6213_cast_fp16 = softmax(axis = var_6042, x = aw_911_cast_fp16)[name = tensor<string, []>("op_6213_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6214_cast_fp16 = softmax(axis = var_6042, x = aw_913_cast_fp16)[name = tensor<string, []>("op_6214_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6215_cast_fp16 = softmax(axis = var_6042, x = aw_915_cast_fp16)[name = tensor<string, []>("op_6215_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6216_cast_fp16 = softmax(axis = var_6042, x = aw_917_cast_fp16)[name = tensor<string, []>("op_6216_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6217_cast_fp16 = softmax(axis = var_6042, x = aw_919_cast_fp16)[name = tensor<string, []>("op_6217_cast_fp16")];
            tensor<string, []> var_6219_equation_0 = const()[name = tensor<string, []>("op_6219_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6219_cast_fp16 = einsum(equation = var_6219_equation_0, values = (var_6137_cast_fp16_0, var_6198_cast_fp16))[name = tensor<string, []>("op_6219_cast_fp16")];
            tensor<string, []> var_6221_equation_0 = const()[name = tensor<string, []>("op_6221_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6221_cast_fp16 = einsum(equation = var_6221_equation_0, values = (var_6137_cast_fp16_1, var_6199_cast_fp16))[name = tensor<string, []>("op_6221_cast_fp16")];
            tensor<string, []> var_6223_equation_0 = const()[name = tensor<string, []>("op_6223_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6223_cast_fp16 = einsum(equation = var_6223_equation_0, values = (var_6137_cast_fp16_2, var_6200_cast_fp16))[name = tensor<string, []>("op_6223_cast_fp16")];
            tensor<string, []> var_6225_equation_0 = const()[name = tensor<string, []>("op_6225_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6225_cast_fp16 = einsum(equation = var_6225_equation_0, values = (var_6137_cast_fp16_3, var_6201_cast_fp16))[name = tensor<string, []>("op_6225_cast_fp16")];
            tensor<string, []> var_6227_equation_0 = const()[name = tensor<string, []>("op_6227_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6227_cast_fp16 = einsum(equation = var_6227_equation_0, values = (var_6137_cast_fp16_4, var_6202_cast_fp16))[name = tensor<string, []>("op_6227_cast_fp16")];
            tensor<string, []> var_6229_equation_0 = const()[name = tensor<string, []>("op_6229_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6229_cast_fp16 = einsum(equation = var_6229_equation_0, values = (var_6137_cast_fp16_5, var_6203_cast_fp16))[name = tensor<string, []>("op_6229_cast_fp16")];
            tensor<string, []> var_6231_equation_0 = const()[name = tensor<string, []>("op_6231_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6231_cast_fp16 = einsum(equation = var_6231_equation_0, values = (var_6137_cast_fp16_6, var_6204_cast_fp16))[name = tensor<string, []>("op_6231_cast_fp16")];
            tensor<string, []> var_6233_equation_0 = const()[name = tensor<string, []>("op_6233_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6233_cast_fp16 = einsum(equation = var_6233_equation_0, values = (var_6137_cast_fp16_7, var_6205_cast_fp16))[name = tensor<string, []>("op_6233_cast_fp16")];
            tensor<string, []> var_6235_equation_0 = const()[name = tensor<string, []>("op_6235_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6235_cast_fp16 = einsum(equation = var_6235_equation_0, values = (var_6137_cast_fp16_8, var_6206_cast_fp16))[name = tensor<string, []>("op_6235_cast_fp16")];
            tensor<string, []> var_6237_equation_0 = const()[name = tensor<string, []>("op_6237_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6237_cast_fp16 = einsum(equation = var_6237_equation_0, values = (var_6137_cast_fp16_9, var_6207_cast_fp16))[name = tensor<string, []>("op_6237_cast_fp16")];
            tensor<string, []> var_6239_equation_0 = const()[name = tensor<string, []>("op_6239_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6239_cast_fp16 = einsum(equation = var_6239_equation_0, values = (var_6137_cast_fp16_10, var_6208_cast_fp16))[name = tensor<string, []>("op_6239_cast_fp16")];
            tensor<string, []> var_6241_equation_0 = const()[name = tensor<string, []>("op_6241_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6241_cast_fp16 = einsum(equation = var_6241_equation_0, values = (var_6137_cast_fp16_11, var_6209_cast_fp16))[name = tensor<string, []>("op_6241_cast_fp16")];
            tensor<string, []> var_6243_equation_0 = const()[name = tensor<string, []>("op_6243_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6243_cast_fp16 = einsum(equation = var_6243_equation_0, values = (var_6137_cast_fp16_12, var_6210_cast_fp16))[name = tensor<string, []>("op_6243_cast_fp16")];
            tensor<string, []> var_6245_equation_0 = const()[name = tensor<string, []>("op_6245_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6245_cast_fp16 = einsum(equation = var_6245_equation_0, values = (var_6137_cast_fp16_13, var_6211_cast_fp16))[name = tensor<string, []>("op_6245_cast_fp16")];
            tensor<string, []> var_6247_equation_0 = const()[name = tensor<string, []>("op_6247_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6247_cast_fp16 = einsum(equation = var_6247_equation_0, values = (var_6137_cast_fp16_14, var_6212_cast_fp16))[name = tensor<string, []>("op_6247_cast_fp16")];
            tensor<string, []> var_6249_equation_0 = const()[name = tensor<string, []>("op_6249_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6249_cast_fp16 = einsum(equation = var_6249_equation_0, values = (var_6137_cast_fp16_15, var_6213_cast_fp16))[name = tensor<string, []>("op_6249_cast_fp16")];
            tensor<string, []> var_6251_equation_0 = const()[name = tensor<string, []>("op_6251_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6251_cast_fp16 = einsum(equation = var_6251_equation_0, values = (var_6137_cast_fp16_16, var_6214_cast_fp16))[name = tensor<string, []>("op_6251_cast_fp16")];
            tensor<string, []> var_6253_equation_0 = const()[name = tensor<string, []>("op_6253_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6253_cast_fp16 = einsum(equation = var_6253_equation_0, values = (var_6137_cast_fp16_17, var_6215_cast_fp16))[name = tensor<string, []>("op_6253_cast_fp16")];
            tensor<string, []> var_6255_equation_0 = const()[name = tensor<string, []>("op_6255_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6255_cast_fp16 = einsum(equation = var_6255_equation_0, values = (var_6137_cast_fp16_18, var_6216_cast_fp16))[name = tensor<string, []>("op_6255_cast_fp16")];
            tensor<string, []> var_6257_equation_0 = const()[name = tensor<string, []>("op_6257_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6257_cast_fp16 = einsum(equation = var_6257_equation_0, values = (var_6137_cast_fp16_19, var_6217_cast_fp16))[name = tensor<string, []>("op_6257_cast_fp16")];
            tensor<bool, []> input_225_interleave_0 = const()[name = tensor<string, []>("input_225_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_225_cast_fp16 = concat(axis = var_6042, interleave = input_225_interleave_0, values = (var_6219_cast_fp16, var_6221_cast_fp16, var_6223_cast_fp16, var_6225_cast_fp16, var_6227_cast_fp16, var_6229_cast_fp16, var_6231_cast_fp16, var_6233_cast_fp16, var_6235_cast_fp16, var_6237_cast_fp16, var_6239_cast_fp16, var_6241_cast_fp16, var_6243_cast_fp16, var_6245_cast_fp16, var_6247_cast_fp16, var_6249_cast_fp16, var_6251_cast_fp16, var_6253_cast_fp16, var_6255_cast_fp16, var_6257_cast_fp16))[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<string, []> var_6266_pad_type_0 = const()[name = tensor<string, []>("op_6266_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6266_strides_0 = const()[name = tensor<string, []>("op_6266_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6266_pad_0 = const()[name = tensor<string, []>("op_6266_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6266_dilations_0 = const()[name = tensor<string, []>("op_6266_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6266_groups_0 = const()[name = tensor<string, []>("op_6266_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_22_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(890272192)))];
            tensor<fp16, [1280]> blocks_22_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(893549056)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6266_cast_fp16 = conv(bias = blocks_22_attn_out_bias_to_fp16, dilations = var_6266_dilations_0, groups = var_6266_groups_0, pad = var_6266_pad_0, pad_type = var_6266_pad_type_0, strides = var_6266_strides_0, weight = blocks_22_attn_out_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("op_6266_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_91_cast_fp16 = add(x = inputs_89_cast_fp16, y = var_6266_cast_fp16)[name = tensor<string, []>("inputs_91_cast_fp16")];
            tensor<int32, [1]> input_227_axes_0 = const()[name = tensor<string, []>("input_227_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_227_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_227_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(893551680)))];
            tensor<fp16, [1280]> input_227_beta_0_to_fp16 = const()[name = tensor<string, []>("input_227_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(893554304)))];
            tensor<fp16, []> var_6276_to_fp16 = const()[name = tensor<string, []>("op_6276_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_227_cast_fp16 = layer_norm(axes = input_227_axes_0, beta = input_227_beta_0_to_fp16, epsilon = var_6276_to_fp16, gamma = input_227_gamma_0_to_fp16, x = inputs_91_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<string, []> input_229_pad_type_0 = const()[name = tensor<string, []>("input_229_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_229_strides_0 = const()[name = tensor<string, []>("input_229_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_229_pad_0 = const()[name = tensor<string, []>("input_229_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_229_dilations_0 = const()[name = tensor<string, []>("input_229_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_229_groups_0 = const()[name = tensor<string, []>("input_229_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_22_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(893556928)))];
            tensor<fp16, [5120]> blocks_22_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(906664192)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_229_cast_fp16 = conv(bias = blocks_22_mlp_0_bias_to_fp16, dilations = input_229_dilations_0, groups = input_229_groups_0, pad = input_229_pad_0, pad_type = input_229_pad_type_0, strides = input_229_strides_0, weight = blocks_22_mlp_0_weight_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<string, []> input_231_mode_0 = const()[name = tensor<string, []>("input_231_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_231_cast_fp16 = gelu(mode = input_231_mode_0, x = input_229_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<string, []> var_6302_pad_type_0 = const()[name = tensor<string, []>("op_6302_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6302_strides_0 = const()[name = tensor<string, []>("op_6302_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6302_pad_0 = const()[name = tensor<string, []>("op_6302_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6302_dilations_0 = const()[name = tensor<string, []>("op_6302_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6302_groups_0 = const()[name = tensor<string, []>("op_6302_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_22_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(906674496)))];
            tensor<fp16, [1280]> blocks_22_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(919781760)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6302_cast_fp16 = conv(bias = blocks_22_mlp_2_bias_to_fp16, dilations = var_6302_dilations_0, groups = var_6302_groups_0, pad = var_6302_pad_0, pad_type = var_6302_pad_type_0, strides = var_6302_strides_0, weight = blocks_22_mlp_2_weight_to_fp16, x = input_231_cast_fp16)[name = tensor<string, []>("op_6302_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_93_cast_fp16 = add(x = inputs_91_cast_fp16, y = var_6302_cast_fp16)[name = tensor<string, []>("inputs_93_cast_fp16")];
            tensor<int32, []> var_6311 = const()[name = tensor<string, []>("op_6311"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_233_axes_0 = const()[name = tensor<string, []>("input_233_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_233_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_233_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(919784384)))];
            tensor<fp16, [1280]> input_233_beta_0_to_fp16 = const()[name = tensor<string, []>("input_233_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(919787008)))];
            tensor<fp16, []> var_6327_to_fp16 = const()[name = tensor<string, []>("op_6327_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_233_cast_fp16 = layer_norm(axes = input_233_axes_0, beta = input_233_beta_0_to_fp16, epsilon = var_6327_to_fp16, gamma = input_233_gamma_0_to_fp16, x = inputs_93_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<string, []> q_47_pad_type_0 = const()[name = tensor<string, []>("q_47_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_47_strides_0 = const()[name = tensor<string, []>("q_47_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_47_pad_0 = const()[name = tensor<string, []>("q_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_47_dilations_0 = const()[name = tensor<string, []>("q_47_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_47_groups_0 = const()[name = tensor<string, []>("q_47_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_6362_weight_0_to_fp16 = const()[name = tensor<string, []>("op_6362_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(919789632)))];
            tensor<fp16, [1280]> var_6362_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6362_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(923066496)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6362_cast_fp16 = conv(bias = var_6362_bias_0_to_fp16, dilations = q_47_dilations_0, groups = q_47_groups_0, pad = q_47_pad_0, pad_type = q_47_pad_type_0, strides = q_47_strides_0, weight = var_6362_weight_0_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("op_6362_cast_fp16")];
            tensor<string, []> k_47_pad_type_0 = const()[name = tensor<string, []>("k_47_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_47_strides_0 = const()[name = tensor<string, []>("k_47_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_47_pad_0 = const()[name = tensor<string, []>("k_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_47_dilations_0 = const()[name = tensor<string, []>("k_47_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_47_groups_0 = const()[name = tensor<string, []>("k_47_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_23_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(923069120)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_47_cast_fp16 = conv(dilations = k_47_dilations_0, groups = k_47_groups_0, pad = k_47_pad_0, pad_type = k_47_pad_type_0, strides = k_47_strides_0, weight = blocks_23_attn_key_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("k_47_cast_fp16")];
            tensor<string, []> var_6360_pad_type_0 = const()[name = tensor<string, []>("op_6360_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6360_strides_0 = const()[name = tensor<string, []>("op_6360_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6360_pad_0 = const()[name = tensor<string, []>("op_6360_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6360_dilations_0 = const()[name = tensor<string, []>("op_6360_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6360_groups_0 = const()[name = tensor<string, []>("op_6360_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_23_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(926345984)))];
            tensor<fp16, [1280]> blocks_23_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(929622848)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6360_cast_fp16 = conv(bias = blocks_23_attn_value_bias_to_fp16, dilations = var_6360_dilations_0, groups = var_6360_groups_0, pad = var_6360_pad_0, pad_type = var_6360_pad_type_0, strides = var_6360_strides_0, weight = blocks_23_attn_value_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("op_6360_cast_fp16")];
            tensor<int32, [20]> tile_69 = const()[name = tensor<string, []>("tile_69"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6363_axis_0 = const()[name = tensor<string, []>("op_6363_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6363_cast_fp16_19 = split(axis = var_6363_axis_0, split_sizes = tile_69, x = var_6362_cast_fp16)[name = tensor<string, []>("op_6363_cast_fp16")];
            tensor<int32, [4]> var_6384_perm_0 = const()[name = tensor<string, []>("op_6384_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_70 = const()[name = tensor<string, []>("tile_70"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6385_axis_0 = const()[name = tensor<string, []>("op_6385_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_6384_cast_fp16 = transpose(perm = var_6384_perm_0, x = k_47_cast_fp16)[name = tensor<string, []>("transpose_9")];
            tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_6385_cast_fp16_19 = split(axis = var_6385_axis_0, split_sizes = tile_70, x = var_6384_cast_fp16)[name = tensor<string, []>("op_6385_cast_fp16")];
            tensor<int32, [20]> tile_71 = const()[name = tensor<string, []>("tile_71"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6406_axis_0 = const()[name = tensor<string, []>("op_6406_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6406_cast_fp16_19 = split(axis = var_6406_axis_0, split_sizes = tile_71, x = var_6360_cast_fp16)[name = tensor<string, []>("op_6406_cast_fp16")];
            tensor<string, []> aw_921_equation_0 = const()[name = tensor<string, []>("aw_921_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_921_cast_fp16 = einsum(equation = aw_921_equation_0, values = (var_6385_cast_fp16_0, var_6363_cast_fp16_0))[name = tensor<string, []>("aw_921_cast_fp16")];
            tensor<string, []> aw_923_equation_0 = const()[name = tensor<string, []>("aw_923_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_923_cast_fp16 = einsum(equation = aw_923_equation_0, values = (var_6385_cast_fp16_1, var_6363_cast_fp16_1))[name = tensor<string, []>("aw_923_cast_fp16")];
            tensor<string, []> aw_925_equation_0 = const()[name = tensor<string, []>("aw_925_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_925_cast_fp16 = einsum(equation = aw_925_equation_0, values = (var_6385_cast_fp16_2, var_6363_cast_fp16_2))[name = tensor<string, []>("aw_925_cast_fp16")];
            tensor<string, []> aw_927_equation_0 = const()[name = tensor<string, []>("aw_927_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_927_cast_fp16 = einsum(equation = aw_927_equation_0, values = (var_6385_cast_fp16_3, var_6363_cast_fp16_3))[name = tensor<string, []>("aw_927_cast_fp16")];
            tensor<string, []> aw_929_equation_0 = const()[name = tensor<string, []>("aw_929_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_929_cast_fp16 = einsum(equation = aw_929_equation_0, values = (var_6385_cast_fp16_4, var_6363_cast_fp16_4))[name = tensor<string, []>("aw_929_cast_fp16")];
            tensor<string, []> aw_931_equation_0 = const()[name = tensor<string, []>("aw_931_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_931_cast_fp16 = einsum(equation = aw_931_equation_0, values = (var_6385_cast_fp16_5, var_6363_cast_fp16_5))[name = tensor<string, []>("aw_931_cast_fp16")];
            tensor<string, []> aw_933_equation_0 = const()[name = tensor<string, []>("aw_933_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_933_cast_fp16 = einsum(equation = aw_933_equation_0, values = (var_6385_cast_fp16_6, var_6363_cast_fp16_6))[name = tensor<string, []>("aw_933_cast_fp16")];
            tensor<string, []> aw_935_equation_0 = const()[name = tensor<string, []>("aw_935_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_935_cast_fp16 = einsum(equation = aw_935_equation_0, values = (var_6385_cast_fp16_7, var_6363_cast_fp16_7))[name = tensor<string, []>("aw_935_cast_fp16")];
            tensor<string, []> aw_937_equation_0 = const()[name = tensor<string, []>("aw_937_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_937_cast_fp16 = einsum(equation = aw_937_equation_0, values = (var_6385_cast_fp16_8, var_6363_cast_fp16_8))[name = tensor<string, []>("aw_937_cast_fp16")];
            tensor<string, []> aw_939_equation_0 = const()[name = tensor<string, []>("aw_939_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_939_cast_fp16 = einsum(equation = aw_939_equation_0, values = (var_6385_cast_fp16_9, var_6363_cast_fp16_9))[name = tensor<string, []>("aw_939_cast_fp16")];
            tensor<string, []> aw_941_equation_0 = const()[name = tensor<string, []>("aw_941_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_941_cast_fp16 = einsum(equation = aw_941_equation_0, values = (var_6385_cast_fp16_10, var_6363_cast_fp16_10))[name = tensor<string, []>("aw_941_cast_fp16")];
            tensor<string, []> aw_943_equation_0 = const()[name = tensor<string, []>("aw_943_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_943_cast_fp16 = einsum(equation = aw_943_equation_0, values = (var_6385_cast_fp16_11, var_6363_cast_fp16_11))[name = tensor<string, []>("aw_943_cast_fp16")];
            tensor<string, []> aw_945_equation_0 = const()[name = tensor<string, []>("aw_945_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_945_cast_fp16 = einsum(equation = aw_945_equation_0, values = (var_6385_cast_fp16_12, var_6363_cast_fp16_12))[name = tensor<string, []>("aw_945_cast_fp16")];
            tensor<string, []> aw_947_equation_0 = const()[name = tensor<string, []>("aw_947_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_947_cast_fp16 = einsum(equation = aw_947_equation_0, values = (var_6385_cast_fp16_13, var_6363_cast_fp16_13))[name = tensor<string, []>("aw_947_cast_fp16")];
            tensor<string, []> aw_949_equation_0 = const()[name = tensor<string, []>("aw_949_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_949_cast_fp16 = einsum(equation = aw_949_equation_0, values = (var_6385_cast_fp16_14, var_6363_cast_fp16_14))[name = tensor<string, []>("aw_949_cast_fp16")];
            tensor<string, []> aw_951_equation_0 = const()[name = tensor<string, []>("aw_951_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_951_cast_fp16 = einsum(equation = aw_951_equation_0, values = (var_6385_cast_fp16_15, var_6363_cast_fp16_15))[name = tensor<string, []>("aw_951_cast_fp16")];
            tensor<string, []> aw_953_equation_0 = const()[name = tensor<string, []>("aw_953_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_953_cast_fp16 = einsum(equation = aw_953_equation_0, values = (var_6385_cast_fp16_16, var_6363_cast_fp16_16))[name = tensor<string, []>("aw_953_cast_fp16")];
            tensor<string, []> aw_955_equation_0 = const()[name = tensor<string, []>("aw_955_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_955_cast_fp16 = einsum(equation = aw_955_equation_0, values = (var_6385_cast_fp16_17, var_6363_cast_fp16_17))[name = tensor<string, []>("aw_955_cast_fp16")];
            tensor<string, []> aw_957_equation_0 = const()[name = tensor<string, []>("aw_957_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_957_cast_fp16 = einsum(equation = aw_957_equation_0, values = (var_6385_cast_fp16_18, var_6363_cast_fp16_18))[name = tensor<string, []>("aw_957_cast_fp16")];
            tensor<string, []> aw_959_equation_0 = const()[name = tensor<string, []>("aw_959_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_959_cast_fp16 = einsum(equation = aw_959_equation_0, values = (var_6385_cast_fp16_19, var_6363_cast_fp16_19))[name = tensor<string, []>("aw_959_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6467_cast_fp16 = softmax(axis = var_6311, x = aw_921_cast_fp16)[name = tensor<string, []>("op_6467_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6468_cast_fp16 = softmax(axis = var_6311, x = aw_923_cast_fp16)[name = tensor<string, []>("op_6468_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6469_cast_fp16 = softmax(axis = var_6311, x = aw_925_cast_fp16)[name = tensor<string, []>("op_6469_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6470_cast_fp16 = softmax(axis = var_6311, x = aw_927_cast_fp16)[name = tensor<string, []>("op_6470_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6471_cast_fp16 = softmax(axis = var_6311, x = aw_929_cast_fp16)[name = tensor<string, []>("op_6471_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6472_cast_fp16 = softmax(axis = var_6311, x = aw_931_cast_fp16)[name = tensor<string, []>("op_6472_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6473_cast_fp16 = softmax(axis = var_6311, x = aw_933_cast_fp16)[name = tensor<string, []>("op_6473_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6474_cast_fp16 = softmax(axis = var_6311, x = aw_935_cast_fp16)[name = tensor<string, []>("op_6474_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6475_cast_fp16 = softmax(axis = var_6311, x = aw_937_cast_fp16)[name = tensor<string, []>("op_6475_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6476_cast_fp16 = softmax(axis = var_6311, x = aw_939_cast_fp16)[name = tensor<string, []>("op_6476_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6477_cast_fp16 = softmax(axis = var_6311, x = aw_941_cast_fp16)[name = tensor<string, []>("op_6477_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6478_cast_fp16 = softmax(axis = var_6311, x = aw_943_cast_fp16)[name = tensor<string, []>("op_6478_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6479_cast_fp16 = softmax(axis = var_6311, x = aw_945_cast_fp16)[name = tensor<string, []>("op_6479_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6480_cast_fp16 = softmax(axis = var_6311, x = aw_947_cast_fp16)[name = tensor<string, []>("op_6480_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6481_cast_fp16 = softmax(axis = var_6311, x = aw_949_cast_fp16)[name = tensor<string, []>("op_6481_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6482_cast_fp16 = softmax(axis = var_6311, x = aw_951_cast_fp16)[name = tensor<string, []>("op_6482_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6483_cast_fp16 = softmax(axis = var_6311, x = aw_953_cast_fp16)[name = tensor<string, []>("op_6483_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6484_cast_fp16 = softmax(axis = var_6311, x = aw_955_cast_fp16)[name = tensor<string, []>("op_6484_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6485_cast_fp16 = softmax(axis = var_6311, x = aw_957_cast_fp16)[name = tensor<string, []>("op_6485_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6486_cast_fp16 = softmax(axis = var_6311, x = aw_959_cast_fp16)[name = tensor<string, []>("op_6486_cast_fp16")];
            tensor<string, []> var_6488_equation_0 = const()[name = tensor<string, []>("op_6488_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6488_cast_fp16 = einsum(equation = var_6488_equation_0, values = (var_6406_cast_fp16_0, var_6467_cast_fp16))[name = tensor<string, []>("op_6488_cast_fp16")];
            tensor<string, []> var_6490_equation_0 = const()[name = tensor<string, []>("op_6490_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6490_cast_fp16 = einsum(equation = var_6490_equation_0, values = (var_6406_cast_fp16_1, var_6468_cast_fp16))[name = tensor<string, []>("op_6490_cast_fp16")];
            tensor<string, []> var_6492_equation_0 = const()[name = tensor<string, []>("op_6492_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6492_cast_fp16 = einsum(equation = var_6492_equation_0, values = (var_6406_cast_fp16_2, var_6469_cast_fp16))[name = tensor<string, []>("op_6492_cast_fp16")];
            tensor<string, []> var_6494_equation_0 = const()[name = tensor<string, []>("op_6494_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6494_cast_fp16 = einsum(equation = var_6494_equation_0, values = (var_6406_cast_fp16_3, var_6470_cast_fp16))[name = tensor<string, []>("op_6494_cast_fp16")];
            tensor<string, []> var_6496_equation_0 = const()[name = tensor<string, []>("op_6496_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6496_cast_fp16 = einsum(equation = var_6496_equation_0, values = (var_6406_cast_fp16_4, var_6471_cast_fp16))[name = tensor<string, []>("op_6496_cast_fp16")];
            tensor<string, []> var_6498_equation_0 = const()[name = tensor<string, []>("op_6498_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6498_cast_fp16 = einsum(equation = var_6498_equation_0, values = (var_6406_cast_fp16_5, var_6472_cast_fp16))[name = tensor<string, []>("op_6498_cast_fp16")];
            tensor<string, []> var_6500_equation_0 = const()[name = tensor<string, []>("op_6500_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6500_cast_fp16 = einsum(equation = var_6500_equation_0, values = (var_6406_cast_fp16_6, var_6473_cast_fp16))[name = tensor<string, []>("op_6500_cast_fp16")];
            tensor<string, []> var_6502_equation_0 = const()[name = tensor<string, []>("op_6502_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6502_cast_fp16 = einsum(equation = var_6502_equation_0, values = (var_6406_cast_fp16_7, var_6474_cast_fp16))[name = tensor<string, []>("op_6502_cast_fp16")];
            tensor<string, []> var_6504_equation_0 = const()[name = tensor<string, []>("op_6504_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6504_cast_fp16 = einsum(equation = var_6504_equation_0, values = (var_6406_cast_fp16_8, var_6475_cast_fp16))[name = tensor<string, []>("op_6504_cast_fp16")];
            tensor<string, []> var_6506_equation_0 = const()[name = tensor<string, []>("op_6506_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6506_cast_fp16 = einsum(equation = var_6506_equation_0, values = (var_6406_cast_fp16_9, var_6476_cast_fp16))[name = tensor<string, []>("op_6506_cast_fp16")];
            tensor<string, []> var_6508_equation_0 = const()[name = tensor<string, []>("op_6508_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6508_cast_fp16 = einsum(equation = var_6508_equation_0, values = (var_6406_cast_fp16_10, var_6477_cast_fp16))[name = tensor<string, []>("op_6508_cast_fp16")];
            tensor<string, []> var_6510_equation_0 = const()[name = tensor<string, []>("op_6510_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6510_cast_fp16 = einsum(equation = var_6510_equation_0, values = (var_6406_cast_fp16_11, var_6478_cast_fp16))[name = tensor<string, []>("op_6510_cast_fp16")];
            tensor<string, []> var_6512_equation_0 = const()[name = tensor<string, []>("op_6512_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6512_cast_fp16 = einsum(equation = var_6512_equation_0, values = (var_6406_cast_fp16_12, var_6479_cast_fp16))[name = tensor<string, []>("op_6512_cast_fp16")];
            tensor<string, []> var_6514_equation_0 = const()[name = tensor<string, []>("op_6514_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6514_cast_fp16 = einsum(equation = var_6514_equation_0, values = (var_6406_cast_fp16_13, var_6480_cast_fp16))[name = tensor<string, []>("op_6514_cast_fp16")];
            tensor<string, []> var_6516_equation_0 = const()[name = tensor<string, []>("op_6516_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6516_cast_fp16 = einsum(equation = var_6516_equation_0, values = (var_6406_cast_fp16_14, var_6481_cast_fp16))[name = tensor<string, []>("op_6516_cast_fp16")];
            tensor<string, []> var_6518_equation_0 = const()[name = tensor<string, []>("op_6518_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6518_cast_fp16 = einsum(equation = var_6518_equation_0, values = (var_6406_cast_fp16_15, var_6482_cast_fp16))[name = tensor<string, []>("op_6518_cast_fp16")];
            tensor<string, []> var_6520_equation_0 = const()[name = tensor<string, []>("op_6520_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6520_cast_fp16 = einsum(equation = var_6520_equation_0, values = (var_6406_cast_fp16_16, var_6483_cast_fp16))[name = tensor<string, []>("op_6520_cast_fp16")];
            tensor<string, []> var_6522_equation_0 = const()[name = tensor<string, []>("op_6522_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6522_cast_fp16 = einsum(equation = var_6522_equation_0, values = (var_6406_cast_fp16_17, var_6484_cast_fp16))[name = tensor<string, []>("op_6522_cast_fp16")];
            tensor<string, []> var_6524_equation_0 = const()[name = tensor<string, []>("op_6524_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6524_cast_fp16 = einsum(equation = var_6524_equation_0, values = (var_6406_cast_fp16_18, var_6485_cast_fp16))[name = tensor<string, []>("op_6524_cast_fp16")];
            tensor<string, []> var_6526_equation_0 = const()[name = tensor<string, []>("op_6526_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6526_cast_fp16 = einsum(equation = var_6526_equation_0, values = (var_6406_cast_fp16_19, var_6486_cast_fp16))[name = tensor<string, []>("op_6526_cast_fp16")];
            tensor<bool, []> input_235_interleave_0 = const()[name = tensor<string, []>("input_235_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_235_cast_fp16 = concat(axis = var_6311, interleave = input_235_interleave_0, values = (var_6488_cast_fp16, var_6490_cast_fp16, var_6492_cast_fp16, var_6494_cast_fp16, var_6496_cast_fp16, var_6498_cast_fp16, var_6500_cast_fp16, var_6502_cast_fp16, var_6504_cast_fp16, var_6506_cast_fp16, var_6508_cast_fp16, var_6510_cast_fp16, var_6512_cast_fp16, var_6514_cast_fp16, var_6516_cast_fp16, var_6518_cast_fp16, var_6520_cast_fp16, var_6522_cast_fp16, var_6524_cast_fp16, var_6526_cast_fp16))[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<string, []> var_6535_pad_type_0 = const()[name = tensor<string, []>("op_6535_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6535_strides_0 = const()[name = tensor<string, []>("op_6535_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6535_pad_0 = const()[name = tensor<string, []>("op_6535_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6535_dilations_0 = const()[name = tensor<string, []>("op_6535_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6535_groups_0 = const()[name = tensor<string, []>("op_6535_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_23_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(929625472)))];
            tensor<fp16, [1280]> blocks_23_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(932902336)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6535_cast_fp16 = conv(bias = blocks_23_attn_out_bias_to_fp16, dilations = var_6535_dilations_0, groups = var_6535_groups_0, pad = var_6535_pad_0, pad_type = var_6535_pad_type_0, strides = var_6535_strides_0, weight = blocks_23_attn_out_weight_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("op_6535_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_95_cast_fp16 = add(x = inputs_93_cast_fp16, y = var_6535_cast_fp16)[name = tensor<string, []>("inputs_95_cast_fp16")];
            tensor<int32, [1]> input_237_axes_0 = const()[name = tensor<string, []>("input_237_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_237_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_237_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(932904960)))];
            tensor<fp16, [1280]> input_237_beta_0_to_fp16 = const()[name = tensor<string, []>("input_237_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(932907584)))];
            tensor<fp16, []> var_6545_to_fp16 = const()[name = tensor<string, []>("op_6545_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_237_cast_fp16 = layer_norm(axes = input_237_axes_0, beta = input_237_beta_0_to_fp16, epsilon = var_6545_to_fp16, gamma = input_237_gamma_0_to_fp16, x = inputs_95_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_239_strides_0 = const()[name = tensor<string, []>("input_239_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_239_dilations_0 = const()[name = tensor<string, []>("input_239_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_239_groups_0 = const()[name = tensor<string, []>("input_239_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_23_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(932910208)))];
            tensor<fp16, [5120]> blocks_23_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(946017472)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_239_cast_fp16 = conv(bias = blocks_23_mlp_0_bias_to_fp16, dilations = input_239_dilations_0, groups = input_239_groups_0, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = input_239_strides_0, weight = blocks_23_mlp_0_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<string, []> input_241_mode_0 = const()[name = tensor<string, []>("input_241_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_241_cast_fp16 = gelu(mode = input_241_mode_0, x = input_239_cast_fp16)[name = tensor<string, []>("input_241_cast_fp16")];
            tensor<string, []> var_6571_pad_type_0 = const()[name = tensor<string, []>("op_6571_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6571_strides_0 = const()[name = tensor<string, []>("op_6571_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6571_pad_0 = const()[name = tensor<string, []>("op_6571_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6571_dilations_0 = const()[name = tensor<string, []>("op_6571_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6571_groups_0 = const()[name = tensor<string, []>("op_6571_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_23_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(946027776)))];
            tensor<fp16, [1280]> blocks_23_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(959135040)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6571_cast_fp16 = conv(bias = blocks_23_mlp_2_bias_to_fp16, dilations = var_6571_dilations_0, groups = var_6571_groups_0, pad = var_6571_pad_0, pad_type = var_6571_pad_type_0, strides = var_6571_strides_0, weight = blocks_23_mlp_2_weight_to_fp16, x = input_241_cast_fp16)[name = tensor<string, []>("op_6571_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_97_cast_fp16 = add(x = inputs_95_cast_fp16, y = var_6571_cast_fp16)[name = tensor<string, []>("inputs_97_cast_fp16")];
            tensor<int32, []> var_6580 = const()[name = tensor<string, []>("op_6580"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_243_axes_0 = const()[name = tensor<string, []>("input_243_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_243_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_243_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(959137664)))];
            tensor<fp16, [1280]> input_243_beta_0_to_fp16 = const()[name = tensor<string, []>("input_243_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(959140288)))];
            tensor<fp16, []> var_6596_to_fp16 = const()[name = tensor<string, []>("op_6596_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_243_cast_fp16 = layer_norm(axes = input_243_axes_0, beta = input_243_beta_0_to_fp16, epsilon = var_6596_to_fp16, gamma = input_243_gamma_0_to_fp16, x = inputs_97_cast_fp16)[name = tensor<string, []>("input_243_cast_fp16")];
            tensor<string, []> q_49_pad_type_0 = const()[name = tensor<string, []>("q_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_49_strides_0 = const()[name = tensor<string, []>("q_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_49_pad_0 = const()[name = tensor<string, []>("q_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_49_dilations_0 = const()[name = tensor<string, []>("q_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_49_groups_0 = const()[name = tensor<string, []>("q_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_6631_weight_0_to_fp16 = const()[name = tensor<string, []>("op_6631_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(959142912)))];
            tensor<fp16, [1280]> var_6631_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6631_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(962419776)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6631_cast_fp16 = conv(bias = var_6631_bias_0_to_fp16, dilations = q_49_dilations_0, groups = q_49_groups_0, pad = q_49_pad_0, pad_type = q_49_pad_type_0, strides = q_49_strides_0, weight = var_6631_weight_0_to_fp16, x = input_243_cast_fp16)[name = tensor<string, []>("op_6631_cast_fp16")];
            tensor<string, []> k_49_pad_type_0 = const()[name = tensor<string, []>("k_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_49_strides_0 = const()[name = tensor<string, []>("k_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_49_pad_0 = const()[name = tensor<string, []>("k_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_49_dilations_0 = const()[name = tensor<string, []>("k_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_49_groups_0 = const()[name = tensor<string, []>("k_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_24_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_24_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(962422400)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_49_cast_fp16 = conv(dilations = k_49_dilations_0, groups = k_49_groups_0, pad = k_49_pad_0, pad_type = k_49_pad_type_0, strides = k_49_strides_0, weight = blocks_24_attn_key_weight_to_fp16, x = input_243_cast_fp16)[name = tensor<string, []>("k_49_cast_fp16")];
            tensor<string, []> var_6629_pad_type_0 = const()[name = tensor<string, []>("op_6629_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6629_strides_0 = const()[name = tensor<string, []>("op_6629_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6629_pad_0 = const()[name = tensor<string, []>("op_6629_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6629_dilations_0 = const()[name = tensor<string, []>("op_6629_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6629_groups_0 = const()[name = tensor<string, []>("op_6629_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_24_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_24_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(965699264)))];
            tensor<fp16, [1280]> blocks_24_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_24_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(968976128)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6629_cast_fp16 = conv(bias = blocks_24_attn_value_bias_to_fp16, dilations = var_6629_dilations_0, groups = var_6629_groups_0, pad = var_6629_pad_0, pad_type = var_6629_pad_type_0, strides = var_6629_strides_0, weight = blocks_24_attn_value_weight_to_fp16, x = input_243_cast_fp16)[name = tensor<string, []>("op_6629_cast_fp16")];
            tensor<int32, [20]> tile_72 = const()[name = tensor<string, []>("tile_72"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6632_axis_0 = const()[name = tensor<string, []>("op_6632_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6632_cast_fp16_19 = split(axis = var_6632_axis_0, split_sizes = tile_72, x = var_6631_cast_fp16)[name = tensor<string, []>("op_6632_cast_fp16")];
            tensor<int32, [4]> var_6653_perm_0 = const()[name = tensor<string, []>("op_6653_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_73 = const()[name = tensor<string, []>("tile_73"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6654_axis_0 = const()[name = tensor<string, []>("op_6654_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_6653_cast_fp16 = transpose(perm = var_6653_perm_0, x = k_49_cast_fp16)[name = tensor<string, []>("transpose_8")];
            tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_6654_cast_fp16_19 = split(axis = var_6654_axis_0, split_sizes = tile_73, x = var_6653_cast_fp16)[name = tensor<string, []>("op_6654_cast_fp16")];
            tensor<int32, [20]> tile_74 = const()[name = tensor<string, []>("tile_74"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6675_axis_0 = const()[name = tensor<string, []>("op_6675_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6675_cast_fp16_19 = split(axis = var_6675_axis_0, split_sizes = tile_74, x = var_6629_cast_fp16)[name = tensor<string, []>("op_6675_cast_fp16")];
            tensor<string, []> aw_961_equation_0 = const()[name = tensor<string, []>("aw_961_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_961_cast_fp16 = einsum(equation = aw_961_equation_0, values = (var_6654_cast_fp16_0, var_6632_cast_fp16_0))[name = tensor<string, []>("aw_961_cast_fp16")];
            tensor<string, []> aw_963_equation_0 = const()[name = tensor<string, []>("aw_963_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_963_cast_fp16 = einsum(equation = aw_963_equation_0, values = (var_6654_cast_fp16_1, var_6632_cast_fp16_1))[name = tensor<string, []>("aw_963_cast_fp16")];
            tensor<string, []> aw_965_equation_0 = const()[name = tensor<string, []>("aw_965_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_965_cast_fp16 = einsum(equation = aw_965_equation_0, values = (var_6654_cast_fp16_2, var_6632_cast_fp16_2))[name = tensor<string, []>("aw_965_cast_fp16")];
            tensor<string, []> aw_967_equation_0 = const()[name = tensor<string, []>("aw_967_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_967_cast_fp16 = einsum(equation = aw_967_equation_0, values = (var_6654_cast_fp16_3, var_6632_cast_fp16_3))[name = tensor<string, []>("aw_967_cast_fp16")];
            tensor<string, []> aw_969_equation_0 = const()[name = tensor<string, []>("aw_969_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_969_cast_fp16 = einsum(equation = aw_969_equation_0, values = (var_6654_cast_fp16_4, var_6632_cast_fp16_4))[name = tensor<string, []>("aw_969_cast_fp16")];
            tensor<string, []> aw_971_equation_0 = const()[name = tensor<string, []>("aw_971_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_971_cast_fp16 = einsum(equation = aw_971_equation_0, values = (var_6654_cast_fp16_5, var_6632_cast_fp16_5))[name = tensor<string, []>("aw_971_cast_fp16")];
            tensor<string, []> aw_973_equation_0 = const()[name = tensor<string, []>("aw_973_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_973_cast_fp16 = einsum(equation = aw_973_equation_0, values = (var_6654_cast_fp16_6, var_6632_cast_fp16_6))[name = tensor<string, []>("aw_973_cast_fp16")];
            tensor<string, []> aw_975_equation_0 = const()[name = tensor<string, []>("aw_975_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_975_cast_fp16 = einsum(equation = aw_975_equation_0, values = (var_6654_cast_fp16_7, var_6632_cast_fp16_7))[name = tensor<string, []>("aw_975_cast_fp16")];
            tensor<string, []> aw_977_equation_0 = const()[name = tensor<string, []>("aw_977_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_977_cast_fp16 = einsum(equation = aw_977_equation_0, values = (var_6654_cast_fp16_8, var_6632_cast_fp16_8))[name = tensor<string, []>("aw_977_cast_fp16")];
            tensor<string, []> aw_979_equation_0 = const()[name = tensor<string, []>("aw_979_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_979_cast_fp16 = einsum(equation = aw_979_equation_0, values = (var_6654_cast_fp16_9, var_6632_cast_fp16_9))[name = tensor<string, []>("aw_979_cast_fp16")];
            tensor<string, []> aw_981_equation_0 = const()[name = tensor<string, []>("aw_981_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_981_cast_fp16 = einsum(equation = aw_981_equation_0, values = (var_6654_cast_fp16_10, var_6632_cast_fp16_10))[name = tensor<string, []>("aw_981_cast_fp16")];
            tensor<string, []> aw_983_equation_0 = const()[name = tensor<string, []>("aw_983_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_983_cast_fp16 = einsum(equation = aw_983_equation_0, values = (var_6654_cast_fp16_11, var_6632_cast_fp16_11))[name = tensor<string, []>("aw_983_cast_fp16")];
            tensor<string, []> aw_985_equation_0 = const()[name = tensor<string, []>("aw_985_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_985_cast_fp16 = einsum(equation = aw_985_equation_0, values = (var_6654_cast_fp16_12, var_6632_cast_fp16_12))[name = tensor<string, []>("aw_985_cast_fp16")];
            tensor<string, []> aw_987_equation_0 = const()[name = tensor<string, []>("aw_987_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_987_cast_fp16 = einsum(equation = aw_987_equation_0, values = (var_6654_cast_fp16_13, var_6632_cast_fp16_13))[name = tensor<string, []>("aw_987_cast_fp16")];
            tensor<string, []> aw_989_equation_0 = const()[name = tensor<string, []>("aw_989_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_989_cast_fp16 = einsum(equation = aw_989_equation_0, values = (var_6654_cast_fp16_14, var_6632_cast_fp16_14))[name = tensor<string, []>("aw_989_cast_fp16")];
            tensor<string, []> aw_991_equation_0 = const()[name = tensor<string, []>("aw_991_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_991_cast_fp16 = einsum(equation = aw_991_equation_0, values = (var_6654_cast_fp16_15, var_6632_cast_fp16_15))[name = tensor<string, []>("aw_991_cast_fp16")];
            tensor<string, []> aw_993_equation_0 = const()[name = tensor<string, []>("aw_993_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_993_cast_fp16 = einsum(equation = aw_993_equation_0, values = (var_6654_cast_fp16_16, var_6632_cast_fp16_16))[name = tensor<string, []>("aw_993_cast_fp16")];
            tensor<string, []> aw_995_equation_0 = const()[name = tensor<string, []>("aw_995_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_995_cast_fp16 = einsum(equation = aw_995_equation_0, values = (var_6654_cast_fp16_17, var_6632_cast_fp16_17))[name = tensor<string, []>("aw_995_cast_fp16")];
            tensor<string, []> aw_997_equation_0 = const()[name = tensor<string, []>("aw_997_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_997_cast_fp16 = einsum(equation = aw_997_equation_0, values = (var_6654_cast_fp16_18, var_6632_cast_fp16_18))[name = tensor<string, []>("aw_997_cast_fp16")];
            tensor<string, []> aw_999_equation_0 = const()[name = tensor<string, []>("aw_999_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_999_cast_fp16 = einsum(equation = aw_999_equation_0, values = (var_6654_cast_fp16_19, var_6632_cast_fp16_19))[name = tensor<string, []>("aw_999_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6736_cast_fp16 = softmax(axis = var_6580, x = aw_961_cast_fp16)[name = tensor<string, []>("op_6736_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6737_cast_fp16 = softmax(axis = var_6580, x = aw_963_cast_fp16)[name = tensor<string, []>("op_6737_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6738_cast_fp16 = softmax(axis = var_6580, x = aw_965_cast_fp16)[name = tensor<string, []>("op_6738_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6739_cast_fp16 = softmax(axis = var_6580, x = aw_967_cast_fp16)[name = tensor<string, []>("op_6739_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6740_cast_fp16 = softmax(axis = var_6580, x = aw_969_cast_fp16)[name = tensor<string, []>("op_6740_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6741_cast_fp16 = softmax(axis = var_6580, x = aw_971_cast_fp16)[name = tensor<string, []>("op_6741_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6742_cast_fp16 = softmax(axis = var_6580, x = aw_973_cast_fp16)[name = tensor<string, []>("op_6742_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6743_cast_fp16 = softmax(axis = var_6580, x = aw_975_cast_fp16)[name = tensor<string, []>("op_6743_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6744_cast_fp16 = softmax(axis = var_6580, x = aw_977_cast_fp16)[name = tensor<string, []>("op_6744_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6745_cast_fp16 = softmax(axis = var_6580, x = aw_979_cast_fp16)[name = tensor<string, []>("op_6745_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6746_cast_fp16 = softmax(axis = var_6580, x = aw_981_cast_fp16)[name = tensor<string, []>("op_6746_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6747_cast_fp16 = softmax(axis = var_6580, x = aw_983_cast_fp16)[name = tensor<string, []>("op_6747_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6748_cast_fp16 = softmax(axis = var_6580, x = aw_985_cast_fp16)[name = tensor<string, []>("op_6748_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6749_cast_fp16 = softmax(axis = var_6580, x = aw_987_cast_fp16)[name = tensor<string, []>("op_6749_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6750_cast_fp16 = softmax(axis = var_6580, x = aw_989_cast_fp16)[name = tensor<string, []>("op_6750_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6751_cast_fp16 = softmax(axis = var_6580, x = aw_991_cast_fp16)[name = tensor<string, []>("op_6751_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6752_cast_fp16 = softmax(axis = var_6580, x = aw_993_cast_fp16)[name = tensor<string, []>("op_6752_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6753_cast_fp16 = softmax(axis = var_6580, x = aw_995_cast_fp16)[name = tensor<string, []>("op_6753_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6754_cast_fp16 = softmax(axis = var_6580, x = aw_997_cast_fp16)[name = tensor<string, []>("op_6754_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_6755_cast_fp16 = softmax(axis = var_6580, x = aw_999_cast_fp16)[name = tensor<string, []>("op_6755_cast_fp16")];
            tensor<string, []> var_6757_equation_0 = const()[name = tensor<string, []>("op_6757_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6757_cast_fp16 = einsum(equation = var_6757_equation_0, values = (var_6675_cast_fp16_0, var_6736_cast_fp16))[name = tensor<string, []>("op_6757_cast_fp16")];
            tensor<string, []> var_6759_equation_0 = const()[name = tensor<string, []>("op_6759_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6759_cast_fp16 = einsum(equation = var_6759_equation_0, values = (var_6675_cast_fp16_1, var_6737_cast_fp16))[name = tensor<string, []>("op_6759_cast_fp16")];
            tensor<string, []> var_6761_equation_0 = const()[name = tensor<string, []>("op_6761_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6761_cast_fp16 = einsum(equation = var_6761_equation_0, values = (var_6675_cast_fp16_2, var_6738_cast_fp16))[name = tensor<string, []>("op_6761_cast_fp16")];
            tensor<string, []> var_6763_equation_0 = const()[name = tensor<string, []>("op_6763_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6763_cast_fp16 = einsum(equation = var_6763_equation_0, values = (var_6675_cast_fp16_3, var_6739_cast_fp16))[name = tensor<string, []>("op_6763_cast_fp16")];
            tensor<string, []> var_6765_equation_0 = const()[name = tensor<string, []>("op_6765_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6765_cast_fp16 = einsum(equation = var_6765_equation_0, values = (var_6675_cast_fp16_4, var_6740_cast_fp16))[name = tensor<string, []>("op_6765_cast_fp16")];
            tensor<string, []> var_6767_equation_0 = const()[name = tensor<string, []>("op_6767_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6767_cast_fp16 = einsum(equation = var_6767_equation_0, values = (var_6675_cast_fp16_5, var_6741_cast_fp16))[name = tensor<string, []>("op_6767_cast_fp16")];
            tensor<string, []> var_6769_equation_0 = const()[name = tensor<string, []>("op_6769_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6769_cast_fp16 = einsum(equation = var_6769_equation_0, values = (var_6675_cast_fp16_6, var_6742_cast_fp16))[name = tensor<string, []>("op_6769_cast_fp16")];
            tensor<string, []> var_6771_equation_0 = const()[name = tensor<string, []>("op_6771_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6771_cast_fp16 = einsum(equation = var_6771_equation_0, values = (var_6675_cast_fp16_7, var_6743_cast_fp16))[name = tensor<string, []>("op_6771_cast_fp16")];
            tensor<string, []> var_6773_equation_0 = const()[name = tensor<string, []>("op_6773_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6773_cast_fp16 = einsum(equation = var_6773_equation_0, values = (var_6675_cast_fp16_8, var_6744_cast_fp16))[name = tensor<string, []>("op_6773_cast_fp16")];
            tensor<string, []> var_6775_equation_0 = const()[name = tensor<string, []>("op_6775_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6775_cast_fp16 = einsum(equation = var_6775_equation_0, values = (var_6675_cast_fp16_9, var_6745_cast_fp16))[name = tensor<string, []>("op_6775_cast_fp16")];
            tensor<string, []> var_6777_equation_0 = const()[name = tensor<string, []>("op_6777_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6777_cast_fp16 = einsum(equation = var_6777_equation_0, values = (var_6675_cast_fp16_10, var_6746_cast_fp16))[name = tensor<string, []>("op_6777_cast_fp16")];
            tensor<string, []> var_6779_equation_0 = const()[name = tensor<string, []>("op_6779_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6779_cast_fp16 = einsum(equation = var_6779_equation_0, values = (var_6675_cast_fp16_11, var_6747_cast_fp16))[name = tensor<string, []>("op_6779_cast_fp16")];
            tensor<string, []> var_6781_equation_0 = const()[name = tensor<string, []>("op_6781_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6781_cast_fp16 = einsum(equation = var_6781_equation_0, values = (var_6675_cast_fp16_12, var_6748_cast_fp16))[name = tensor<string, []>("op_6781_cast_fp16")];
            tensor<string, []> var_6783_equation_0 = const()[name = tensor<string, []>("op_6783_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6783_cast_fp16 = einsum(equation = var_6783_equation_0, values = (var_6675_cast_fp16_13, var_6749_cast_fp16))[name = tensor<string, []>("op_6783_cast_fp16")];
            tensor<string, []> var_6785_equation_0 = const()[name = tensor<string, []>("op_6785_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6785_cast_fp16 = einsum(equation = var_6785_equation_0, values = (var_6675_cast_fp16_14, var_6750_cast_fp16))[name = tensor<string, []>("op_6785_cast_fp16")];
            tensor<string, []> var_6787_equation_0 = const()[name = tensor<string, []>("op_6787_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6787_cast_fp16 = einsum(equation = var_6787_equation_0, values = (var_6675_cast_fp16_15, var_6751_cast_fp16))[name = tensor<string, []>("op_6787_cast_fp16")];
            tensor<string, []> var_6789_equation_0 = const()[name = tensor<string, []>("op_6789_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6789_cast_fp16 = einsum(equation = var_6789_equation_0, values = (var_6675_cast_fp16_16, var_6752_cast_fp16))[name = tensor<string, []>("op_6789_cast_fp16")];
            tensor<string, []> var_6791_equation_0 = const()[name = tensor<string, []>("op_6791_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6791_cast_fp16 = einsum(equation = var_6791_equation_0, values = (var_6675_cast_fp16_17, var_6753_cast_fp16))[name = tensor<string, []>("op_6791_cast_fp16")];
            tensor<string, []> var_6793_equation_0 = const()[name = tensor<string, []>("op_6793_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6793_cast_fp16 = einsum(equation = var_6793_equation_0, values = (var_6675_cast_fp16_18, var_6754_cast_fp16))[name = tensor<string, []>("op_6793_cast_fp16")];
            tensor<string, []> var_6795_equation_0 = const()[name = tensor<string, []>("op_6795_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_6795_cast_fp16 = einsum(equation = var_6795_equation_0, values = (var_6675_cast_fp16_19, var_6755_cast_fp16))[name = tensor<string, []>("op_6795_cast_fp16")];
            tensor<bool, []> input_245_interleave_0 = const()[name = tensor<string, []>("input_245_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_245_cast_fp16 = concat(axis = var_6580, interleave = input_245_interleave_0, values = (var_6757_cast_fp16, var_6759_cast_fp16, var_6761_cast_fp16, var_6763_cast_fp16, var_6765_cast_fp16, var_6767_cast_fp16, var_6769_cast_fp16, var_6771_cast_fp16, var_6773_cast_fp16, var_6775_cast_fp16, var_6777_cast_fp16, var_6779_cast_fp16, var_6781_cast_fp16, var_6783_cast_fp16, var_6785_cast_fp16, var_6787_cast_fp16, var_6789_cast_fp16, var_6791_cast_fp16, var_6793_cast_fp16, var_6795_cast_fp16))[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<string, []> var_6804_pad_type_0 = const()[name = tensor<string, []>("op_6804_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6804_strides_0 = const()[name = tensor<string, []>("op_6804_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6804_pad_0 = const()[name = tensor<string, []>("op_6804_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6804_dilations_0 = const()[name = tensor<string, []>("op_6804_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6804_groups_0 = const()[name = tensor<string, []>("op_6804_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_24_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_24_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(968978752)))];
            tensor<fp16, [1280]> blocks_24_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_24_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(972255616)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6804_cast_fp16 = conv(bias = blocks_24_attn_out_bias_to_fp16, dilations = var_6804_dilations_0, groups = var_6804_groups_0, pad = var_6804_pad_0, pad_type = var_6804_pad_type_0, strides = var_6804_strides_0, weight = blocks_24_attn_out_weight_to_fp16, x = input_245_cast_fp16)[name = tensor<string, []>("op_6804_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_99_cast_fp16 = add(x = inputs_97_cast_fp16, y = var_6804_cast_fp16)[name = tensor<string, []>("inputs_99_cast_fp16")];
            tensor<int32, [1]> input_247_axes_0 = const()[name = tensor<string, []>("input_247_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_247_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_247_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(972258240)))];
            tensor<fp16, [1280]> input_247_beta_0_to_fp16 = const()[name = tensor<string, []>("input_247_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(972260864)))];
            tensor<fp16, []> var_6814_to_fp16 = const()[name = tensor<string, []>("op_6814_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_247_cast_fp16 = layer_norm(axes = input_247_axes_0, beta = input_247_beta_0_to_fp16, epsilon = var_6814_to_fp16, gamma = input_247_gamma_0_to_fp16, x = inputs_99_cast_fp16)[name = tensor<string, []>("input_247_cast_fp16")];
            tensor<string, []> input_249_pad_type_0 = const()[name = tensor<string, []>("input_249_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_249_strides_0 = const()[name = tensor<string, []>("input_249_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_249_pad_0 = const()[name = tensor<string, []>("input_249_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_249_dilations_0 = const()[name = tensor<string, []>("input_249_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_249_groups_0 = const()[name = tensor<string, []>("input_249_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_24_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_24_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(972263488)))];
            tensor<fp16, [5120]> blocks_24_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_24_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(985370752)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_249_cast_fp16 = conv(bias = blocks_24_mlp_0_bias_to_fp16, dilations = input_249_dilations_0, groups = input_249_groups_0, pad = input_249_pad_0, pad_type = input_249_pad_type_0, strides = input_249_strides_0, weight = blocks_24_mlp_0_weight_to_fp16, x = input_247_cast_fp16)[name = tensor<string, []>("input_249_cast_fp16")];
            tensor<string, []> input_251_mode_0 = const()[name = tensor<string, []>("input_251_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_251_cast_fp16 = gelu(mode = input_251_mode_0, x = input_249_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<string, []> var_6840_pad_type_0 = const()[name = tensor<string, []>("op_6840_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6840_strides_0 = const()[name = tensor<string, []>("op_6840_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6840_pad_0 = const()[name = tensor<string, []>("op_6840_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6840_dilations_0 = const()[name = tensor<string, []>("op_6840_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6840_groups_0 = const()[name = tensor<string, []>("op_6840_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_24_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_24_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(985381056)))];
            tensor<fp16, [1280]> blocks_24_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_24_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(998488320)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6840_cast_fp16 = conv(bias = blocks_24_mlp_2_bias_to_fp16, dilations = var_6840_dilations_0, groups = var_6840_groups_0, pad = var_6840_pad_0, pad_type = var_6840_pad_type_0, strides = var_6840_strides_0, weight = blocks_24_mlp_2_weight_to_fp16, x = input_251_cast_fp16)[name = tensor<string, []>("op_6840_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_101_cast_fp16 = add(x = inputs_99_cast_fp16, y = var_6840_cast_fp16)[name = tensor<string, []>("inputs_101_cast_fp16")];
            tensor<int32, []> var_6849 = const()[name = tensor<string, []>("op_6849"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_253_axes_0 = const()[name = tensor<string, []>("input_253_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_253_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_253_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(998490944)))];
            tensor<fp16, [1280]> input_253_beta_0_to_fp16 = const()[name = tensor<string, []>("input_253_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(998493568)))];
            tensor<fp16, []> var_6865_to_fp16 = const()[name = tensor<string, []>("op_6865_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_253_cast_fp16 = layer_norm(axes = input_253_axes_0, beta = input_253_beta_0_to_fp16, epsilon = var_6865_to_fp16, gamma = input_253_gamma_0_to_fp16, x = inputs_101_cast_fp16)[name = tensor<string, []>("input_253_cast_fp16")];
            tensor<string, []> q_51_pad_type_0 = const()[name = tensor<string, []>("q_51_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_51_strides_0 = const()[name = tensor<string, []>("q_51_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_51_pad_0 = const()[name = tensor<string, []>("q_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_51_dilations_0 = const()[name = tensor<string, []>("q_51_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_51_groups_0 = const()[name = tensor<string, []>("q_51_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_6900_weight_0_to_fp16 = const()[name = tensor<string, []>("op_6900_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(998496192)))];
            tensor<fp16, [1280]> var_6900_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6900_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1001773056)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6900_cast_fp16 = conv(bias = var_6900_bias_0_to_fp16, dilations = q_51_dilations_0, groups = q_51_groups_0, pad = q_51_pad_0, pad_type = q_51_pad_type_0, strides = q_51_strides_0, weight = var_6900_weight_0_to_fp16, x = input_253_cast_fp16)[name = tensor<string, []>("op_6900_cast_fp16")];
            tensor<string, []> k_51_pad_type_0 = const()[name = tensor<string, []>("k_51_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_51_strides_0 = const()[name = tensor<string, []>("k_51_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_51_pad_0 = const()[name = tensor<string, []>("k_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_51_dilations_0 = const()[name = tensor<string, []>("k_51_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_51_groups_0 = const()[name = tensor<string, []>("k_51_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_25_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_25_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1001775680)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_51_cast_fp16 = conv(dilations = k_51_dilations_0, groups = k_51_groups_0, pad = k_51_pad_0, pad_type = k_51_pad_type_0, strides = k_51_strides_0, weight = blocks_25_attn_key_weight_to_fp16, x = input_253_cast_fp16)[name = tensor<string, []>("k_51_cast_fp16")];
            tensor<string, []> var_6898_pad_type_0 = const()[name = tensor<string, []>("op_6898_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_6898_strides_0 = const()[name = tensor<string, []>("op_6898_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_6898_pad_0 = const()[name = tensor<string, []>("op_6898_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_6898_dilations_0 = const()[name = tensor<string, []>("op_6898_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_6898_groups_0 = const()[name = tensor<string, []>("op_6898_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_25_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_25_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1005052544)))];
            tensor<fp16, [1280]> blocks_25_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_25_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1008329408)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_6898_cast_fp16 = conv(bias = blocks_25_attn_value_bias_to_fp16, dilations = var_6898_dilations_0, groups = var_6898_groups_0, pad = var_6898_pad_0, pad_type = var_6898_pad_type_0, strides = var_6898_strides_0, weight = blocks_25_attn_value_weight_to_fp16, x = input_253_cast_fp16)[name = tensor<string, []>("op_6898_cast_fp16")];
            tensor<int32, [20]> tile_75 = const()[name = tensor<string, []>("tile_75"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6901_axis_0 = const()[name = tensor<string, []>("op_6901_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6901_cast_fp16_19 = split(axis = var_6901_axis_0, split_sizes = tile_75, x = var_6900_cast_fp16)[name = tensor<string, []>("op_6901_cast_fp16")];
            tensor<int32, [4]> var_6922_perm_0 = const()[name = tensor<string, []>("op_6922_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_76 = const()[name = tensor<string, []>("tile_76"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6923_axis_0 = const()[name = tensor<string, []>("op_6923_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_6922_cast_fp16 = transpose(perm = var_6922_perm_0, x = k_51_cast_fp16)[name = tensor<string, []>("transpose_7")];
            tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_6923_cast_fp16_19 = split(axis = var_6923_axis_0, split_sizes = tile_76, x = var_6922_cast_fp16)[name = tensor<string, []>("op_6923_cast_fp16")];
            tensor<int32, [20]> tile_77 = const()[name = tensor<string, []>("tile_77"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6944_axis_0 = const()[name = tensor<string, []>("op_6944_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_6944_cast_fp16_19 = split(axis = var_6944_axis_0, split_sizes = tile_77, x = var_6898_cast_fp16)[name = tensor<string, []>("op_6944_cast_fp16")];
            tensor<string, []> aw_1001_equation_0 = const()[name = tensor<string, []>("aw_1001_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1001_cast_fp16 = einsum(equation = aw_1001_equation_0, values = (var_6923_cast_fp16_0, var_6901_cast_fp16_0))[name = tensor<string, []>("aw_1001_cast_fp16")];
            tensor<string, []> aw_1003_equation_0 = const()[name = tensor<string, []>("aw_1003_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1003_cast_fp16 = einsum(equation = aw_1003_equation_0, values = (var_6923_cast_fp16_1, var_6901_cast_fp16_1))[name = tensor<string, []>("aw_1003_cast_fp16")];
            tensor<string, []> aw_1005_equation_0 = const()[name = tensor<string, []>("aw_1005_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1005_cast_fp16 = einsum(equation = aw_1005_equation_0, values = (var_6923_cast_fp16_2, var_6901_cast_fp16_2))[name = tensor<string, []>("aw_1005_cast_fp16")];
            tensor<string, []> aw_1007_equation_0 = const()[name = tensor<string, []>("aw_1007_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1007_cast_fp16 = einsum(equation = aw_1007_equation_0, values = (var_6923_cast_fp16_3, var_6901_cast_fp16_3))[name = tensor<string, []>("aw_1007_cast_fp16")];
            tensor<string, []> aw_1009_equation_0 = const()[name = tensor<string, []>("aw_1009_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1009_cast_fp16 = einsum(equation = aw_1009_equation_0, values = (var_6923_cast_fp16_4, var_6901_cast_fp16_4))[name = tensor<string, []>("aw_1009_cast_fp16")];
            tensor<string, []> aw_1011_equation_0 = const()[name = tensor<string, []>("aw_1011_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1011_cast_fp16 = einsum(equation = aw_1011_equation_0, values = (var_6923_cast_fp16_5, var_6901_cast_fp16_5))[name = tensor<string, []>("aw_1011_cast_fp16")];
            tensor<string, []> aw_1013_equation_0 = const()[name = tensor<string, []>("aw_1013_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1013_cast_fp16 = einsum(equation = aw_1013_equation_0, values = (var_6923_cast_fp16_6, var_6901_cast_fp16_6))[name = tensor<string, []>("aw_1013_cast_fp16")];
            tensor<string, []> aw_1015_equation_0 = const()[name = tensor<string, []>("aw_1015_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1015_cast_fp16 = einsum(equation = aw_1015_equation_0, values = (var_6923_cast_fp16_7, var_6901_cast_fp16_7))[name = tensor<string, []>("aw_1015_cast_fp16")];
            tensor<string, []> aw_1017_equation_0 = const()[name = tensor<string, []>("aw_1017_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1017_cast_fp16 = einsum(equation = aw_1017_equation_0, values = (var_6923_cast_fp16_8, var_6901_cast_fp16_8))[name = tensor<string, []>("aw_1017_cast_fp16")];
            tensor<string, []> aw_1019_equation_0 = const()[name = tensor<string, []>("aw_1019_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1019_cast_fp16 = einsum(equation = aw_1019_equation_0, values = (var_6923_cast_fp16_9, var_6901_cast_fp16_9))[name = tensor<string, []>("aw_1019_cast_fp16")];
            tensor<string, []> aw_1021_equation_0 = const()[name = tensor<string, []>("aw_1021_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1021_cast_fp16 = einsum(equation = aw_1021_equation_0, values = (var_6923_cast_fp16_10, var_6901_cast_fp16_10))[name = tensor<string, []>("aw_1021_cast_fp16")];
            tensor<string, []> aw_1023_equation_0 = const()[name = tensor<string, []>("aw_1023_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1023_cast_fp16 = einsum(equation = aw_1023_equation_0, values = (var_6923_cast_fp16_11, var_6901_cast_fp16_11))[name = tensor<string, []>("aw_1023_cast_fp16")];
            tensor<string, []> aw_1025_equation_0 = const()[name = tensor<string, []>("aw_1025_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1025_cast_fp16 = einsum(equation = aw_1025_equation_0, values = (var_6923_cast_fp16_12, var_6901_cast_fp16_12))[name = tensor<string, []>("aw_1025_cast_fp16")];
            tensor<string, []> aw_1027_equation_0 = const()[name = tensor<string, []>("aw_1027_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1027_cast_fp16 = einsum(equation = aw_1027_equation_0, values = (var_6923_cast_fp16_13, var_6901_cast_fp16_13))[name = tensor<string, []>("aw_1027_cast_fp16")];
            tensor<string, []> aw_1029_equation_0 = const()[name = tensor<string, []>("aw_1029_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1029_cast_fp16 = einsum(equation = aw_1029_equation_0, values = (var_6923_cast_fp16_14, var_6901_cast_fp16_14))[name = tensor<string, []>("aw_1029_cast_fp16")];
            tensor<string, []> aw_1031_equation_0 = const()[name = tensor<string, []>("aw_1031_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1031_cast_fp16 = einsum(equation = aw_1031_equation_0, values = (var_6923_cast_fp16_15, var_6901_cast_fp16_15))[name = tensor<string, []>("aw_1031_cast_fp16")];
            tensor<string, []> aw_1033_equation_0 = const()[name = tensor<string, []>("aw_1033_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1033_cast_fp16 = einsum(equation = aw_1033_equation_0, values = (var_6923_cast_fp16_16, var_6901_cast_fp16_16))[name = tensor<string, []>("aw_1033_cast_fp16")];
            tensor<string, []> aw_1035_equation_0 = const()[name = tensor<string, []>("aw_1035_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1035_cast_fp16 = einsum(equation = aw_1035_equation_0, values = (var_6923_cast_fp16_17, var_6901_cast_fp16_17))[name = tensor<string, []>("aw_1035_cast_fp16")];
            tensor<string, []> aw_1037_equation_0 = const()[name = tensor<string, []>("aw_1037_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1037_cast_fp16 = einsum(equation = aw_1037_equation_0, values = (var_6923_cast_fp16_18, var_6901_cast_fp16_18))[name = tensor<string, []>("aw_1037_cast_fp16")];
            tensor<string, []> aw_1039_equation_0 = const()[name = tensor<string, []>("aw_1039_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1039_cast_fp16 = einsum(equation = aw_1039_equation_0, values = (var_6923_cast_fp16_19, var_6901_cast_fp16_19))[name = tensor<string, []>("aw_1039_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7005_cast_fp16 = softmax(axis = var_6849, x = aw_1001_cast_fp16)[name = tensor<string, []>("op_7005_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7006_cast_fp16 = softmax(axis = var_6849, x = aw_1003_cast_fp16)[name = tensor<string, []>("op_7006_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7007_cast_fp16 = softmax(axis = var_6849, x = aw_1005_cast_fp16)[name = tensor<string, []>("op_7007_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7008_cast_fp16 = softmax(axis = var_6849, x = aw_1007_cast_fp16)[name = tensor<string, []>("op_7008_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7009_cast_fp16 = softmax(axis = var_6849, x = aw_1009_cast_fp16)[name = tensor<string, []>("op_7009_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7010_cast_fp16 = softmax(axis = var_6849, x = aw_1011_cast_fp16)[name = tensor<string, []>("op_7010_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7011_cast_fp16 = softmax(axis = var_6849, x = aw_1013_cast_fp16)[name = tensor<string, []>("op_7011_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7012_cast_fp16 = softmax(axis = var_6849, x = aw_1015_cast_fp16)[name = tensor<string, []>("op_7012_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7013_cast_fp16 = softmax(axis = var_6849, x = aw_1017_cast_fp16)[name = tensor<string, []>("op_7013_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7014_cast_fp16 = softmax(axis = var_6849, x = aw_1019_cast_fp16)[name = tensor<string, []>("op_7014_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7015_cast_fp16 = softmax(axis = var_6849, x = aw_1021_cast_fp16)[name = tensor<string, []>("op_7015_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7016_cast_fp16 = softmax(axis = var_6849, x = aw_1023_cast_fp16)[name = tensor<string, []>("op_7016_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7017_cast_fp16 = softmax(axis = var_6849, x = aw_1025_cast_fp16)[name = tensor<string, []>("op_7017_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7018_cast_fp16 = softmax(axis = var_6849, x = aw_1027_cast_fp16)[name = tensor<string, []>("op_7018_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7019_cast_fp16 = softmax(axis = var_6849, x = aw_1029_cast_fp16)[name = tensor<string, []>("op_7019_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7020_cast_fp16 = softmax(axis = var_6849, x = aw_1031_cast_fp16)[name = tensor<string, []>("op_7020_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7021_cast_fp16 = softmax(axis = var_6849, x = aw_1033_cast_fp16)[name = tensor<string, []>("op_7021_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7022_cast_fp16 = softmax(axis = var_6849, x = aw_1035_cast_fp16)[name = tensor<string, []>("op_7022_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7023_cast_fp16 = softmax(axis = var_6849, x = aw_1037_cast_fp16)[name = tensor<string, []>("op_7023_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7024_cast_fp16 = softmax(axis = var_6849, x = aw_1039_cast_fp16)[name = tensor<string, []>("op_7024_cast_fp16")];
            tensor<string, []> var_7026_equation_0 = const()[name = tensor<string, []>("op_7026_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7026_cast_fp16 = einsum(equation = var_7026_equation_0, values = (var_6944_cast_fp16_0, var_7005_cast_fp16))[name = tensor<string, []>("op_7026_cast_fp16")];
            tensor<string, []> var_7028_equation_0 = const()[name = tensor<string, []>("op_7028_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7028_cast_fp16 = einsum(equation = var_7028_equation_0, values = (var_6944_cast_fp16_1, var_7006_cast_fp16))[name = tensor<string, []>("op_7028_cast_fp16")];
            tensor<string, []> var_7030_equation_0 = const()[name = tensor<string, []>("op_7030_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7030_cast_fp16 = einsum(equation = var_7030_equation_0, values = (var_6944_cast_fp16_2, var_7007_cast_fp16))[name = tensor<string, []>("op_7030_cast_fp16")];
            tensor<string, []> var_7032_equation_0 = const()[name = tensor<string, []>("op_7032_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7032_cast_fp16 = einsum(equation = var_7032_equation_0, values = (var_6944_cast_fp16_3, var_7008_cast_fp16))[name = tensor<string, []>("op_7032_cast_fp16")];
            tensor<string, []> var_7034_equation_0 = const()[name = tensor<string, []>("op_7034_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7034_cast_fp16 = einsum(equation = var_7034_equation_0, values = (var_6944_cast_fp16_4, var_7009_cast_fp16))[name = tensor<string, []>("op_7034_cast_fp16")];
            tensor<string, []> var_7036_equation_0 = const()[name = tensor<string, []>("op_7036_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7036_cast_fp16 = einsum(equation = var_7036_equation_0, values = (var_6944_cast_fp16_5, var_7010_cast_fp16))[name = tensor<string, []>("op_7036_cast_fp16")];
            tensor<string, []> var_7038_equation_0 = const()[name = tensor<string, []>("op_7038_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7038_cast_fp16 = einsum(equation = var_7038_equation_0, values = (var_6944_cast_fp16_6, var_7011_cast_fp16))[name = tensor<string, []>("op_7038_cast_fp16")];
            tensor<string, []> var_7040_equation_0 = const()[name = tensor<string, []>("op_7040_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7040_cast_fp16 = einsum(equation = var_7040_equation_0, values = (var_6944_cast_fp16_7, var_7012_cast_fp16))[name = tensor<string, []>("op_7040_cast_fp16")];
            tensor<string, []> var_7042_equation_0 = const()[name = tensor<string, []>("op_7042_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7042_cast_fp16 = einsum(equation = var_7042_equation_0, values = (var_6944_cast_fp16_8, var_7013_cast_fp16))[name = tensor<string, []>("op_7042_cast_fp16")];
            tensor<string, []> var_7044_equation_0 = const()[name = tensor<string, []>("op_7044_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7044_cast_fp16 = einsum(equation = var_7044_equation_0, values = (var_6944_cast_fp16_9, var_7014_cast_fp16))[name = tensor<string, []>("op_7044_cast_fp16")];
            tensor<string, []> var_7046_equation_0 = const()[name = tensor<string, []>("op_7046_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7046_cast_fp16 = einsum(equation = var_7046_equation_0, values = (var_6944_cast_fp16_10, var_7015_cast_fp16))[name = tensor<string, []>("op_7046_cast_fp16")];
            tensor<string, []> var_7048_equation_0 = const()[name = tensor<string, []>("op_7048_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7048_cast_fp16 = einsum(equation = var_7048_equation_0, values = (var_6944_cast_fp16_11, var_7016_cast_fp16))[name = tensor<string, []>("op_7048_cast_fp16")];
            tensor<string, []> var_7050_equation_0 = const()[name = tensor<string, []>("op_7050_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7050_cast_fp16 = einsum(equation = var_7050_equation_0, values = (var_6944_cast_fp16_12, var_7017_cast_fp16))[name = tensor<string, []>("op_7050_cast_fp16")];
            tensor<string, []> var_7052_equation_0 = const()[name = tensor<string, []>("op_7052_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7052_cast_fp16 = einsum(equation = var_7052_equation_0, values = (var_6944_cast_fp16_13, var_7018_cast_fp16))[name = tensor<string, []>("op_7052_cast_fp16")];
            tensor<string, []> var_7054_equation_0 = const()[name = tensor<string, []>("op_7054_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7054_cast_fp16 = einsum(equation = var_7054_equation_0, values = (var_6944_cast_fp16_14, var_7019_cast_fp16))[name = tensor<string, []>("op_7054_cast_fp16")];
            tensor<string, []> var_7056_equation_0 = const()[name = tensor<string, []>("op_7056_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7056_cast_fp16 = einsum(equation = var_7056_equation_0, values = (var_6944_cast_fp16_15, var_7020_cast_fp16))[name = tensor<string, []>("op_7056_cast_fp16")];
            tensor<string, []> var_7058_equation_0 = const()[name = tensor<string, []>("op_7058_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7058_cast_fp16 = einsum(equation = var_7058_equation_0, values = (var_6944_cast_fp16_16, var_7021_cast_fp16))[name = tensor<string, []>("op_7058_cast_fp16")];
            tensor<string, []> var_7060_equation_0 = const()[name = tensor<string, []>("op_7060_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7060_cast_fp16 = einsum(equation = var_7060_equation_0, values = (var_6944_cast_fp16_17, var_7022_cast_fp16))[name = tensor<string, []>("op_7060_cast_fp16")];
            tensor<string, []> var_7062_equation_0 = const()[name = tensor<string, []>("op_7062_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7062_cast_fp16 = einsum(equation = var_7062_equation_0, values = (var_6944_cast_fp16_18, var_7023_cast_fp16))[name = tensor<string, []>("op_7062_cast_fp16")];
            tensor<string, []> var_7064_equation_0 = const()[name = tensor<string, []>("op_7064_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7064_cast_fp16 = einsum(equation = var_7064_equation_0, values = (var_6944_cast_fp16_19, var_7024_cast_fp16))[name = tensor<string, []>("op_7064_cast_fp16")];
            tensor<bool, []> input_255_interleave_0 = const()[name = tensor<string, []>("input_255_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_255_cast_fp16 = concat(axis = var_6849, interleave = input_255_interleave_0, values = (var_7026_cast_fp16, var_7028_cast_fp16, var_7030_cast_fp16, var_7032_cast_fp16, var_7034_cast_fp16, var_7036_cast_fp16, var_7038_cast_fp16, var_7040_cast_fp16, var_7042_cast_fp16, var_7044_cast_fp16, var_7046_cast_fp16, var_7048_cast_fp16, var_7050_cast_fp16, var_7052_cast_fp16, var_7054_cast_fp16, var_7056_cast_fp16, var_7058_cast_fp16, var_7060_cast_fp16, var_7062_cast_fp16, var_7064_cast_fp16))[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<string, []> var_7073_pad_type_0 = const()[name = tensor<string, []>("op_7073_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7073_strides_0 = const()[name = tensor<string, []>("op_7073_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7073_pad_0 = const()[name = tensor<string, []>("op_7073_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7073_dilations_0 = const()[name = tensor<string, []>("op_7073_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7073_groups_0 = const()[name = tensor<string, []>("op_7073_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_25_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_25_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1008332032)))];
            tensor<fp16, [1280]> blocks_25_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_25_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1011608896)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7073_cast_fp16 = conv(bias = blocks_25_attn_out_bias_to_fp16, dilations = var_7073_dilations_0, groups = var_7073_groups_0, pad = var_7073_pad_0, pad_type = var_7073_pad_type_0, strides = var_7073_strides_0, weight = blocks_25_attn_out_weight_to_fp16, x = input_255_cast_fp16)[name = tensor<string, []>("op_7073_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_103_cast_fp16 = add(x = inputs_101_cast_fp16, y = var_7073_cast_fp16)[name = tensor<string, []>("inputs_103_cast_fp16")];
            tensor<int32, [1]> input_257_axes_0 = const()[name = tensor<string, []>("input_257_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_257_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_257_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1011611520)))];
            tensor<fp16, [1280]> input_257_beta_0_to_fp16 = const()[name = tensor<string, []>("input_257_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1011614144)))];
            tensor<fp16, []> var_7083_to_fp16 = const()[name = tensor<string, []>("op_7083_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_257_cast_fp16 = layer_norm(axes = input_257_axes_0, beta = input_257_beta_0_to_fp16, epsilon = var_7083_to_fp16, gamma = input_257_gamma_0_to_fp16, x = inputs_103_cast_fp16)[name = tensor<string, []>("input_257_cast_fp16")];
            tensor<string, []> input_259_pad_type_0 = const()[name = tensor<string, []>("input_259_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_259_strides_0 = const()[name = tensor<string, []>("input_259_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_259_pad_0 = const()[name = tensor<string, []>("input_259_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_259_dilations_0 = const()[name = tensor<string, []>("input_259_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_259_groups_0 = const()[name = tensor<string, []>("input_259_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_25_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_25_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1011616768)))];
            tensor<fp16, [5120]> blocks_25_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_25_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024724032)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_259_cast_fp16 = conv(bias = blocks_25_mlp_0_bias_to_fp16, dilations = input_259_dilations_0, groups = input_259_groups_0, pad = input_259_pad_0, pad_type = input_259_pad_type_0, strides = input_259_strides_0, weight = blocks_25_mlp_0_weight_to_fp16, x = input_257_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<string, []> input_261_mode_0 = const()[name = tensor<string, []>("input_261_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_261_cast_fp16 = gelu(mode = input_261_mode_0, x = input_259_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<string, []> var_7109_pad_type_0 = const()[name = tensor<string, []>("op_7109_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7109_strides_0 = const()[name = tensor<string, []>("op_7109_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7109_pad_0 = const()[name = tensor<string, []>("op_7109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7109_dilations_0 = const()[name = tensor<string, []>("op_7109_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7109_groups_0 = const()[name = tensor<string, []>("op_7109_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_25_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_25_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024734336)))];
            tensor<fp16, [1280]> blocks_25_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_25_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1037841600)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7109_cast_fp16 = conv(bias = blocks_25_mlp_2_bias_to_fp16, dilations = var_7109_dilations_0, groups = var_7109_groups_0, pad = var_7109_pad_0, pad_type = var_7109_pad_type_0, strides = var_7109_strides_0, weight = blocks_25_mlp_2_weight_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("op_7109_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_105_cast_fp16 = add(x = inputs_103_cast_fp16, y = var_7109_cast_fp16)[name = tensor<string, []>("inputs_105_cast_fp16")];
            tensor<int32, []> var_7118 = const()[name = tensor<string, []>("op_7118"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_263_axes_0 = const()[name = tensor<string, []>("input_263_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_263_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_263_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1037844224)))];
            tensor<fp16, [1280]> input_263_beta_0_to_fp16 = const()[name = tensor<string, []>("input_263_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1037846848)))];
            tensor<fp16, []> var_7134_to_fp16 = const()[name = tensor<string, []>("op_7134_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_263_cast_fp16 = layer_norm(axes = input_263_axes_0, beta = input_263_beta_0_to_fp16, epsilon = var_7134_to_fp16, gamma = input_263_gamma_0_to_fp16, x = inputs_105_cast_fp16)[name = tensor<string, []>("input_263_cast_fp16")];
            tensor<string, []> q_53_pad_type_0 = const()[name = tensor<string, []>("q_53_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_53_strides_0 = const()[name = tensor<string, []>("q_53_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_53_pad_0 = const()[name = tensor<string, []>("q_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_53_dilations_0 = const()[name = tensor<string, []>("q_53_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_53_groups_0 = const()[name = tensor<string, []>("q_53_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_7169_weight_0_to_fp16 = const()[name = tensor<string, []>("op_7169_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1037849472)))];
            tensor<fp16, [1280]> var_7169_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7169_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1041126336)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7169_cast_fp16 = conv(bias = var_7169_bias_0_to_fp16, dilations = q_53_dilations_0, groups = q_53_groups_0, pad = q_53_pad_0, pad_type = q_53_pad_type_0, strides = q_53_strides_0, weight = var_7169_weight_0_to_fp16, x = input_263_cast_fp16)[name = tensor<string, []>("op_7169_cast_fp16")];
            tensor<string, []> k_53_pad_type_0 = const()[name = tensor<string, []>("k_53_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_53_strides_0 = const()[name = tensor<string, []>("k_53_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_53_pad_0 = const()[name = tensor<string, []>("k_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_53_dilations_0 = const()[name = tensor<string, []>("k_53_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_53_groups_0 = const()[name = tensor<string, []>("k_53_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_26_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_26_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1041128960)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_53_cast_fp16 = conv(dilations = k_53_dilations_0, groups = k_53_groups_0, pad = k_53_pad_0, pad_type = k_53_pad_type_0, strides = k_53_strides_0, weight = blocks_26_attn_key_weight_to_fp16, x = input_263_cast_fp16)[name = tensor<string, []>("k_53_cast_fp16")];
            tensor<string, []> var_7167_pad_type_0 = const()[name = tensor<string, []>("op_7167_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7167_strides_0 = const()[name = tensor<string, []>("op_7167_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7167_pad_0 = const()[name = tensor<string, []>("op_7167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7167_dilations_0 = const()[name = tensor<string, []>("op_7167_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7167_groups_0 = const()[name = tensor<string, []>("op_7167_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_26_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_26_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1044405824)))];
            tensor<fp16, [1280]> blocks_26_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_26_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1047682688)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7167_cast_fp16 = conv(bias = blocks_26_attn_value_bias_to_fp16, dilations = var_7167_dilations_0, groups = var_7167_groups_0, pad = var_7167_pad_0, pad_type = var_7167_pad_type_0, strides = var_7167_strides_0, weight = blocks_26_attn_value_weight_to_fp16, x = input_263_cast_fp16)[name = tensor<string, []>("op_7167_cast_fp16")];
            tensor<int32, [20]> tile_78 = const()[name = tensor<string, []>("tile_78"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7170_axis_0 = const()[name = tensor<string, []>("op_7170_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7170_cast_fp16_19 = split(axis = var_7170_axis_0, split_sizes = tile_78, x = var_7169_cast_fp16)[name = tensor<string, []>("op_7170_cast_fp16")];
            tensor<int32, [4]> var_7191_perm_0 = const()[name = tensor<string, []>("op_7191_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_79 = const()[name = tensor<string, []>("tile_79"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7192_axis_0 = const()[name = tensor<string, []>("op_7192_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_7191_cast_fp16 = transpose(perm = var_7191_perm_0, x = k_53_cast_fp16)[name = tensor<string, []>("transpose_6")];
            tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_7192_cast_fp16_19 = split(axis = var_7192_axis_0, split_sizes = tile_79, x = var_7191_cast_fp16)[name = tensor<string, []>("op_7192_cast_fp16")];
            tensor<int32, [20]> tile_80 = const()[name = tensor<string, []>("tile_80"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7213_axis_0 = const()[name = tensor<string, []>("op_7213_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7213_cast_fp16_19 = split(axis = var_7213_axis_0, split_sizes = tile_80, x = var_7167_cast_fp16)[name = tensor<string, []>("op_7213_cast_fp16")];
            tensor<string, []> aw_1041_equation_0 = const()[name = tensor<string, []>("aw_1041_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1041_cast_fp16 = einsum(equation = aw_1041_equation_0, values = (var_7192_cast_fp16_0, var_7170_cast_fp16_0))[name = tensor<string, []>("aw_1041_cast_fp16")];
            tensor<string, []> aw_1043_equation_0 = const()[name = tensor<string, []>("aw_1043_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1043_cast_fp16 = einsum(equation = aw_1043_equation_0, values = (var_7192_cast_fp16_1, var_7170_cast_fp16_1))[name = tensor<string, []>("aw_1043_cast_fp16")];
            tensor<string, []> aw_1045_equation_0 = const()[name = tensor<string, []>("aw_1045_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1045_cast_fp16 = einsum(equation = aw_1045_equation_0, values = (var_7192_cast_fp16_2, var_7170_cast_fp16_2))[name = tensor<string, []>("aw_1045_cast_fp16")];
            tensor<string, []> aw_1047_equation_0 = const()[name = tensor<string, []>("aw_1047_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1047_cast_fp16 = einsum(equation = aw_1047_equation_0, values = (var_7192_cast_fp16_3, var_7170_cast_fp16_3))[name = tensor<string, []>("aw_1047_cast_fp16")];
            tensor<string, []> aw_1049_equation_0 = const()[name = tensor<string, []>("aw_1049_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1049_cast_fp16 = einsum(equation = aw_1049_equation_0, values = (var_7192_cast_fp16_4, var_7170_cast_fp16_4))[name = tensor<string, []>("aw_1049_cast_fp16")];
            tensor<string, []> aw_1051_equation_0 = const()[name = tensor<string, []>("aw_1051_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1051_cast_fp16 = einsum(equation = aw_1051_equation_0, values = (var_7192_cast_fp16_5, var_7170_cast_fp16_5))[name = tensor<string, []>("aw_1051_cast_fp16")];
            tensor<string, []> aw_1053_equation_0 = const()[name = tensor<string, []>("aw_1053_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1053_cast_fp16 = einsum(equation = aw_1053_equation_0, values = (var_7192_cast_fp16_6, var_7170_cast_fp16_6))[name = tensor<string, []>("aw_1053_cast_fp16")];
            tensor<string, []> aw_1055_equation_0 = const()[name = tensor<string, []>("aw_1055_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1055_cast_fp16 = einsum(equation = aw_1055_equation_0, values = (var_7192_cast_fp16_7, var_7170_cast_fp16_7))[name = tensor<string, []>("aw_1055_cast_fp16")];
            tensor<string, []> aw_1057_equation_0 = const()[name = tensor<string, []>("aw_1057_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1057_cast_fp16 = einsum(equation = aw_1057_equation_0, values = (var_7192_cast_fp16_8, var_7170_cast_fp16_8))[name = tensor<string, []>("aw_1057_cast_fp16")];
            tensor<string, []> aw_1059_equation_0 = const()[name = tensor<string, []>("aw_1059_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1059_cast_fp16 = einsum(equation = aw_1059_equation_0, values = (var_7192_cast_fp16_9, var_7170_cast_fp16_9))[name = tensor<string, []>("aw_1059_cast_fp16")];
            tensor<string, []> aw_1061_equation_0 = const()[name = tensor<string, []>("aw_1061_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1061_cast_fp16 = einsum(equation = aw_1061_equation_0, values = (var_7192_cast_fp16_10, var_7170_cast_fp16_10))[name = tensor<string, []>("aw_1061_cast_fp16")];
            tensor<string, []> aw_1063_equation_0 = const()[name = tensor<string, []>("aw_1063_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1063_cast_fp16 = einsum(equation = aw_1063_equation_0, values = (var_7192_cast_fp16_11, var_7170_cast_fp16_11))[name = tensor<string, []>("aw_1063_cast_fp16")];
            tensor<string, []> aw_1065_equation_0 = const()[name = tensor<string, []>("aw_1065_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1065_cast_fp16 = einsum(equation = aw_1065_equation_0, values = (var_7192_cast_fp16_12, var_7170_cast_fp16_12))[name = tensor<string, []>("aw_1065_cast_fp16")];
            tensor<string, []> aw_1067_equation_0 = const()[name = tensor<string, []>("aw_1067_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1067_cast_fp16 = einsum(equation = aw_1067_equation_0, values = (var_7192_cast_fp16_13, var_7170_cast_fp16_13))[name = tensor<string, []>("aw_1067_cast_fp16")];
            tensor<string, []> aw_1069_equation_0 = const()[name = tensor<string, []>("aw_1069_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1069_cast_fp16 = einsum(equation = aw_1069_equation_0, values = (var_7192_cast_fp16_14, var_7170_cast_fp16_14))[name = tensor<string, []>("aw_1069_cast_fp16")];
            tensor<string, []> aw_1071_equation_0 = const()[name = tensor<string, []>("aw_1071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1071_cast_fp16 = einsum(equation = aw_1071_equation_0, values = (var_7192_cast_fp16_15, var_7170_cast_fp16_15))[name = tensor<string, []>("aw_1071_cast_fp16")];
            tensor<string, []> aw_1073_equation_0 = const()[name = tensor<string, []>("aw_1073_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1073_cast_fp16 = einsum(equation = aw_1073_equation_0, values = (var_7192_cast_fp16_16, var_7170_cast_fp16_16))[name = tensor<string, []>("aw_1073_cast_fp16")];
            tensor<string, []> aw_1075_equation_0 = const()[name = tensor<string, []>("aw_1075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1075_cast_fp16 = einsum(equation = aw_1075_equation_0, values = (var_7192_cast_fp16_17, var_7170_cast_fp16_17))[name = tensor<string, []>("aw_1075_cast_fp16")];
            tensor<string, []> aw_1077_equation_0 = const()[name = tensor<string, []>("aw_1077_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1077_cast_fp16 = einsum(equation = aw_1077_equation_0, values = (var_7192_cast_fp16_18, var_7170_cast_fp16_18))[name = tensor<string, []>("aw_1077_cast_fp16")];
            tensor<string, []> aw_1079_equation_0 = const()[name = tensor<string, []>("aw_1079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1079_cast_fp16 = einsum(equation = aw_1079_equation_0, values = (var_7192_cast_fp16_19, var_7170_cast_fp16_19))[name = tensor<string, []>("aw_1079_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7274_cast_fp16 = softmax(axis = var_7118, x = aw_1041_cast_fp16)[name = tensor<string, []>("op_7274_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7275_cast_fp16 = softmax(axis = var_7118, x = aw_1043_cast_fp16)[name = tensor<string, []>("op_7275_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7276_cast_fp16 = softmax(axis = var_7118, x = aw_1045_cast_fp16)[name = tensor<string, []>("op_7276_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7277_cast_fp16 = softmax(axis = var_7118, x = aw_1047_cast_fp16)[name = tensor<string, []>("op_7277_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7278_cast_fp16 = softmax(axis = var_7118, x = aw_1049_cast_fp16)[name = tensor<string, []>("op_7278_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7279_cast_fp16 = softmax(axis = var_7118, x = aw_1051_cast_fp16)[name = tensor<string, []>("op_7279_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7280_cast_fp16 = softmax(axis = var_7118, x = aw_1053_cast_fp16)[name = tensor<string, []>("op_7280_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7281_cast_fp16 = softmax(axis = var_7118, x = aw_1055_cast_fp16)[name = tensor<string, []>("op_7281_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7282_cast_fp16 = softmax(axis = var_7118, x = aw_1057_cast_fp16)[name = tensor<string, []>("op_7282_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7283_cast_fp16 = softmax(axis = var_7118, x = aw_1059_cast_fp16)[name = tensor<string, []>("op_7283_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7284_cast_fp16 = softmax(axis = var_7118, x = aw_1061_cast_fp16)[name = tensor<string, []>("op_7284_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7285_cast_fp16 = softmax(axis = var_7118, x = aw_1063_cast_fp16)[name = tensor<string, []>("op_7285_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7286_cast_fp16 = softmax(axis = var_7118, x = aw_1065_cast_fp16)[name = tensor<string, []>("op_7286_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7287_cast_fp16 = softmax(axis = var_7118, x = aw_1067_cast_fp16)[name = tensor<string, []>("op_7287_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7288_cast_fp16 = softmax(axis = var_7118, x = aw_1069_cast_fp16)[name = tensor<string, []>("op_7288_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7289_cast_fp16 = softmax(axis = var_7118, x = aw_1071_cast_fp16)[name = tensor<string, []>("op_7289_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7290_cast_fp16 = softmax(axis = var_7118, x = aw_1073_cast_fp16)[name = tensor<string, []>("op_7290_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7291_cast_fp16 = softmax(axis = var_7118, x = aw_1075_cast_fp16)[name = tensor<string, []>("op_7291_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7292_cast_fp16 = softmax(axis = var_7118, x = aw_1077_cast_fp16)[name = tensor<string, []>("op_7292_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7293_cast_fp16 = softmax(axis = var_7118, x = aw_1079_cast_fp16)[name = tensor<string, []>("op_7293_cast_fp16")];
            tensor<string, []> var_7295_equation_0 = const()[name = tensor<string, []>("op_7295_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7295_cast_fp16 = einsum(equation = var_7295_equation_0, values = (var_7213_cast_fp16_0, var_7274_cast_fp16))[name = tensor<string, []>("op_7295_cast_fp16")];
            tensor<string, []> var_7297_equation_0 = const()[name = tensor<string, []>("op_7297_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7297_cast_fp16 = einsum(equation = var_7297_equation_0, values = (var_7213_cast_fp16_1, var_7275_cast_fp16))[name = tensor<string, []>("op_7297_cast_fp16")];
            tensor<string, []> var_7299_equation_0 = const()[name = tensor<string, []>("op_7299_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7299_cast_fp16 = einsum(equation = var_7299_equation_0, values = (var_7213_cast_fp16_2, var_7276_cast_fp16))[name = tensor<string, []>("op_7299_cast_fp16")];
            tensor<string, []> var_7301_equation_0 = const()[name = tensor<string, []>("op_7301_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7301_cast_fp16 = einsum(equation = var_7301_equation_0, values = (var_7213_cast_fp16_3, var_7277_cast_fp16))[name = tensor<string, []>("op_7301_cast_fp16")];
            tensor<string, []> var_7303_equation_0 = const()[name = tensor<string, []>("op_7303_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7303_cast_fp16 = einsum(equation = var_7303_equation_0, values = (var_7213_cast_fp16_4, var_7278_cast_fp16))[name = tensor<string, []>("op_7303_cast_fp16")];
            tensor<string, []> var_7305_equation_0 = const()[name = tensor<string, []>("op_7305_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7305_cast_fp16 = einsum(equation = var_7305_equation_0, values = (var_7213_cast_fp16_5, var_7279_cast_fp16))[name = tensor<string, []>("op_7305_cast_fp16")];
            tensor<string, []> var_7307_equation_0 = const()[name = tensor<string, []>("op_7307_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7307_cast_fp16 = einsum(equation = var_7307_equation_0, values = (var_7213_cast_fp16_6, var_7280_cast_fp16))[name = tensor<string, []>("op_7307_cast_fp16")];
            tensor<string, []> var_7309_equation_0 = const()[name = tensor<string, []>("op_7309_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7309_cast_fp16 = einsum(equation = var_7309_equation_0, values = (var_7213_cast_fp16_7, var_7281_cast_fp16))[name = tensor<string, []>("op_7309_cast_fp16")];
            tensor<string, []> var_7311_equation_0 = const()[name = tensor<string, []>("op_7311_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7311_cast_fp16 = einsum(equation = var_7311_equation_0, values = (var_7213_cast_fp16_8, var_7282_cast_fp16))[name = tensor<string, []>("op_7311_cast_fp16")];
            tensor<string, []> var_7313_equation_0 = const()[name = tensor<string, []>("op_7313_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7313_cast_fp16 = einsum(equation = var_7313_equation_0, values = (var_7213_cast_fp16_9, var_7283_cast_fp16))[name = tensor<string, []>("op_7313_cast_fp16")];
            tensor<string, []> var_7315_equation_0 = const()[name = tensor<string, []>("op_7315_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7315_cast_fp16 = einsum(equation = var_7315_equation_0, values = (var_7213_cast_fp16_10, var_7284_cast_fp16))[name = tensor<string, []>("op_7315_cast_fp16")];
            tensor<string, []> var_7317_equation_0 = const()[name = tensor<string, []>("op_7317_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7317_cast_fp16 = einsum(equation = var_7317_equation_0, values = (var_7213_cast_fp16_11, var_7285_cast_fp16))[name = tensor<string, []>("op_7317_cast_fp16")];
            tensor<string, []> var_7319_equation_0 = const()[name = tensor<string, []>("op_7319_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7319_cast_fp16 = einsum(equation = var_7319_equation_0, values = (var_7213_cast_fp16_12, var_7286_cast_fp16))[name = tensor<string, []>("op_7319_cast_fp16")];
            tensor<string, []> var_7321_equation_0 = const()[name = tensor<string, []>("op_7321_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7321_cast_fp16 = einsum(equation = var_7321_equation_0, values = (var_7213_cast_fp16_13, var_7287_cast_fp16))[name = tensor<string, []>("op_7321_cast_fp16")];
            tensor<string, []> var_7323_equation_0 = const()[name = tensor<string, []>("op_7323_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7323_cast_fp16 = einsum(equation = var_7323_equation_0, values = (var_7213_cast_fp16_14, var_7288_cast_fp16))[name = tensor<string, []>("op_7323_cast_fp16")];
            tensor<string, []> var_7325_equation_0 = const()[name = tensor<string, []>("op_7325_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7325_cast_fp16 = einsum(equation = var_7325_equation_0, values = (var_7213_cast_fp16_15, var_7289_cast_fp16))[name = tensor<string, []>("op_7325_cast_fp16")];
            tensor<string, []> var_7327_equation_0 = const()[name = tensor<string, []>("op_7327_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7327_cast_fp16 = einsum(equation = var_7327_equation_0, values = (var_7213_cast_fp16_16, var_7290_cast_fp16))[name = tensor<string, []>("op_7327_cast_fp16")];
            tensor<string, []> var_7329_equation_0 = const()[name = tensor<string, []>("op_7329_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7329_cast_fp16 = einsum(equation = var_7329_equation_0, values = (var_7213_cast_fp16_17, var_7291_cast_fp16))[name = tensor<string, []>("op_7329_cast_fp16")];
            tensor<string, []> var_7331_equation_0 = const()[name = tensor<string, []>("op_7331_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7331_cast_fp16 = einsum(equation = var_7331_equation_0, values = (var_7213_cast_fp16_18, var_7292_cast_fp16))[name = tensor<string, []>("op_7331_cast_fp16")];
            tensor<string, []> var_7333_equation_0 = const()[name = tensor<string, []>("op_7333_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7333_cast_fp16 = einsum(equation = var_7333_equation_0, values = (var_7213_cast_fp16_19, var_7293_cast_fp16))[name = tensor<string, []>("op_7333_cast_fp16")];
            tensor<bool, []> input_265_interleave_0 = const()[name = tensor<string, []>("input_265_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_265_cast_fp16 = concat(axis = var_7118, interleave = input_265_interleave_0, values = (var_7295_cast_fp16, var_7297_cast_fp16, var_7299_cast_fp16, var_7301_cast_fp16, var_7303_cast_fp16, var_7305_cast_fp16, var_7307_cast_fp16, var_7309_cast_fp16, var_7311_cast_fp16, var_7313_cast_fp16, var_7315_cast_fp16, var_7317_cast_fp16, var_7319_cast_fp16, var_7321_cast_fp16, var_7323_cast_fp16, var_7325_cast_fp16, var_7327_cast_fp16, var_7329_cast_fp16, var_7331_cast_fp16, var_7333_cast_fp16))[name = tensor<string, []>("input_265_cast_fp16")];
            tensor<string, []> var_7342_pad_type_0 = const()[name = tensor<string, []>("op_7342_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7342_strides_0 = const()[name = tensor<string, []>("op_7342_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7342_pad_0 = const()[name = tensor<string, []>("op_7342_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7342_dilations_0 = const()[name = tensor<string, []>("op_7342_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7342_groups_0 = const()[name = tensor<string, []>("op_7342_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_26_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_26_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1047685312)))];
            tensor<fp16, [1280]> blocks_26_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_26_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1050962176)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7342_cast_fp16 = conv(bias = blocks_26_attn_out_bias_to_fp16, dilations = var_7342_dilations_0, groups = var_7342_groups_0, pad = var_7342_pad_0, pad_type = var_7342_pad_type_0, strides = var_7342_strides_0, weight = blocks_26_attn_out_weight_to_fp16, x = input_265_cast_fp16)[name = tensor<string, []>("op_7342_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_107_cast_fp16 = add(x = inputs_105_cast_fp16, y = var_7342_cast_fp16)[name = tensor<string, []>("inputs_107_cast_fp16")];
            tensor<int32, [1]> input_267_axes_0 = const()[name = tensor<string, []>("input_267_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_267_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_267_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1050964800)))];
            tensor<fp16, [1280]> input_267_beta_0_to_fp16 = const()[name = tensor<string, []>("input_267_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1050967424)))];
            tensor<fp16, []> var_7352_to_fp16 = const()[name = tensor<string, []>("op_7352_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_267_cast_fp16 = layer_norm(axes = input_267_axes_0, beta = input_267_beta_0_to_fp16, epsilon = var_7352_to_fp16, gamma = input_267_gamma_0_to_fp16, x = inputs_107_cast_fp16)[name = tensor<string, []>("input_267_cast_fp16")];
            tensor<string, []> input_269_pad_type_0 = const()[name = tensor<string, []>("input_269_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_269_strides_0 = const()[name = tensor<string, []>("input_269_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_269_pad_0 = const()[name = tensor<string, []>("input_269_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_269_dilations_0 = const()[name = tensor<string, []>("input_269_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_269_groups_0 = const()[name = tensor<string, []>("input_269_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_26_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_26_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1050970048)))];
            tensor<fp16, [5120]> blocks_26_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_26_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1064077312)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_269_cast_fp16 = conv(bias = blocks_26_mlp_0_bias_to_fp16, dilations = input_269_dilations_0, groups = input_269_groups_0, pad = input_269_pad_0, pad_type = input_269_pad_type_0, strides = input_269_strides_0, weight = blocks_26_mlp_0_weight_to_fp16, x = input_267_cast_fp16)[name = tensor<string, []>("input_269_cast_fp16")];
            tensor<string, []> input_271_mode_0 = const()[name = tensor<string, []>("input_271_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_271_cast_fp16 = gelu(mode = input_271_mode_0, x = input_269_cast_fp16)[name = tensor<string, []>("input_271_cast_fp16")];
            tensor<string, []> var_7378_pad_type_0 = const()[name = tensor<string, []>("op_7378_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7378_strides_0 = const()[name = tensor<string, []>("op_7378_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7378_pad_0 = const()[name = tensor<string, []>("op_7378_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7378_dilations_0 = const()[name = tensor<string, []>("op_7378_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7378_groups_0 = const()[name = tensor<string, []>("op_7378_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_26_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_26_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1064087616)))];
            tensor<fp16, [1280]> blocks_26_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_26_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1077194880)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7378_cast_fp16 = conv(bias = blocks_26_mlp_2_bias_to_fp16, dilations = var_7378_dilations_0, groups = var_7378_groups_0, pad = var_7378_pad_0, pad_type = var_7378_pad_type_0, strides = var_7378_strides_0, weight = blocks_26_mlp_2_weight_to_fp16, x = input_271_cast_fp16)[name = tensor<string, []>("op_7378_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_109_cast_fp16 = add(x = inputs_107_cast_fp16, y = var_7378_cast_fp16)[name = tensor<string, []>("inputs_109_cast_fp16")];
            tensor<int32, []> var_7387 = const()[name = tensor<string, []>("op_7387"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_273_axes_0 = const()[name = tensor<string, []>("input_273_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_273_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_273_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1077197504)))];
            tensor<fp16, [1280]> input_273_beta_0_to_fp16 = const()[name = tensor<string, []>("input_273_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1077200128)))];
            tensor<fp16, []> var_7403_to_fp16 = const()[name = tensor<string, []>("op_7403_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_273_cast_fp16 = layer_norm(axes = input_273_axes_0, beta = input_273_beta_0_to_fp16, epsilon = var_7403_to_fp16, gamma = input_273_gamma_0_to_fp16, x = inputs_109_cast_fp16)[name = tensor<string, []>("input_273_cast_fp16")];
            tensor<string, []> q_55_pad_type_0 = const()[name = tensor<string, []>("q_55_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_55_strides_0 = const()[name = tensor<string, []>("q_55_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_55_pad_0 = const()[name = tensor<string, []>("q_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_55_dilations_0 = const()[name = tensor<string, []>("q_55_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_55_groups_0 = const()[name = tensor<string, []>("q_55_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_7438_weight_0_to_fp16 = const()[name = tensor<string, []>("op_7438_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1077202752)))];
            tensor<fp16, [1280]> var_7438_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7438_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1080479616)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7438_cast_fp16 = conv(bias = var_7438_bias_0_to_fp16, dilations = q_55_dilations_0, groups = q_55_groups_0, pad = q_55_pad_0, pad_type = q_55_pad_type_0, strides = q_55_strides_0, weight = var_7438_weight_0_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("op_7438_cast_fp16")];
            tensor<string, []> k_55_pad_type_0 = const()[name = tensor<string, []>("k_55_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_55_strides_0 = const()[name = tensor<string, []>("k_55_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_55_pad_0 = const()[name = tensor<string, []>("k_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_55_dilations_0 = const()[name = tensor<string, []>("k_55_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_55_groups_0 = const()[name = tensor<string, []>("k_55_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_27_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_27_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1080482240)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_55_cast_fp16 = conv(dilations = k_55_dilations_0, groups = k_55_groups_0, pad = k_55_pad_0, pad_type = k_55_pad_type_0, strides = k_55_strides_0, weight = blocks_27_attn_key_weight_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("k_55_cast_fp16")];
            tensor<string, []> var_7436_pad_type_0 = const()[name = tensor<string, []>("op_7436_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7436_strides_0 = const()[name = tensor<string, []>("op_7436_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7436_pad_0 = const()[name = tensor<string, []>("op_7436_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7436_dilations_0 = const()[name = tensor<string, []>("op_7436_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7436_groups_0 = const()[name = tensor<string, []>("op_7436_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_27_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_27_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1083759104)))];
            tensor<fp16, [1280]> blocks_27_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_27_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1087035968)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7436_cast_fp16 = conv(bias = blocks_27_attn_value_bias_to_fp16, dilations = var_7436_dilations_0, groups = var_7436_groups_0, pad = var_7436_pad_0, pad_type = var_7436_pad_type_0, strides = var_7436_strides_0, weight = blocks_27_attn_value_weight_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("op_7436_cast_fp16")];
            tensor<int32, [20]> tile_81 = const()[name = tensor<string, []>("tile_81"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7439_axis_0 = const()[name = tensor<string, []>("op_7439_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7439_cast_fp16_19 = split(axis = var_7439_axis_0, split_sizes = tile_81, x = var_7438_cast_fp16)[name = tensor<string, []>("op_7439_cast_fp16")];
            tensor<int32, [4]> var_7460_perm_0 = const()[name = tensor<string, []>("op_7460_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_82 = const()[name = tensor<string, []>("tile_82"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7461_axis_0 = const()[name = tensor<string, []>("op_7461_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_7460_cast_fp16 = transpose(perm = var_7460_perm_0, x = k_55_cast_fp16)[name = tensor<string, []>("transpose_5")];
            tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_7461_cast_fp16_19 = split(axis = var_7461_axis_0, split_sizes = tile_82, x = var_7460_cast_fp16)[name = tensor<string, []>("op_7461_cast_fp16")];
            tensor<int32, [20]> tile_83 = const()[name = tensor<string, []>("tile_83"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7482_axis_0 = const()[name = tensor<string, []>("op_7482_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7482_cast_fp16_19 = split(axis = var_7482_axis_0, split_sizes = tile_83, x = var_7436_cast_fp16)[name = tensor<string, []>("op_7482_cast_fp16")];
            tensor<string, []> aw_1081_equation_0 = const()[name = tensor<string, []>("aw_1081_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1081_cast_fp16 = einsum(equation = aw_1081_equation_0, values = (var_7461_cast_fp16_0, var_7439_cast_fp16_0))[name = tensor<string, []>("aw_1081_cast_fp16")];
            tensor<string, []> aw_1083_equation_0 = const()[name = tensor<string, []>("aw_1083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1083_cast_fp16 = einsum(equation = aw_1083_equation_0, values = (var_7461_cast_fp16_1, var_7439_cast_fp16_1))[name = tensor<string, []>("aw_1083_cast_fp16")];
            tensor<string, []> aw_1085_equation_0 = const()[name = tensor<string, []>("aw_1085_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1085_cast_fp16 = einsum(equation = aw_1085_equation_0, values = (var_7461_cast_fp16_2, var_7439_cast_fp16_2))[name = tensor<string, []>("aw_1085_cast_fp16")];
            tensor<string, []> aw_1087_equation_0 = const()[name = tensor<string, []>("aw_1087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1087_cast_fp16 = einsum(equation = aw_1087_equation_0, values = (var_7461_cast_fp16_3, var_7439_cast_fp16_3))[name = tensor<string, []>("aw_1087_cast_fp16")];
            tensor<string, []> aw_1089_equation_0 = const()[name = tensor<string, []>("aw_1089_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1089_cast_fp16 = einsum(equation = aw_1089_equation_0, values = (var_7461_cast_fp16_4, var_7439_cast_fp16_4))[name = tensor<string, []>("aw_1089_cast_fp16")];
            tensor<string, []> aw_1091_equation_0 = const()[name = tensor<string, []>("aw_1091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1091_cast_fp16 = einsum(equation = aw_1091_equation_0, values = (var_7461_cast_fp16_5, var_7439_cast_fp16_5))[name = tensor<string, []>("aw_1091_cast_fp16")];
            tensor<string, []> aw_1093_equation_0 = const()[name = tensor<string, []>("aw_1093_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1093_cast_fp16 = einsum(equation = aw_1093_equation_0, values = (var_7461_cast_fp16_6, var_7439_cast_fp16_6))[name = tensor<string, []>("aw_1093_cast_fp16")];
            tensor<string, []> aw_1095_equation_0 = const()[name = tensor<string, []>("aw_1095_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1095_cast_fp16 = einsum(equation = aw_1095_equation_0, values = (var_7461_cast_fp16_7, var_7439_cast_fp16_7))[name = tensor<string, []>("aw_1095_cast_fp16")];
            tensor<string, []> aw_1097_equation_0 = const()[name = tensor<string, []>("aw_1097_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1097_cast_fp16 = einsum(equation = aw_1097_equation_0, values = (var_7461_cast_fp16_8, var_7439_cast_fp16_8))[name = tensor<string, []>("aw_1097_cast_fp16")];
            tensor<string, []> aw_1099_equation_0 = const()[name = tensor<string, []>("aw_1099_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1099_cast_fp16 = einsum(equation = aw_1099_equation_0, values = (var_7461_cast_fp16_9, var_7439_cast_fp16_9))[name = tensor<string, []>("aw_1099_cast_fp16")];
            tensor<string, []> aw_1101_equation_0 = const()[name = tensor<string, []>("aw_1101_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1101_cast_fp16 = einsum(equation = aw_1101_equation_0, values = (var_7461_cast_fp16_10, var_7439_cast_fp16_10))[name = tensor<string, []>("aw_1101_cast_fp16")];
            tensor<string, []> aw_1103_equation_0 = const()[name = tensor<string, []>("aw_1103_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1103_cast_fp16 = einsum(equation = aw_1103_equation_0, values = (var_7461_cast_fp16_11, var_7439_cast_fp16_11))[name = tensor<string, []>("aw_1103_cast_fp16")];
            tensor<string, []> aw_1105_equation_0 = const()[name = tensor<string, []>("aw_1105_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1105_cast_fp16 = einsum(equation = aw_1105_equation_0, values = (var_7461_cast_fp16_12, var_7439_cast_fp16_12))[name = tensor<string, []>("aw_1105_cast_fp16")];
            tensor<string, []> aw_1107_equation_0 = const()[name = tensor<string, []>("aw_1107_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1107_cast_fp16 = einsum(equation = aw_1107_equation_0, values = (var_7461_cast_fp16_13, var_7439_cast_fp16_13))[name = tensor<string, []>("aw_1107_cast_fp16")];
            tensor<string, []> aw_1109_equation_0 = const()[name = tensor<string, []>("aw_1109_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1109_cast_fp16 = einsum(equation = aw_1109_equation_0, values = (var_7461_cast_fp16_14, var_7439_cast_fp16_14))[name = tensor<string, []>("aw_1109_cast_fp16")];
            tensor<string, []> aw_1111_equation_0 = const()[name = tensor<string, []>("aw_1111_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1111_cast_fp16 = einsum(equation = aw_1111_equation_0, values = (var_7461_cast_fp16_15, var_7439_cast_fp16_15))[name = tensor<string, []>("aw_1111_cast_fp16")];
            tensor<string, []> aw_1113_equation_0 = const()[name = tensor<string, []>("aw_1113_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1113_cast_fp16 = einsum(equation = aw_1113_equation_0, values = (var_7461_cast_fp16_16, var_7439_cast_fp16_16))[name = tensor<string, []>("aw_1113_cast_fp16")];
            tensor<string, []> aw_1115_equation_0 = const()[name = tensor<string, []>("aw_1115_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1115_cast_fp16 = einsum(equation = aw_1115_equation_0, values = (var_7461_cast_fp16_17, var_7439_cast_fp16_17))[name = tensor<string, []>("aw_1115_cast_fp16")];
            tensor<string, []> aw_1117_equation_0 = const()[name = tensor<string, []>("aw_1117_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1117_cast_fp16 = einsum(equation = aw_1117_equation_0, values = (var_7461_cast_fp16_18, var_7439_cast_fp16_18))[name = tensor<string, []>("aw_1117_cast_fp16")];
            tensor<string, []> aw_1119_equation_0 = const()[name = tensor<string, []>("aw_1119_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1119_cast_fp16 = einsum(equation = aw_1119_equation_0, values = (var_7461_cast_fp16_19, var_7439_cast_fp16_19))[name = tensor<string, []>("aw_1119_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7543_cast_fp16 = softmax(axis = var_7387, x = aw_1081_cast_fp16)[name = tensor<string, []>("op_7543_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7544_cast_fp16 = softmax(axis = var_7387, x = aw_1083_cast_fp16)[name = tensor<string, []>("op_7544_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7545_cast_fp16 = softmax(axis = var_7387, x = aw_1085_cast_fp16)[name = tensor<string, []>("op_7545_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7546_cast_fp16 = softmax(axis = var_7387, x = aw_1087_cast_fp16)[name = tensor<string, []>("op_7546_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7547_cast_fp16 = softmax(axis = var_7387, x = aw_1089_cast_fp16)[name = tensor<string, []>("op_7547_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7548_cast_fp16 = softmax(axis = var_7387, x = aw_1091_cast_fp16)[name = tensor<string, []>("op_7548_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7549_cast_fp16 = softmax(axis = var_7387, x = aw_1093_cast_fp16)[name = tensor<string, []>("op_7549_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7550_cast_fp16 = softmax(axis = var_7387, x = aw_1095_cast_fp16)[name = tensor<string, []>("op_7550_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7551_cast_fp16 = softmax(axis = var_7387, x = aw_1097_cast_fp16)[name = tensor<string, []>("op_7551_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7552_cast_fp16 = softmax(axis = var_7387, x = aw_1099_cast_fp16)[name = tensor<string, []>("op_7552_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7553_cast_fp16 = softmax(axis = var_7387, x = aw_1101_cast_fp16)[name = tensor<string, []>("op_7553_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7554_cast_fp16 = softmax(axis = var_7387, x = aw_1103_cast_fp16)[name = tensor<string, []>("op_7554_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7555_cast_fp16 = softmax(axis = var_7387, x = aw_1105_cast_fp16)[name = tensor<string, []>("op_7555_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7556_cast_fp16 = softmax(axis = var_7387, x = aw_1107_cast_fp16)[name = tensor<string, []>("op_7556_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7557_cast_fp16 = softmax(axis = var_7387, x = aw_1109_cast_fp16)[name = tensor<string, []>("op_7557_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7558_cast_fp16 = softmax(axis = var_7387, x = aw_1111_cast_fp16)[name = tensor<string, []>("op_7558_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7559_cast_fp16 = softmax(axis = var_7387, x = aw_1113_cast_fp16)[name = tensor<string, []>("op_7559_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7560_cast_fp16 = softmax(axis = var_7387, x = aw_1115_cast_fp16)[name = tensor<string, []>("op_7560_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7561_cast_fp16 = softmax(axis = var_7387, x = aw_1117_cast_fp16)[name = tensor<string, []>("op_7561_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7562_cast_fp16 = softmax(axis = var_7387, x = aw_1119_cast_fp16)[name = tensor<string, []>("op_7562_cast_fp16")];
            tensor<string, []> var_7564_equation_0 = const()[name = tensor<string, []>("op_7564_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7564_cast_fp16 = einsum(equation = var_7564_equation_0, values = (var_7482_cast_fp16_0, var_7543_cast_fp16))[name = tensor<string, []>("op_7564_cast_fp16")];
            tensor<string, []> var_7566_equation_0 = const()[name = tensor<string, []>("op_7566_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7566_cast_fp16 = einsum(equation = var_7566_equation_0, values = (var_7482_cast_fp16_1, var_7544_cast_fp16))[name = tensor<string, []>("op_7566_cast_fp16")];
            tensor<string, []> var_7568_equation_0 = const()[name = tensor<string, []>("op_7568_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7568_cast_fp16 = einsum(equation = var_7568_equation_0, values = (var_7482_cast_fp16_2, var_7545_cast_fp16))[name = tensor<string, []>("op_7568_cast_fp16")];
            tensor<string, []> var_7570_equation_0 = const()[name = tensor<string, []>("op_7570_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7570_cast_fp16 = einsum(equation = var_7570_equation_0, values = (var_7482_cast_fp16_3, var_7546_cast_fp16))[name = tensor<string, []>("op_7570_cast_fp16")];
            tensor<string, []> var_7572_equation_0 = const()[name = tensor<string, []>("op_7572_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7572_cast_fp16 = einsum(equation = var_7572_equation_0, values = (var_7482_cast_fp16_4, var_7547_cast_fp16))[name = tensor<string, []>("op_7572_cast_fp16")];
            tensor<string, []> var_7574_equation_0 = const()[name = tensor<string, []>("op_7574_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7574_cast_fp16 = einsum(equation = var_7574_equation_0, values = (var_7482_cast_fp16_5, var_7548_cast_fp16))[name = tensor<string, []>("op_7574_cast_fp16")];
            tensor<string, []> var_7576_equation_0 = const()[name = tensor<string, []>("op_7576_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7576_cast_fp16 = einsum(equation = var_7576_equation_0, values = (var_7482_cast_fp16_6, var_7549_cast_fp16))[name = tensor<string, []>("op_7576_cast_fp16")];
            tensor<string, []> var_7578_equation_0 = const()[name = tensor<string, []>("op_7578_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7578_cast_fp16 = einsum(equation = var_7578_equation_0, values = (var_7482_cast_fp16_7, var_7550_cast_fp16))[name = tensor<string, []>("op_7578_cast_fp16")];
            tensor<string, []> var_7580_equation_0 = const()[name = tensor<string, []>("op_7580_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7580_cast_fp16 = einsum(equation = var_7580_equation_0, values = (var_7482_cast_fp16_8, var_7551_cast_fp16))[name = tensor<string, []>("op_7580_cast_fp16")];
            tensor<string, []> var_7582_equation_0 = const()[name = tensor<string, []>("op_7582_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7582_cast_fp16 = einsum(equation = var_7582_equation_0, values = (var_7482_cast_fp16_9, var_7552_cast_fp16))[name = tensor<string, []>("op_7582_cast_fp16")];
            tensor<string, []> var_7584_equation_0 = const()[name = tensor<string, []>("op_7584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7584_cast_fp16 = einsum(equation = var_7584_equation_0, values = (var_7482_cast_fp16_10, var_7553_cast_fp16))[name = tensor<string, []>("op_7584_cast_fp16")];
            tensor<string, []> var_7586_equation_0 = const()[name = tensor<string, []>("op_7586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7586_cast_fp16 = einsum(equation = var_7586_equation_0, values = (var_7482_cast_fp16_11, var_7554_cast_fp16))[name = tensor<string, []>("op_7586_cast_fp16")];
            tensor<string, []> var_7588_equation_0 = const()[name = tensor<string, []>("op_7588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7588_cast_fp16 = einsum(equation = var_7588_equation_0, values = (var_7482_cast_fp16_12, var_7555_cast_fp16))[name = tensor<string, []>("op_7588_cast_fp16")];
            tensor<string, []> var_7590_equation_0 = const()[name = tensor<string, []>("op_7590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7590_cast_fp16 = einsum(equation = var_7590_equation_0, values = (var_7482_cast_fp16_13, var_7556_cast_fp16))[name = tensor<string, []>("op_7590_cast_fp16")];
            tensor<string, []> var_7592_equation_0 = const()[name = tensor<string, []>("op_7592_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7592_cast_fp16 = einsum(equation = var_7592_equation_0, values = (var_7482_cast_fp16_14, var_7557_cast_fp16))[name = tensor<string, []>("op_7592_cast_fp16")];
            tensor<string, []> var_7594_equation_0 = const()[name = tensor<string, []>("op_7594_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7594_cast_fp16 = einsum(equation = var_7594_equation_0, values = (var_7482_cast_fp16_15, var_7558_cast_fp16))[name = tensor<string, []>("op_7594_cast_fp16")];
            tensor<string, []> var_7596_equation_0 = const()[name = tensor<string, []>("op_7596_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7596_cast_fp16 = einsum(equation = var_7596_equation_0, values = (var_7482_cast_fp16_16, var_7559_cast_fp16))[name = tensor<string, []>("op_7596_cast_fp16")];
            tensor<string, []> var_7598_equation_0 = const()[name = tensor<string, []>("op_7598_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7598_cast_fp16 = einsum(equation = var_7598_equation_0, values = (var_7482_cast_fp16_17, var_7560_cast_fp16))[name = tensor<string, []>("op_7598_cast_fp16")];
            tensor<string, []> var_7600_equation_0 = const()[name = tensor<string, []>("op_7600_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7600_cast_fp16 = einsum(equation = var_7600_equation_0, values = (var_7482_cast_fp16_18, var_7561_cast_fp16))[name = tensor<string, []>("op_7600_cast_fp16")];
            tensor<string, []> var_7602_equation_0 = const()[name = tensor<string, []>("op_7602_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7602_cast_fp16 = einsum(equation = var_7602_equation_0, values = (var_7482_cast_fp16_19, var_7562_cast_fp16))[name = tensor<string, []>("op_7602_cast_fp16")];
            tensor<bool, []> input_275_interleave_0 = const()[name = tensor<string, []>("input_275_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_275_cast_fp16 = concat(axis = var_7387, interleave = input_275_interleave_0, values = (var_7564_cast_fp16, var_7566_cast_fp16, var_7568_cast_fp16, var_7570_cast_fp16, var_7572_cast_fp16, var_7574_cast_fp16, var_7576_cast_fp16, var_7578_cast_fp16, var_7580_cast_fp16, var_7582_cast_fp16, var_7584_cast_fp16, var_7586_cast_fp16, var_7588_cast_fp16, var_7590_cast_fp16, var_7592_cast_fp16, var_7594_cast_fp16, var_7596_cast_fp16, var_7598_cast_fp16, var_7600_cast_fp16, var_7602_cast_fp16))[name = tensor<string, []>("input_275_cast_fp16")];
            tensor<string, []> var_7611_pad_type_0 = const()[name = tensor<string, []>("op_7611_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7611_strides_0 = const()[name = tensor<string, []>("op_7611_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7611_pad_0 = const()[name = tensor<string, []>("op_7611_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7611_dilations_0 = const()[name = tensor<string, []>("op_7611_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7611_groups_0 = const()[name = tensor<string, []>("op_7611_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_27_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_27_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1087038592)))];
            tensor<fp16, [1280]> blocks_27_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_27_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1090315456)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7611_cast_fp16 = conv(bias = blocks_27_attn_out_bias_to_fp16, dilations = var_7611_dilations_0, groups = var_7611_groups_0, pad = var_7611_pad_0, pad_type = var_7611_pad_type_0, strides = var_7611_strides_0, weight = blocks_27_attn_out_weight_to_fp16, x = input_275_cast_fp16)[name = tensor<string, []>("op_7611_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_111_cast_fp16 = add(x = inputs_109_cast_fp16, y = var_7611_cast_fp16)[name = tensor<string, []>("inputs_111_cast_fp16")];
            tensor<int32, [1]> input_277_axes_0 = const()[name = tensor<string, []>("input_277_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_277_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_277_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1090318080)))];
            tensor<fp16, [1280]> input_277_beta_0_to_fp16 = const()[name = tensor<string, []>("input_277_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1090320704)))];
            tensor<fp16, []> var_7621_to_fp16 = const()[name = tensor<string, []>("op_7621_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_277_cast_fp16 = layer_norm(axes = input_277_axes_0, beta = input_277_beta_0_to_fp16, epsilon = var_7621_to_fp16, gamma = input_277_gamma_0_to_fp16, x = inputs_111_cast_fp16)[name = tensor<string, []>("input_277_cast_fp16")];
            tensor<string, []> input_279_pad_type_0 = const()[name = tensor<string, []>("input_279_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_279_strides_0 = const()[name = tensor<string, []>("input_279_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_279_pad_0 = const()[name = tensor<string, []>("input_279_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_279_dilations_0 = const()[name = tensor<string, []>("input_279_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_279_groups_0 = const()[name = tensor<string, []>("input_279_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_27_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_27_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1090323328)))];
            tensor<fp16, [5120]> blocks_27_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_27_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1103430592)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_279_cast_fp16 = conv(bias = blocks_27_mlp_0_bias_to_fp16, dilations = input_279_dilations_0, groups = input_279_groups_0, pad = input_279_pad_0, pad_type = input_279_pad_type_0, strides = input_279_strides_0, weight = blocks_27_mlp_0_weight_to_fp16, x = input_277_cast_fp16)[name = tensor<string, []>("input_279_cast_fp16")];
            tensor<string, []> input_281_mode_0 = const()[name = tensor<string, []>("input_281_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_281_cast_fp16 = gelu(mode = input_281_mode_0, x = input_279_cast_fp16)[name = tensor<string, []>("input_281_cast_fp16")];
            tensor<string, []> var_7647_pad_type_0 = const()[name = tensor<string, []>("op_7647_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7647_strides_0 = const()[name = tensor<string, []>("op_7647_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7647_pad_0 = const()[name = tensor<string, []>("op_7647_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7647_dilations_0 = const()[name = tensor<string, []>("op_7647_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7647_groups_0 = const()[name = tensor<string, []>("op_7647_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_27_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_27_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1103440896)))];
            tensor<fp16, [1280]> blocks_27_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_27_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1116548160)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7647_cast_fp16 = conv(bias = blocks_27_mlp_2_bias_to_fp16, dilations = var_7647_dilations_0, groups = var_7647_groups_0, pad = var_7647_pad_0, pad_type = var_7647_pad_type_0, strides = var_7647_strides_0, weight = blocks_27_mlp_2_weight_to_fp16, x = input_281_cast_fp16)[name = tensor<string, []>("op_7647_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_113_cast_fp16 = add(x = inputs_111_cast_fp16, y = var_7647_cast_fp16)[name = tensor<string, []>("inputs_113_cast_fp16")];
            tensor<int32, []> var_7656 = const()[name = tensor<string, []>("op_7656"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_283_axes_0 = const()[name = tensor<string, []>("input_283_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_283_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_283_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1116550784)))];
            tensor<fp16, [1280]> input_283_beta_0_to_fp16 = const()[name = tensor<string, []>("input_283_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1116553408)))];
            tensor<fp16, []> var_7672_to_fp16 = const()[name = tensor<string, []>("op_7672_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_283_cast_fp16 = layer_norm(axes = input_283_axes_0, beta = input_283_beta_0_to_fp16, epsilon = var_7672_to_fp16, gamma = input_283_gamma_0_to_fp16, x = inputs_113_cast_fp16)[name = tensor<string, []>("input_283_cast_fp16")];
            tensor<string, []> q_57_pad_type_0 = const()[name = tensor<string, []>("q_57_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_57_strides_0 = const()[name = tensor<string, []>("q_57_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_57_pad_0 = const()[name = tensor<string, []>("q_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_57_dilations_0 = const()[name = tensor<string, []>("q_57_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_57_groups_0 = const()[name = tensor<string, []>("q_57_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_7707_weight_0_to_fp16 = const()[name = tensor<string, []>("op_7707_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1116556032)))];
            tensor<fp16, [1280]> var_7707_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7707_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1119832896)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7707_cast_fp16 = conv(bias = var_7707_bias_0_to_fp16, dilations = q_57_dilations_0, groups = q_57_groups_0, pad = q_57_pad_0, pad_type = q_57_pad_type_0, strides = q_57_strides_0, weight = var_7707_weight_0_to_fp16, x = input_283_cast_fp16)[name = tensor<string, []>("op_7707_cast_fp16")];
            tensor<string, []> k_57_pad_type_0 = const()[name = tensor<string, []>("k_57_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_57_strides_0 = const()[name = tensor<string, []>("k_57_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_57_pad_0 = const()[name = tensor<string, []>("k_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_57_dilations_0 = const()[name = tensor<string, []>("k_57_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_57_groups_0 = const()[name = tensor<string, []>("k_57_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_28_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_28_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1119835520)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_57_cast_fp16 = conv(dilations = k_57_dilations_0, groups = k_57_groups_0, pad = k_57_pad_0, pad_type = k_57_pad_type_0, strides = k_57_strides_0, weight = blocks_28_attn_key_weight_to_fp16, x = input_283_cast_fp16)[name = tensor<string, []>("k_57_cast_fp16")];
            tensor<string, []> var_7705_pad_type_0 = const()[name = tensor<string, []>("op_7705_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7705_strides_0 = const()[name = tensor<string, []>("op_7705_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7705_pad_0 = const()[name = tensor<string, []>("op_7705_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7705_dilations_0 = const()[name = tensor<string, []>("op_7705_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7705_groups_0 = const()[name = tensor<string, []>("op_7705_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_28_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_28_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1123112384)))];
            tensor<fp16, [1280]> blocks_28_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_28_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1126389248)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7705_cast_fp16 = conv(bias = blocks_28_attn_value_bias_to_fp16, dilations = var_7705_dilations_0, groups = var_7705_groups_0, pad = var_7705_pad_0, pad_type = var_7705_pad_type_0, strides = var_7705_strides_0, weight = blocks_28_attn_value_weight_to_fp16, x = input_283_cast_fp16)[name = tensor<string, []>("op_7705_cast_fp16")];
            tensor<int32, [20]> tile_84 = const()[name = tensor<string, []>("tile_84"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7708_axis_0 = const()[name = tensor<string, []>("op_7708_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7708_cast_fp16_19 = split(axis = var_7708_axis_0, split_sizes = tile_84, x = var_7707_cast_fp16)[name = tensor<string, []>("op_7708_cast_fp16")];
            tensor<int32, [4]> var_7729_perm_0 = const()[name = tensor<string, []>("op_7729_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_85 = const()[name = tensor<string, []>("tile_85"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7730_axis_0 = const()[name = tensor<string, []>("op_7730_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_7729_cast_fp16 = transpose(perm = var_7729_perm_0, x = k_57_cast_fp16)[name = tensor<string, []>("transpose_4")];
            tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_7730_cast_fp16_19 = split(axis = var_7730_axis_0, split_sizes = tile_85, x = var_7729_cast_fp16)[name = tensor<string, []>("op_7730_cast_fp16")];
            tensor<int32, [20]> tile_86 = const()[name = tensor<string, []>("tile_86"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7751_axis_0 = const()[name = tensor<string, []>("op_7751_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7751_cast_fp16_19 = split(axis = var_7751_axis_0, split_sizes = tile_86, x = var_7705_cast_fp16)[name = tensor<string, []>("op_7751_cast_fp16")];
            tensor<string, []> aw_1121_equation_0 = const()[name = tensor<string, []>("aw_1121_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1121_cast_fp16 = einsum(equation = aw_1121_equation_0, values = (var_7730_cast_fp16_0, var_7708_cast_fp16_0))[name = tensor<string, []>("aw_1121_cast_fp16")];
            tensor<string, []> aw_1123_equation_0 = const()[name = tensor<string, []>("aw_1123_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1123_cast_fp16 = einsum(equation = aw_1123_equation_0, values = (var_7730_cast_fp16_1, var_7708_cast_fp16_1))[name = tensor<string, []>("aw_1123_cast_fp16")];
            tensor<string, []> aw_1125_equation_0 = const()[name = tensor<string, []>("aw_1125_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1125_cast_fp16 = einsum(equation = aw_1125_equation_0, values = (var_7730_cast_fp16_2, var_7708_cast_fp16_2))[name = tensor<string, []>("aw_1125_cast_fp16")];
            tensor<string, []> aw_1127_equation_0 = const()[name = tensor<string, []>("aw_1127_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1127_cast_fp16 = einsum(equation = aw_1127_equation_0, values = (var_7730_cast_fp16_3, var_7708_cast_fp16_3))[name = tensor<string, []>("aw_1127_cast_fp16")];
            tensor<string, []> aw_1129_equation_0 = const()[name = tensor<string, []>("aw_1129_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1129_cast_fp16 = einsum(equation = aw_1129_equation_0, values = (var_7730_cast_fp16_4, var_7708_cast_fp16_4))[name = tensor<string, []>("aw_1129_cast_fp16")];
            tensor<string, []> aw_1131_equation_0 = const()[name = tensor<string, []>("aw_1131_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1131_cast_fp16 = einsum(equation = aw_1131_equation_0, values = (var_7730_cast_fp16_5, var_7708_cast_fp16_5))[name = tensor<string, []>("aw_1131_cast_fp16")];
            tensor<string, []> aw_1133_equation_0 = const()[name = tensor<string, []>("aw_1133_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1133_cast_fp16 = einsum(equation = aw_1133_equation_0, values = (var_7730_cast_fp16_6, var_7708_cast_fp16_6))[name = tensor<string, []>("aw_1133_cast_fp16")];
            tensor<string, []> aw_1135_equation_0 = const()[name = tensor<string, []>("aw_1135_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1135_cast_fp16 = einsum(equation = aw_1135_equation_0, values = (var_7730_cast_fp16_7, var_7708_cast_fp16_7))[name = tensor<string, []>("aw_1135_cast_fp16")];
            tensor<string, []> aw_1137_equation_0 = const()[name = tensor<string, []>("aw_1137_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1137_cast_fp16 = einsum(equation = aw_1137_equation_0, values = (var_7730_cast_fp16_8, var_7708_cast_fp16_8))[name = tensor<string, []>("aw_1137_cast_fp16")];
            tensor<string, []> aw_1139_equation_0 = const()[name = tensor<string, []>("aw_1139_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1139_cast_fp16 = einsum(equation = aw_1139_equation_0, values = (var_7730_cast_fp16_9, var_7708_cast_fp16_9))[name = tensor<string, []>("aw_1139_cast_fp16")];
            tensor<string, []> aw_1141_equation_0 = const()[name = tensor<string, []>("aw_1141_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1141_cast_fp16 = einsum(equation = aw_1141_equation_0, values = (var_7730_cast_fp16_10, var_7708_cast_fp16_10))[name = tensor<string, []>("aw_1141_cast_fp16")];
            tensor<string, []> aw_1143_equation_0 = const()[name = tensor<string, []>("aw_1143_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1143_cast_fp16 = einsum(equation = aw_1143_equation_0, values = (var_7730_cast_fp16_11, var_7708_cast_fp16_11))[name = tensor<string, []>("aw_1143_cast_fp16")];
            tensor<string, []> aw_1145_equation_0 = const()[name = tensor<string, []>("aw_1145_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1145_cast_fp16 = einsum(equation = aw_1145_equation_0, values = (var_7730_cast_fp16_12, var_7708_cast_fp16_12))[name = tensor<string, []>("aw_1145_cast_fp16")];
            tensor<string, []> aw_1147_equation_0 = const()[name = tensor<string, []>("aw_1147_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1147_cast_fp16 = einsum(equation = aw_1147_equation_0, values = (var_7730_cast_fp16_13, var_7708_cast_fp16_13))[name = tensor<string, []>("aw_1147_cast_fp16")];
            tensor<string, []> aw_1149_equation_0 = const()[name = tensor<string, []>("aw_1149_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1149_cast_fp16 = einsum(equation = aw_1149_equation_0, values = (var_7730_cast_fp16_14, var_7708_cast_fp16_14))[name = tensor<string, []>("aw_1149_cast_fp16")];
            tensor<string, []> aw_1151_equation_0 = const()[name = tensor<string, []>("aw_1151_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1151_cast_fp16 = einsum(equation = aw_1151_equation_0, values = (var_7730_cast_fp16_15, var_7708_cast_fp16_15))[name = tensor<string, []>("aw_1151_cast_fp16")];
            tensor<string, []> aw_1153_equation_0 = const()[name = tensor<string, []>("aw_1153_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1153_cast_fp16 = einsum(equation = aw_1153_equation_0, values = (var_7730_cast_fp16_16, var_7708_cast_fp16_16))[name = tensor<string, []>("aw_1153_cast_fp16")];
            tensor<string, []> aw_1155_equation_0 = const()[name = tensor<string, []>("aw_1155_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1155_cast_fp16 = einsum(equation = aw_1155_equation_0, values = (var_7730_cast_fp16_17, var_7708_cast_fp16_17))[name = tensor<string, []>("aw_1155_cast_fp16")];
            tensor<string, []> aw_1157_equation_0 = const()[name = tensor<string, []>("aw_1157_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1157_cast_fp16 = einsum(equation = aw_1157_equation_0, values = (var_7730_cast_fp16_18, var_7708_cast_fp16_18))[name = tensor<string, []>("aw_1157_cast_fp16")];
            tensor<string, []> aw_1159_equation_0 = const()[name = tensor<string, []>("aw_1159_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1159_cast_fp16 = einsum(equation = aw_1159_equation_0, values = (var_7730_cast_fp16_19, var_7708_cast_fp16_19))[name = tensor<string, []>("aw_1159_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7812_cast_fp16 = softmax(axis = var_7656, x = aw_1121_cast_fp16)[name = tensor<string, []>("op_7812_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7813_cast_fp16 = softmax(axis = var_7656, x = aw_1123_cast_fp16)[name = tensor<string, []>("op_7813_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7814_cast_fp16 = softmax(axis = var_7656, x = aw_1125_cast_fp16)[name = tensor<string, []>("op_7814_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7815_cast_fp16 = softmax(axis = var_7656, x = aw_1127_cast_fp16)[name = tensor<string, []>("op_7815_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7816_cast_fp16 = softmax(axis = var_7656, x = aw_1129_cast_fp16)[name = tensor<string, []>("op_7816_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7817_cast_fp16 = softmax(axis = var_7656, x = aw_1131_cast_fp16)[name = tensor<string, []>("op_7817_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7818_cast_fp16 = softmax(axis = var_7656, x = aw_1133_cast_fp16)[name = tensor<string, []>("op_7818_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7819_cast_fp16 = softmax(axis = var_7656, x = aw_1135_cast_fp16)[name = tensor<string, []>("op_7819_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7820_cast_fp16 = softmax(axis = var_7656, x = aw_1137_cast_fp16)[name = tensor<string, []>("op_7820_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7821_cast_fp16 = softmax(axis = var_7656, x = aw_1139_cast_fp16)[name = tensor<string, []>("op_7821_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7822_cast_fp16 = softmax(axis = var_7656, x = aw_1141_cast_fp16)[name = tensor<string, []>("op_7822_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7823_cast_fp16 = softmax(axis = var_7656, x = aw_1143_cast_fp16)[name = tensor<string, []>("op_7823_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7824_cast_fp16 = softmax(axis = var_7656, x = aw_1145_cast_fp16)[name = tensor<string, []>("op_7824_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7825_cast_fp16 = softmax(axis = var_7656, x = aw_1147_cast_fp16)[name = tensor<string, []>("op_7825_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7826_cast_fp16 = softmax(axis = var_7656, x = aw_1149_cast_fp16)[name = tensor<string, []>("op_7826_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7827_cast_fp16 = softmax(axis = var_7656, x = aw_1151_cast_fp16)[name = tensor<string, []>("op_7827_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7828_cast_fp16 = softmax(axis = var_7656, x = aw_1153_cast_fp16)[name = tensor<string, []>("op_7828_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7829_cast_fp16 = softmax(axis = var_7656, x = aw_1155_cast_fp16)[name = tensor<string, []>("op_7829_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7830_cast_fp16 = softmax(axis = var_7656, x = aw_1157_cast_fp16)[name = tensor<string, []>("op_7830_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_7831_cast_fp16 = softmax(axis = var_7656, x = aw_1159_cast_fp16)[name = tensor<string, []>("op_7831_cast_fp16")];
            tensor<string, []> var_7833_equation_0 = const()[name = tensor<string, []>("op_7833_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7833_cast_fp16 = einsum(equation = var_7833_equation_0, values = (var_7751_cast_fp16_0, var_7812_cast_fp16))[name = tensor<string, []>("op_7833_cast_fp16")];
            tensor<string, []> var_7835_equation_0 = const()[name = tensor<string, []>("op_7835_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7835_cast_fp16 = einsum(equation = var_7835_equation_0, values = (var_7751_cast_fp16_1, var_7813_cast_fp16))[name = tensor<string, []>("op_7835_cast_fp16")];
            tensor<string, []> var_7837_equation_0 = const()[name = tensor<string, []>("op_7837_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7837_cast_fp16 = einsum(equation = var_7837_equation_0, values = (var_7751_cast_fp16_2, var_7814_cast_fp16))[name = tensor<string, []>("op_7837_cast_fp16")];
            tensor<string, []> var_7839_equation_0 = const()[name = tensor<string, []>("op_7839_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7839_cast_fp16 = einsum(equation = var_7839_equation_0, values = (var_7751_cast_fp16_3, var_7815_cast_fp16))[name = tensor<string, []>("op_7839_cast_fp16")];
            tensor<string, []> var_7841_equation_0 = const()[name = tensor<string, []>("op_7841_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7841_cast_fp16 = einsum(equation = var_7841_equation_0, values = (var_7751_cast_fp16_4, var_7816_cast_fp16))[name = tensor<string, []>("op_7841_cast_fp16")];
            tensor<string, []> var_7843_equation_0 = const()[name = tensor<string, []>("op_7843_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7843_cast_fp16 = einsum(equation = var_7843_equation_0, values = (var_7751_cast_fp16_5, var_7817_cast_fp16))[name = tensor<string, []>("op_7843_cast_fp16")];
            tensor<string, []> var_7845_equation_0 = const()[name = tensor<string, []>("op_7845_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7845_cast_fp16 = einsum(equation = var_7845_equation_0, values = (var_7751_cast_fp16_6, var_7818_cast_fp16))[name = tensor<string, []>("op_7845_cast_fp16")];
            tensor<string, []> var_7847_equation_0 = const()[name = tensor<string, []>("op_7847_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7847_cast_fp16 = einsum(equation = var_7847_equation_0, values = (var_7751_cast_fp16_7, var_7819_cast_fp16))[name = tensor<string, []>("op_7847_cast_fp16")];
            tensor<string, []> var_7849_equation_0 = const()[name = tensor<string, []>("op_7849_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7849_cast_fp16 = einsum(equation = var_7849_equation_0, values = (var_7751_cast_fp16_8, var_7820_cast_fp16))[name = tensor<string, []>("op_7849_cast_fp16")];
            tensor<string, []> var_7851_equation_0 = const()[name = tensor<string, []>("op_7851_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7851_cast_fp16 = einsum(equation = var_7851_equation_0, values = (var_7751_cast_fp16_9, var_7821_cast_fp16))[name = tensor<string, []>("op_7851_cast_fp16")];
            tensor<string, []> var_7853_equation_0 = const()[name = tensor<string, []>("op_7853_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7853_cast_fp16 = einsum(equation = var_7853_equation_0, values = (var_7751_cast_fp16_10, var_7822_cast_fp16))[name = tensor<string, []>("op_7853_cast_fp16")];
            tensor<string, []> var_7855_equation_0 = const()[name = tensor<string, []>("op_7855_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7855_cast_fp16 = einsum(equation = var_7855_equation_0, values = (var_7751_cast_fp16_11, var_7823_cast_fp16))[name = tensor<string, []>("op_7855_cast_fp16")];
            tensor<string, []> var_7857_equation_0 = const()[name = tensor<string, []>("op_7857_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7857_cast_fp16 = einsum(equation = var_7857_equation_0, values = (var_7751_cast_fp16_12, var_7824_cast_fp16))[name = tensor<string, []>("op_7857_cast_fp16")];
            tensor<string, []> var_7859_equation_0 = const()[name = tensor<string, []>("op_7859_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7859_cast_fp16 = einsum(equation = var_7859_equation_0, values = (var_7751_cast_fp16_13, var_7825_cast_fp16))[name = tensor<string, []>("op_7859_cast_fp16")];
            tensor<string, []> var_7861_equation_0 = const()[name = tensor<string, []>("op_7861_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7861_cast_fp16 = einsum(equation = var_7861_equation_0, values = (var_7751_cast_fp16_14, var_7826_cast_fp16))[name = tensor<string, []>("op_7861_cast_fp16")];
            tensor<string, []> var_7863_equation_0 = const()[name = tensor<string, []>("op_7863_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7863_cast_fp16 = einsum(equation = var_7863_equation_0, values = (var_7751_cast_fp16_15, var_7827_cast_fp16))[name = tensor<string, []>("op_7863_cast_fp16")];
            tensor<string, []> var_7865_equation_0 = const()[name = tensor<string, []>("op_7865_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7865_cast_fp16 = einsum(equation = var_7865_equation_0, values = (var_7751_cast_fp16_16, var_7828_cast_fp16))[name = tensor<string, []>("op_7865_cast_fp16")];
            tensor<string, []> var_7867_equation_0 = const()[name = tensor<string, []>("op_7867_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7867_cast_fp16 = einsum(equation = var_7867_equation_0, values = (var_7751_cast_fp16_17, var_7829_cast_fp16))[name = tensor<string, []>("op_7867_cast_fp16")];
            tensor<string, []> var_7869_equation_0 = const()[name = tensor<string, []>("op_7869_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7869_cast_fp16 = einsum(equation = var_7869_equation_0, values = (var_7751_cast_fp16_18, var_7830_cast_fp16))[name = tensor<string, []>("op_7869_cast_fp16")];
            tensor<string, []> var_7871_equation_0 = const()[name = tensor<string, []>("op_7871_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_7871_cast_fp16 = einsum(equation = var_7871_equation_0, values = (var_7751_cast_fp16_19, var_7831_cast_fp16))[name = tensor<string, []>("op_7871_cast_fp16")];
            tensor<bool, []> input_285_interleave_0 = const()[name = tensor<string, []>("input_285_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_285_cast_fp16 = concat(axis = var_7656, interleave = input_285_interleave_0, values = (var_7833_cast_fp16, var_7835_cast_fp16, var_7837_cast_fp16, var_7839_cast_fp16, var_7841_cast_fp16, var_7843_cast_fp16, var_7845_cast_fp16, var_7847_cast_fp16, var_7849_cast_fp16, var_7851_cast_fp16, var_7853_cast_fp16, var_7855_cast_fp16, var_7857_cast_fp16, var_7859_cast_fp16, var_7861_cast_fp16, var_7863_cast_fp16, var_7865_cast_fp16, var_7867_cast_fp16, var_7869_cast_fp16, var_7871_cast_fp16))[name = tensor<string, []>("input_285_cast_fp16")];
            tensor<string, []> var_7880_pad_type_0 = const()[name = tensor<string, []>("op_7880_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7880_strides_0 = const()[name = tensor<string, []>("op_7880_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7880_pad_0 = const()[name = tensor<string, []>("op_7880_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7880_dilations_0 = const()[name = tensor<string, []>("op_7880_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7880_groups_0 = const()[name = tensor<string, []>("op_7880_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_28_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_28_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1126391872)))];
            tensor<fp16, [1280]> blocks_28_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_28_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1129668736)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7880_cast_fp16 = conv(bias = blocks_28_attn_out_bias_to_fp16, dilations = var_7880_dilations_0, groups = var_7880_groups_0, pad = var_7880_pad_0, pad_type = var_7880_pad_type_0, strides = var_7880_strides_0, weight = blocks_28_attn_out_weight_to_fp16, x = input_285_cast_fp16)[name = tensor<string, []>("op_7880_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_115_cast_fp16 = add(x = inputs_113_cast_fp16, y = var_7880_cast_fp16)[name = tensor<string, []>("inputs_115_cast_fp16")];
            tensor<int32, [1]> input_287_axes_0 = const()[name = tensor<string, []>("input_287_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_287_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_287_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1129671360)))];
            tensor<fp16, [1280]> input_287_beta_0_to_fp16 = const()[name = tensor<string, []>("input_287_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1129673984)))];
            tensor<fp16, []> var_7890_to_fp16 = const()[name = tensor<string, []>("op_7890_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_287_cast_fp16 = layer_norm(axes = input_287_axes_0, beta = input_287_beta_0_to_fp16, epsilon = var_7890_to_fp16, gamma = input_287_gamma_0_to_fp16, x = inputs_115_cast_fp16)[name = tensor<string, []>("input_287_cast_fp16")];
            tensor<string, []> input_289_pad_type_0 = const()[name = tensor<string, []>("input_289_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_289_strides_0 = const()[name = tensor<string, []>("input_289_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_289_pad_0 = const()[name = tensor<string, []>("input_289_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_289_dilations_0 = const()[name = tensor<string, []>("input_289_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_289_groups_0 = const()[name = tensor<string, []>("input_289_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_28_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_28_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1129676608)))];
            tensor<fp16, [5120]> blocks_28_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_28_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1142783872)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_289_cast_fp16 = conv(bias = blocks_28_mlp_0_bias_to_fp16, dilations = input_289_dilations_0, groups = input_289_groups_0, pad = input_289_pad_0, pad_type = input_289_pad_type_0, strides = input_289_strides_0, weight = blocks_28_mlp_0_weight_to_fp16, x = input_287_cast_fp16)[name = tensor<string, []>("input_289_cast_fp16")];
            tensor<string, []> input_291_mode_0 = const()[name = tensor<string, []>("input_291_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_291_cast_fp16 = gelu(mode = input_291_mode_0, x = input_289_cast_fp16)[name = tensor<string, []>("input_291_cast_fp16")];
            tensor<string, []> var_7916_pad_type_0 = const()[name = tensor<string, []>("op_7916_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7916_strides_0 = const()[name = tensor<string, []>("op_7916_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7916_pad_0 = const()[name = tensor<string, []>("op_7916_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7916_dilations_0 = const()[name = tensor<string, []>("op_7916_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7916_groups_0 = const()[name = tensor<string, []>("op_7916_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_28_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_28_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1142794176)))];
            tensor<fp16, [1280]> blocks_28_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_28_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1155901440)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7916_cast_fp16 = conv(bias = blocks_28_mlp_2_bias_to_fp16, dilations = var_7916_dilations_0, groups = var_7916_groups_0, pad = var_7916_pad_0, pad_type = var_7916_pad_type_0, strides = var_7916_strides_0, weight = blocks_28_mlp_2_weight_to_fp16, x = input_291_cast_fp16)[name = tensor<string, []>("op_7916_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_117_cast_fp16 = add(x = inputs_115_cast_fp16, y = var_7916_cast_fp16)[name = tensor<string, []>("inputs_117_cast_fp16")];
            tensor<int32, []> var_7925 = const()[name = tensor<string, []>("op_7925"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_293_axes_0 = const()[name = tensor<string, []>("input_293_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_293_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_293_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1155904064)))];
            tensor<fp16, [1280]> input_293_beta_0_to_fp16 = const()[name = tensor<string, []>("input_293_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1155906688)))];
            tensor<fp16, []> var_7941_to_fp16 = const()[name = tensor<string, []>("op_7941_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_293_cast_fp16 = layer_norm(axes = input_293_axes_0, beta = input_293_beta_0_to_fp16, epsilon = var_7941_to_fp16, gamma = input_293_gamma_0_to_fp16, x = inputs_117_cast_fp16)[name = tensor<string, []>("input_293_cast_fp16")];
            tensor<string, []> q_59_pad_type_0 = const()[name = tensor<string, []>("q_59_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_59_strides_0 = const()[name = tensor<string, []>("q_59_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_59_pad_0 = const()[name = tensor<string, []>("q_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_59_dilations_0 = const()[name = tensor<string, []>("q_59_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_59_groups_0 = const()[name = tensor<string, []>("q_59_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_7976_weight_0_to_fp16 = const()[name = tensor<string, []>("op_7976_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1155909312)))];
            tensor<fp16, [1280]> var_7976_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7976_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1159186176)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7976_cast_fp16 = conv(bias = var_7976_bias_0_to_fp16, dilations = q_59_dilations_0, groups = q_59_groups_0, pad = q_59_pad_0, pad_type = q_59_pad_type_0, strides = q_59_strides_0, weight = var_7976_weight_0_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("op_7976_cast_fp16")];
            tensor<string, []> k_59_pad_type_0 = const()[name = tensor<string, []>("k_59_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_59_strides_0 = const()[name = tensor<string, []>("k_59_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_59_pad_0 = const()[name = tensor<string, []>("k_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_59_dilations_0 = const()[name = tensor<string, []>("k_59_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_59_groups_0 = const()[name = tensor<string, []>("k_59_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_29_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_29_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1159188800)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_59_cast_fp16 = conv(dilations = k_59_dilations_0, groups = k_59_groups_0, pad = k_59_pad_0, pad_type = k_59_pad_type_0, strides = k_59_strides_0, weight = blocks_29_attn_key_weight_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("k_59_cast_fp16")];
            tensor<string, []> var_7974_pad_type_0 = const()[name = tensor<string, []>("op_7974_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_7974_strides_0 = const()[name = tensor<string, []>("op_7974_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_7974_pad_0 = const()[name = tensor<string, []>("op_7974_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_7974_dilations_0 = const()[name = tensor<string, []>("op_7974_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_7974_groups_0 = const()[name = tensor<string, []>("op_7974_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_29_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_29_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1162465664)))];
            tensor<fp16, [1280]> blocks_29_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_29_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1165742528)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_7974_cast_fp16 = conv(bias = blocks_29_attn_value_bias_to_fp16, dilations = var_7974_dilations_0, groups = var_7974_groups_0, pad = var_7974_pad_0, pad_type = var_7974_pad_type_0, strides = var_7974_strides_0, weight = blocks_29_attn_value_weight_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("op_7974_cast_fp16")];
            tensor<int32, [20]> tile_87 = const()[name = tensor<string, []>("tile_87"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7977_axis_0 = const()[name = tensor<string, []>("op_7977_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_7977_cast_fp16_19 = split(axis = var_7977_axis_0, split_sizes = tile_87, x = var_7976_cast_fp16)[name = tensor<string, []>("op_7977_cast_fp16")];
            tensor<int32, [4]> var_7998_perm_0 = const()[name = tensor<string, []>("op_7998_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_88 = const()[name = tensor<string, []>("tile_88"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7999_axis_0 = const()[name = tensor<string, []>("op_7999_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_7998_cast_fp16 = transpose(perm = var_7998_perm_0, x = k_59_cast_fp16)[name = tensor<string, []>("transpose_3")];
            tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_7999_cast_fp16_19 = split(axis = var_7999_axis_0, split_sizes = tile_88, x = var_7998_cast_fp16)[name = tensor<string, []>("op_7999_cast_fp16")];
            tensor<int32, [20]> tile_89 = const()[name = tensor<string, []>("tile_89"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8020_axis_0 = const()[name = tensor<string, []>("op_8020_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_8020_cast_fp16_19 = split(axis = var_8020_axis_0, split_sizes = tile_89, x = var_7974_cast_fp16)[name = tensor<string, []>("op_8020_cast_fp16")];
            tensor<string, []> aw_1161_equation_0 = const()[name = tensor<string, []>("aw_1161_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1161_cast_fp16 = einsum(equation = aw_1161_equation_0, values = (var_7999_cast_fp16_0, var_7977_cast_fp16_0))[name = tensor<string, []>("aw_1161_cast_fp16")];
            tensor<string, []> aw_1163_equation_0 = const()[name = tensor<string, []>("aw_1163_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1163_cast_fp16 = einsum(equation = aw_1163_equation_0, values = (var_7999_cast_fp16_1, var_7977_cast_fp16_1))[name = tensor<string, []>("aw_1163_cast_fp16")];
            tensor<string, []> aw_1165_equation_0 = const()[name = tensor<string, []>("aw_1165_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1165_cast_fp16 = einsum(equation = aw_1165_equation_0, values = (var_7999_cast_fp16_2, var_7977_cast_fp16_2))[name = tensor<string, []>("aw_1165_cast_fp16")];
            tensor<string, []> aw_1167_equation_0 = const()[name = tensor<string, []>("aw_1167_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1167_cast_fp16 = einsum(equation = aw_1167_equation_0, values = (var_7999_cast_fp16_3, var_7977_cast_fp16_3))[name = tensor<string, []>("aw_1167_cast_fp16")];
            tensor<string, []> aw_1169_equation_0 = const()[name = tensor<string, []>("aw_1169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1169_cast_fp16 = einsum(equation = aw_1169_equation_0, values = (var_7999_cast_fp16_4, var_7977_cast_fp16_4))[name = tensor<string, []>("aw_1169_cast_fp16")];
            tensor<string, []> aw_1171_equation_0 = const()[name = tensor<string, []>("aw_1171_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1171_cast_fp16 = einsum(equation = aw_1171_equation_0, values = (var_7999_cast_fp16_5, var_7977_cast_fp16_5))[name = tensor<string, []>("aw_1171_cast_fp16")];
            tensor<string, []> aw_1173_equation_0 = const()[name = tensor<string, []>("aw_1173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1173_cast_fp16 = einsum(equation = aw_1173_equation_0, values = (var_7999_cast_fp16_6, var_7977_cast_fp16_6))[name = tensor<string, []>("aw_1173_cast_fp16")];
            tensor<string, []> aw_1175_equation_0 = const()[name = tensor<string, []>("aw_1175_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1175_cast_fp16 = einsum(equation = aw_1175_equation_0, values = (var_7999_cast_fp16_7, var_7977_cast_fp16_7))[name = tensor<string, []>("aw_1175_cast_fp16")];
            tensor<string, []> aw_1177_equation_0 = const()[name = tensor<string, []>("aw_1177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1177_cast_fp16 = einsum(equation = aw_1177_equation_0, values = (var_7999_cast_fp16_8, var_7977_cast_fp16_8))[name = tensor<string, []>("aw_1177_cast_fp16")];
            tensor<string, []> aw_1179_equation_0 = const()[name = tensor<string, []>("aw_1179_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1179_cast_fp16 = einsum(equation = aw_1179_equation_0, values = (var_7999_cast_fp16_9, var_7977_cast_fp16_9))[name = tensor<string, []>("aw_1179_cast_fp16")];
            tensor<string, []> aw_1181_equation_0 = const()[name = tensor<string, []>("aw_1181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1181_cast_fp16 = einsum(equation = aw_1181_equation_0, values = (var_7999_cast_fp16_10, var_7977_cast_fp16_10))[name = tensor<string, []>("aw_1181_cast_fp16")];
            tensor<string, []> aw_1183_equation_0 = const()[name = tensor<string, []>("aw_1183_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1183_cast_fp16 = einsum(equation = aw_1183_equation_0, values = (var_7999_cast_fp16_11, var_7977_cast_fp16_11))[name = tensor<string, []>("aw_1183_cast_fp16")];
            tensor<string, []> aw_1185_equation_0 = const()[name = tensor<string, []>("aw_1185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1185_cast_fp16 = einsum(equation = aw_1185_equation_0, values = (var_7999_cast_fp16_12, var_7977_cast_fp16_12))[name = tensor<string, []>("aw_1185_cast_fp16")];
            tensor<string, []> aw_1187_equation_0 = const()[name = tensor<string, []>("aw_1187_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1187_cast_fp16 = einsum(equation = aw_1187_equation_0, values = (var_7999_cast_fp16_13, var_7977_cast_fp16_13))[name = tensor<string, []>("aw_1187_cast_fp16")];
            tensor<string, []> aw_1189_equation_0 = const()[name = tensor<string, []>("aw_1189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1189_cast_fp16 = einsum(equation = aw_1189_equation_0, values = (var_7999_cast_fp16_14, var_7977_cast_fp16_14))[name = tensor<string, []>("aw_1189_cast_fp16")];
            tensor<string, []> aw_1191_equation_0 = const()[name = tensor<string, []>("aw_1191_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1191_cast_fp16 = einsum(equation = aw_1191_equation_0, values = (var_7999_cast_fp16_15, var_7977_cast_fp16_15))[name = tensor<string, []>("aw_1191_cast_fp16")];
            tensor<string, []> aw_1193_equation_0 = const()[name = tensor<string, []>("aw_1193_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1193_cast_fp16 = einsum(equation = aw_1193_equation_0, values = (var_7999_cast_fp16_16, var_7977_cast_fp16_16))[name = tensor<string, []>("aw_1193_cast_fp16")];
            tensor<string, []> aw_1195_equation_0 = const()[name = tensor<string, []>("aw_1195_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1195_cast_fp16 = einsum(equation = aw_1195_equation_0, values = (var_7999_cast_fp16_17, var_7977_cast_fp16_17))[name = tensor<string, []>("aw_1195_cast_fp16")];
            tensor<string, []> aw_1197_equation_0 = const()[name = tensor<string, []>("aw_1197_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1197_cast_fp16 = einsum(equation = aw_1197_equation_0, values = (var_7999_cast_fp16_18, var_7977_cast_fp16_18))[name = tensor<string, []>("aw_1197_cast_fp16")];
            tensor<string, []> aw_1199_equation_0 = const()[name = tensor<string, []>("aw_1199_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1199_cast_fp16 = einsum(equation = aw_1199_equation_0, values = (var_7999_cast_fp16_19, var_7977_cast_fp16_19))[name = tensor<string, []>("aw_1199_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8081_cast_fp16 = softmax(axis = var_7925, x = aw_1161_cast_fp16)[name = tensor<string, []>("op_8081_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8082_cast_fp16 = softmax(axis = var_7925, x = aw_1163_cast_fp16)[name = tensor<string, []>("op_8082_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8083_cast_fp16 = softmax(axis = var_7925, x = aw_1165_cast_fp16)[name = tensor<string, []>("op_8083_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8084_cast_fp16 = softmax(axis = var_7925, x = aw_1167_cast_fp16)[name = tensor<string, []>("op_8084_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8085_cast_fp16 = softmax(axis = var_7925, x = aw_1169_cast_fp16)[name = tensor<string, []>("op_8085_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8086_cast_fp16 = softmax(axis = var_7925, x = aw_1171_cast_fp16)[name = tensor<string, []>("op_8086_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8087_cast_fp16 = softmax(axis = var_7925, x = aw_1173_cast_fp16)[name = tensor<string, []>("op_8087_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8088_cast_fp16 = softmax(axis = var_7925, x = aw_1175_cast_fp16)[name = tensor<string, []>("op_8088_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8089_cast_fp16 = softmax(axis = var_7925, x = aw_1177_cast_fp16)[name = tensor<string, []>("op_8089_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8090_cast_fp16 = softmax(axis = var_7925, x = aw_1179_cast_fp16)[name = tensor<string, []>("op_8090_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8091_cast_fp16 = softmax(axis = var_7925, x = aw_1181_cast_fp16)[name = tensor<string, []>("op_8091_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8092_cast_fp16 = softmax(axis = var_7925, x = aw_1183_cast_fp16)[name = tensor<string, []>("op_8092_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8093_cast_fp16 = softmax(axis = var_7925, x = aw_1185_cast_fp16)[name = tensor<string, []>("op_8093_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8094_cast_fp16 = softmax(axis = var_7925, x = aw_1187_cast_fp16)[name = tensor<string, []>("op_8094_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8095_cast_fp16 = softmax(axis = var_7925, x = aw_1189_cast_fp16)[name = tensor<string, []>("op_8095_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8096_cast_fp16 = softmax(axis = var_7925, x = aw_1191_cast_fp16)[name = tensor<string, []>("op_8096_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8097_cast_fp16 = softmax(axis = var_7925, x = aw_1193_cast_fp16)[name = tensor<string, []>("op_8097_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8098_cast_fp16 = softmax(axis = var_7925, x = aw_1195_cast_fp16)[name = tensor<string, []>("op_8098_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8099_cast_fp16 = softmax(axis = var_7925, x = aw_1197_cast_fp16)[name = tensor<string, []>("op_8099_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8100_cast_fp16 = softmax(axis = var_7925, x = aw_1199_cast_fp16)[name = tensor<string, []>("op_8100_cast_fp16")];
            tensor<string, []> var_8102_equation_0 = const()[name = tensor<string, []>("op_8102_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8102_cast_fp16 = einsum(equation = var_8102_equation_0, values = (var_8020_cast_fp16_0, var_8081_cast_fp16))[name = tensor<string, []>("op_8102_cast_fp16")];
            tensor<string, []> var_8104_equation_0 = const()[name = tensor<string, []>("op_8104_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8104_cast_fp16 = einsum(equation = var_8104_equation_0, values = (var_8020_cast_fp16_1, var_8082_cast_fp16))[name = tensor<string, []>("op_8104_cast_fp16")];
            tensor<string, []> var_8106_equation_0 = const()[name = tensor<string, []>("op_8106_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8106_cast_fp16 = einsum(equation = var_8106_equation_0, values = (var_8020_cast_fp16_2, var_8083_cast_fp16))[name = tensor<string, []>("op_8106_cast_fp16")];
            tensor<string, []> var_8108_equation_0 = const()[name = tensor<string, []>("op_8108_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8108_cast_fp16 = einsum(equation = var_8108_equation_0, values = (var_8020_cast_fp16_3, var_8084_cast_fp16))[name = tensor<string, []>("op_8108_cast_fp16")];
            tensor<string, []> var_8110_equation_0 = const()[name = tensor<string, []>("op_8110_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8110_cast_fp16 = einsum(equation = var_8110_equation_0, values = (var_8020_cast_fp16_4, var_8085_cast_fp16))[name = tensor<string, []>("op_8110_cast_fp16")];
            tensor<string, []> var_8112_equation_0 = const()[name = tensor<string, []>("op_8112_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8112_cast_fp16 = einsum(equation = var_8112_equation_0, values = (var_8020_cast_fp16_5, var_8086_cast_fp16))[name = tensor<string, []>("op_8112_cast_fp16")];
            tensor<string, []> var_8114_equation_0 = const()[name = tensor<string, []>("op_8114_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8114_cast_fp16 = einsum(equation = var_8114_equation_0, values = (var_8020_cast_fp16_6, var_8087_cast_fp16))[name = tensor<string, []>("op_8114_cast_fp16")];
            tensor<string, []> var_8116_equation_0 = const()[name = tensor<string, []>("op_8116_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8116_cast_fp16 = einsum(equation = var_8116_equation_0, values = (var_8020_cast_fp16_7, var_8088_cast_fp16))[name = tensor<string, []>("op_8116_cast_fp16")];
            tensor<string, []> var_8118_equation_0 = const()[name = tensor<string, []>("op_8118_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8118_cast_fp16 = einsum(equation = var_8118_equation_0, values = (var_8020_cast_fp16_8, var_8089_cast_fp16))[name = tensor<string, []>("op_8118_cast_fp16")];
            tensor<string, []> var_8120_equation_0 = const()[name = tensor<string, []>("op_8120_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8120_cast_fp16 = einsum(equation = var_8120_equation_0, values = (var_8020_cast_fp16_9, var_8090_cast_fp16))[name = tensor<string, []>("op_8120_cast_fp16")];
            tensor<string, []> var_8122_equation_0 = const()[name = tensor<string, []>("op_8122_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8122_cast_fp16 = einsum(equation = var_8122_equation_0, values = (var_8020_cast_fp16_10, var_8091_cast_fp16))[name = tensor<string, []>("op_8122_cast_fp16")];
            tensor<string, []> var_8124_equation_0 = const()[name = tensor<string, []>("op_8124_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8124_cast_fp16 = einsum(equation = var_8124_equation_0, values = (var_8020_cast_fp16_11, var_8092_cast_fp16))[name = tensor<string, []>("op_8124_cast_fp16")];
            tensor<string, []> var_8126_equation_0 = const()[name = tensor<string, []>("op_8126_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8126_cast_fp16 = einsum(equation = var_8126_equation_0, values = (var_8020_cast_fp16_12, var_8093_cast_fp16))[name = tensor<string, []>("op_8126_cast_fp16")];
            tensor<string, []> var_8128_equation_0 = const()[name = tensor<string, []>("op_8128_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8128_cast_fp16 = einsum(equation = var_8128_equation_0, values = (var_8020_cast_fp16_13, var_8094_cast_fp16))[name = tensor<string, []>("op_8128_cast_fp16")];
            tensor<string, []> var_8130_equation_0 = const()[name = tensor<string, []>("op_8130_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8130_cast_fp16 = einsum(equation = var_8130_equation_0, values = (var_8020_cast_fp16_14, var_8095_cast_fp16))[name = tensor<string, []>("op_8130_cast_fp16")];
            tensor<string, []> var_8132_equation_0 = const()[name = tensor<string, []>("op_8132_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8132_cast_fp16 = einsum(equation = var_8132_equation_0, values = (var_8020_cast_fp16_15, var_8096_cast_fp16))[name = tensor<string, []>("op_8132_cast_fp16")];
            tensor<string, []> var_8134_equation_0 = const()[name = tensor<string, []>("op_8134_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8134_cast_fp16 = einsum(equation = var_8134_equation_0, values = (var_8020_cast_fp16_16, var_8097_cast_fp16))[name = tensor<string, []>("op_8134_cast_fp16")];
            tensor<string, []> var_8136_equation_0 = const()[name = tensor<string, []>("op_8136_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8136_cast_fp16 = einsum(equation = var_8136_equation_0, values = (var_8020_cast_fp16_17, var_8098_cast_fp16))[name = tensor<string, []>("op_8136_cast_fp16")];
            tensor<string, []> var_8138_equation_0 = const()[name = tensor<string, []>("op_8138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8138_cast_fp16 = einsum(equation = var_8138_equation_0, values = (var_8020_cast_fp16_18, var_8099_cast_fp16))[name = tensor<string, []>("op_8138_cast_fp16")];
            tensor<string, []> var_8140_equation_0 = const()[name = tensor<string, []>("op_8140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8140_cast_fp16 = einsum(equation = var_8140_equation_0, values = (var_8020_cast_fp16_19, var_8100_cast_fp16))[name = tensor<string, []>("op_8140_cast_fp16")];
            tensor<bool, []> input_295_interleave_0 = const()[name = tensor<string, []>("input_295_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_295_cast_fp16 = concat(axis = var_7925, interleave = input_295_interleave_0, values = (var_8102_cast_fp16, var_8104_cast_fp16, var_8106_cast_fp16, var_8108_cast_fp16, var_8110_cast_fp16, var_8112_cast_fp16, var_8114_cast_fp16, var_8116_cast_fp16, var_8118_cast_fp16, var_8120_cast_fp16, var_8122_cast_fp16, var_8124_cast_fp16, var_8126_cast_fp16, var_8128_cast_fp16, var_8130_cast_fp16, var_8132_cast_fp16, var_8134_cast_fp16, var_8136_cast_fp16, var_8138_cast_fp16, var_8140_cast_fp16))[name = tensor<string, []>("input_295_cast_fp16")];
            tensor<string, []> var_8149_pad_type_0 = const()[name = tensor<string, []>("op_8149_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8149_strides_0 = const()[name = tensor<string, []>("op_8149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8149_pad_0 = const()[name = tensor<string, []>("op_8149_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8149_dilations_0 = const()[name = tensor<string, []>("op_8149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8149_groups_0 = const()[name = tensor<string, []>("op_8149_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_29_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_29_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1165745152)))];
            tensor<fp16, [1280]> blocks_29_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_29_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1169022016)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8149_cast_fp16 = conv(bias = blocks_29_attn_out_bias_to_fp16, dilations = var_8149_dilations_0, groups = var_8149_groups_0, pad = var_8149_pad_0, pad_type = var_8149_pad_type_0, strides = var_8149_strides_0, weight = blocks_29_attn_out_weight_to_fp16, x = input_295_cast_fp16)[name = tensor<string, []>("op_8149_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_119_cast_fp16 = add(x = inputs_117_cast_fp16, y = var_8149_cast_fp16)[name = tensor<string, []>("inputs_119_cast_fp16")];
            tensor<int32, [1]> input_297_axes_0 = const()[name = tensor<string, []>("input_297_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_297_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_297_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1169024640)))];
            tensor<fp16, [1280]> input_297_beta_0_to_fp16 = const()[name = tensor<string, []>("input_297_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1169027264)))];
            tensor<fp16, []> var_8159_to_fp16 = const()[name = tensor<string, []>("op_8159_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_297_cast_fp16 = layer_norm(axes = input_297_axes_0, beta = input_297_beta_0_to_fp16, epsilon = var_8159_to_fp16, gamma = input_297_gamma_0_to_fp16, x = inputs_119_cast_fp16)[name = tensor<string, []>("input_297_cast_fp16")];
            tensor<string, []> input_299_pad_type_0 = const()[name = tensor<string, []>("input_299_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_299_strides_0 = const()[name = tensor<string, []>("input_299_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_299_pad_0 = const()[name = tensor<string, []>("input_299_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_299_dilations_0 = const()[name = tensor<string, []>("input_299_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_299_groups_0 = const()[name = tensor<string, []>("input_299_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_29_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_29_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1169029888)))];
            tensor<fp16, [5120]> blocks_29_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_29_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1182137152)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_299_cast_fp16 = conv(bias = blocks_29_mlp_0_bias_to_fp16, dilations = input_299_dilations_0, groups = input_299_groups_0, pad = input_299_pad_0, pad_type = input_299_pad_type_0, strides = input_299_strides_0, weight = blocks_29_mlp_0_weight_to_fp16, x = input_297_cast_fp16)[name = tensor<string, []>("input_299_cast_fp16")];
            tensor<string, []> input_301_mode_0 = const()[name = tensor<string, []>("input_301_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_301_cast_fp16 = gelu(mode = input_301_mode_0, x = input_299_cast_fp16)[name = tensor<string, []>("input_301_cast_fp16")];
            tensor<string, []> var_8185_pad_type_0 = const()[name = tensor<string, []>("op_8185_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8185_strides_0 = const()[name = tensor<string, []>("op_8185_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8185_pad_0 = const()[name = tensor<string, []>("op_8185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8185_dilations_0 = const()[name = tensor<string, []>("op_8185_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8185_groups_0 = const()[name = tensor<string, []>("op_8185_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_29_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_29_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1182147456)))];
            tensor<fp16, [1280]> blocks_29_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_29_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1195254720)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8185_cast_fp16 = conv(bias = blocks_29_mlp_2_bias_to_fp16, dilations = var_8185_dilations_0, groups = var_8185_groups_0, pad = var_8185_pad_0, pad_type = var_8185_pad_type_0, strides = var_8185_strides_0, weight = blocks_29_mlp_2_weight_to_fp16, x = input_301_cast_fp16)[name = tensor<string, []>("op_8185_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_121_cast_fp16 = add(x = inputs_119_cast_fp16, y = var_8185_cast_fp16)[name = tensor<string, []>("inputs_121_cast_fp16")];
            tensor<int32, []> var_8194 = const()[name = tensor<string, []>("op_8194"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_303_axes_0 = const()[name = tensor<string, []>("input_303_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_303_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_303_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1195257344)))];
            tensor<fp16, [1280]> input_303_beta_0_to_fp16 = const()[name = tensor<string, []>("input_303_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1195259968)))];
            tensor<fp16, []> var_8210_to_fp16 = const()[name = tensor<string, []>("op_8210_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_303_cast_fp16 = layer_norm(axes = input_303_axes_0, beta = input_303_beta_0_to_fp16, epsilon = var_8210_to_fp16, gamma = input_303_gamma_0_to_fp16, x = inputs_121_cast_fp16)[name = tensor<string, []>("input_303_cast_fp16")];
            tensor<string, []> q_61_pad_type_0 = const()[name = tensor<string, []>("q_61_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_61_strides_0 = const()[name = tensor<string, []>("q_61_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_61_pad_0 = const()[name = tensor<string, []>("q_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_61_dilations_0 = const()[name = tensor<string, []>("q_61_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_61_groups_0 = const()[name = tensor<string, []>("q_61_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_8245_weight_0_to_fp16 = const()[name = tensor<string, []>("op_8245_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1195262592)))];
            tensor<fp16, [1280]> var_8245_bias_0_to_fp16 = const()[name = tensor<string, []>("op_8245_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1198539456)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8245_cast_fp16 = conv(bias = var_8245_bias_0_to_fp16, dilations = q_61_dilations_0, groups = q_61_groups_0, pad = q_61_pad_0, pad_type = q_61_pad_type_0, strides = q_61_strides_0, weight = var_8245_weight_0_to_fp16, x = input_303_cast_fp16)[name = tensor<string, []>("op_8245_cast_fp16")];
            tensor<string, []> k_61_pad_type_0 = const()[name = tensor<string, []>("k_61_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_61_strides_0 = const()[name = tensor<string, []>("k_61_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_61_pad_0 = const()[name = tensor<string, []>("k_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_61_dilations_0 = const()[name = tensor<string, []>("k_61_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_61_groups_0 = const()[name = tensor<string, []>("k_61_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_30_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_30_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1198542080)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_61_cast_fp16 = conv(dilations = k_61_dilations_0, groups = k_61_groups_0, pad = k_61_pad_0, pad_type = k_61_pad_type_0, strides = k_61_strides_0, weight = blocks_30_attn_key_weight_to_fp16, x = input_303_cast_fp16)[name = tensor<string, []>("k_61_cast_fp16")];
            tensor<string, []> var_8243_pad_type_0 = const()[name = tensor<string, []>("op_8243_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8243_strides_0 = const()[name = tensor<string, []>("op_8243_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8243_pad_0 = const()[name = tensor<string, []>("op_8243_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8243_dilations_0 = const()[name = tensor<string, []>("op_8243_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8243_groups_0 = const()[name = tensor<string, []>("op_8243_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_30_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_30_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1201818944)))];
            tensor<fp16, [1280]> blocks_30_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_30_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1205095808)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8243_cast_fp16 = conv(bias = blocks_30_attn_value_bias_to_fp16, dilations = var_8243_dilations_0, groups = var_8243_groups_0, pad = var_8243_pad_0, pad_type = var_8243_pad_type_0, strides = var_8243_strides_0, weight = blocks_30_attn_value_weight_to_fp16, x = input_303_cast_fp16)[name = tensor<string, []>("op_8243_cast_fp16")];
            tensor<int32, [20]> tile_90 = const()[name = tensor<string, []>("tile_90"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8246_axis_0 = const()[name = tensor<string, []>("op_8246_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_8246_cast_fp16_19 = split(axis = var_8246_axis_0, split_sizes = tile_90, x = var_8245_cast_fp16)[name = tensor<string, []>("op_8246_cast_fp16")];
            tensor<int32, [4]> var_8267_perm_0 = const()[name = tensor<string, []>("op_8267_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_91 = const()[name = tensor<string, []>("tile_91"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8268_axis_0 = const()[name = tensor<string, []>("op_8268_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_8267_cast_fp16 = transpose(perm = var_8267_perm_0, x = k_61_cast_fp16)[name = tensor<string, []>("transpose_2")];
            tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_8268_cast_fp16_19 = split(axis = var_8268_axis_0, split_sizes = tile_91, x = var_8267_cast_fp16)[name = tensor<string, []>("op_8268_cast_fp16")];
            tensor<int32, [20]> tile_92 = const()[name = tensor<string, []>("tile_92"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8289_axis_0 = const()[name = tensor<string, []>("op_8289_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_8289_cast_fp16_19 = split(axis = var_8289_axis_0, split_sizes = tile_92, x = var_8243_cast_fp16)[name = tensor<string, []>("op_8289_cast_fp16")];
            tensor<string, []> aw_1201_equation_0 = const()[name = tensor<string, []>("aw_1201_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1201_cast_fp16 = einsum(equation = aw_1201_equation_0, values = (var_8268_cast_fp16_0, var_8246_cast_fp16_0))[name = tensor<string, []>("aw_1201_cast_fp16")];
            tensor<string, []> aw_1203_equation_0 = const()[name = tensor<string, []>("aw_1203_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1203_cast_fp16 = einsum(equation = aw_1203_equation_0, values = (var_8268_cast_fp16_1, var_8246_cast_fp16_1))[name = tensor<string, []>("aw_1203_cast_fp16")];
            tensor<string, []> aw_1205_equation_0 = const()[name = tensor<string, []>("aw_1205_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1205_cast_fp16 = einsum(equation = aw_1205_equation_0, values = (var_8268_cast_fp16_2, var_8246_cast_fp16_2))[name = tensor<string, []>("aw_1205_cast_fp16")];
            tensor<string, []> aw_1207_equation_0 = const()[name = tensor<string, []>("aw_1207_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1207_cast_fp16 = einsum(equation = aw_1207_equation_0, values = (var_8268_cast_fp16_3, var_8246_cast_fp16_3))[name = tensor<string, []>("aw_1207_cast_fp16")];
            tensor<string, []> aw_1209_equation_0 = const()[name = tensor<string, []>("aw_1209_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1209_cast_fp16 = einsum(equation = aw_1209_equation_0, values = (var_8268_cast_fp16_4, var_8246_cast_fp16_4))[name = tensor<string, []>("aw_1209_cast_fp16")];
            tensor<string, []> aw_1211_equation_0 = const()[name = tensor<string, []>("aw_1211_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1211_cast_fp16 = einsum(equation = aw_1211_equation_0, values = (var_8268_cast_fp16_5, var_8246_cast_fp16_5))[name = tensor<string, []>("aw_1211_cast_fp16")];
            tensor<string, []> aw_1213_equation_0 = const()[name = tensor<string, []>("aw_1213_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1213_cast_fp16 = einsum(equation = aw_1213_equation_0, values = (var_8268_cast_fp16_6, var_8246_cast_fp16_6))[name = tensor<string, []>("aw_1213_cast_fp16")];
            tensor<string, []> aw_1215_equation_0 = const()[name = tensor<string, []>("aw_1215_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1215_cast_fp16 = einsum(equation = aw_1215_equation_0, values = (var_8268_cast_fp16_7, var_8246_cast_fp16_7))[name = tensor<string, []>("aw_1215_cast_fp16")];
            tensor<string, []> aw_1217_equation_0 = const()[name = tensor<string, []>("aw_1217_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1217_cast_fp16 = einsum(equation = aw_1217_equation_0, values = (var_8268_cast_fp16_8, var_8246_cast_fp16_8))[name = tensor<string, []>("aw_1217_cast_fp16")];
            tensor<string, []> aw_1219_equation_0 = const()[name = tensor<string, []>("aw_1219_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1219_cast_fp16 = einsum(equation = aw_1219_equation_0, values = (var_8268_cast_fp16_9, var_8246_cast_fp16_9))[name = tensor<string, []>("aw_1219_cast_fp16")];
            tensor<string, []> aw_1221_equation_0 = const()[name = tensor<string, []>("aw_1221_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1221_cast_fp16 = einsum(equation = aw_1221_equation_0, values = (var_8268_cast_fp16_10, var_8246_cast_fp16_10))[name = tensor<string, []>("aw_1221_cast_fp16")];
            tensor<string, []> aw_1223_equation_0 = const()[name = tensor<string, []>("aw_1223_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1223_cast_fp16 = einsum(equation = aw_1223_equation_0, values = (var_8268_cast_fp16_11, var_8246_cast_fp16_11))[name = tensor<string, []>("aw_1223_cast_fp16")];
            tensor<string, []> aw_1225_equation_0 = const()[name = tensor<string, []>("aw_1225_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1225_cast_fp16 = einsum(equation = aw_1225_equation_0, values = (var_8268_cast_fp16_12, var_8246_cast_fp16_12))[name = tensor<string, []>("aw_1225_cast_fp16")];
            tensor<string, []> aw_1227_equation_0 = const()[name = tensor<string, []>("aw_1227_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1227_cast_fp16 = einsum(equation = aw_1227_equation_0, values = (var_8268_cast_fp16_13, var_8246_cast_fp16_13))[name = tensor<string, []>("aw_1227_cast_fp16")];
            tensor<string, []> aw_1229_equation_0 = const()[name = tensor<string, []>("aw_1229_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1229_cast_fp16 = einsum(equation = aw_1229_equation_0, values = (var_8268_cast_fp16_14, var_8246_cast_fp16_14))[name = tensor<string, []>("aw_1229_cast_fp16")];
            tensor<string, []> aw_1231_equation_0 = const()[name = tensor<string, []>("aw_1231_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1231_cast_fp16 = einsum(equation = aw_1231_equation_0, values = (var_8268_cast_fp16_15, var_8246_cast_fp16_15))[name = tensor<string, []>("aw_1231_cast_fp16")];
            tensor<string, []> aw_1233_equation_0 = const()[name = tensor<string, []>("aw_1233_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1233_cast_fp16 = einsum(equation = aw_1233_equation_0, values = (var_8268_cast_fp16_16, var_8246_cast_fp16_16))[name = tensor<string, []>("aw_1233_cast_fp16")];
            tensor<string, []> aw_1235_equation_0 = const()[name = tensor<string, []>("aw_1235_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1235_cast_fp16 = einsum(equation = aw_1235_equation_0, values = (var_8268_cast_fp16_17, var_8246_cast_fp16_17))[name = tensor<string, []>("aw_1235_cast_fp16")];
            tensor<string, []> aw_1237_equation_0 = const()[name = tensor<string, []>("aw_1237_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1237_cast_fp16 = einsum(equation = aw_1237_equation_0, values = (var_8268_cast_fp16_18, var_8246_cast_fp16_18))[name = tensor<string, []>("aw_1237_cast_fp16")];
            tensor<string, []> aw_1239_equation_0 = const()[name = tensor<string, []>("aw_1239_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1239_cast_fp16 = einsum(equation = aw_1239_equation_0, values = (var_8268_cast_fp16_19, var_8246_cast_fp16_19))[name = tensor<string, []>("aw_1239_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8350_cast_fp16 = softmax(axis = var_8194, x = aw_1201_cast_fp16)[name = tensor<string, []>("op_8350_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8351_cast_fp16 = softmax(axis = var_8194, x = aw_1203_cast_fp16)[name = tensor<string, []>("op_8351_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8352_cast_fp16 = softmax(axis = var_8194, x = aw_1205_cast_fp16)[name = tensor<string, []>("op_8352_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8353_cast_fp16 = softmax(axis = var_8194, x = aw_1207_cast_fp16)[name = tensor<string, []>("op_8353_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8354_cast_fp16 = softmax(axis = var_8194, x = aw_1209_cast_fp16)[name = tensor<string, []>("op_8354_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8355_cast_fp16 = softmax(axis = var_8194, x = aw_1211_cast_fp16)[name = tensor<string, []>("op_8355_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8356_cast_fp16 = softmax(axis = var_8194, x = aw_1213_cast_fp16)[name = tensor<string, []>("op_8356_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8357_cast_fp16 = softmax(axis = var_8194, x = aw_1215_cast_fp16)[name = tensor<string, []>("op_8357_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8358_cast_fp16 = softmax(axis = var_8194, x = aw_1217_cast_fp16)[name = tensor<string, []>("op_8358_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8359_cast_fp16 = softmax(axis = var_8194, x = aw_1219_cast_fp16)[name = tensor<string, []>("op_8359_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8360_cast_fp16 = softmax(axis = var_8194, x = aw_1221_cast_fp16)[name = tensor<string, []>("op_8360_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8361_cast_fp16 = softmax(axis = var_8194, x = aw_1223_cast_fp16)[name = tensor<string, []>("op_8361_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8362_cast_fp16 = softmax(axis = var_8194, x = aw_1225_cast_fp16)[name = tensor<string, []>("op_8362_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8363_cast_fp16 = softmax(axis = var_8194, x = aw_1227_cast_fp16)[name = tensor<string, []>("op_8363_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8364_cast_fp16 = softmax(axis = var_8194, x = aw_1229_cast_fp16)[name = tensor<string, []>("op_8364_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8365_cast_fp16 = softmax(axis = var_8194, x = aw_1231_cast_fp16)[name = tensor<string, []>("op_8365_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8366_cast_fp16 = softmax(axis = var_8194, x = aw_1233_cast_fp16)[name = tensor<string, []>("op_8366_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8367_cast_fp16 = softmax(axis = var_8194, x = aw_1235_cast_fp16)[name = tensor<string, []>("op_8367_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8368_cast_fp16 = softmax(axis = var_8194, x = aw_1237_cast_fp16)[name = tensor<string, []>("op_8368_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8369_cast_fp16 = softmax(axis = var_8194, x = aw_1239_cast_fp16)[name = tensor<string, []>("op_8369_cast_fp16")];
            tensor<string, []> var_8371_equation_0 = const()[name = tensor<string, []>("op_8371_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8371_cast_fp16 = einsum(equation = var_8371_equation_0, values = (var_8289_cast_fp16_0, var_8350_cast_fp16))[name = tensor<string, []>("op_8371_cast_fp16")];
            tensor<string, []> var_8373_equation_0 = const()[name = tensor<string, []>("op_8373_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8373_cast_fp16 = einsum(equation = var_8373_equation_0, values = (var_8289_cast_fp16_1, var_8351_cast_fp16))[name = tensor<string, []>("op_8373_cast_fp16")];
            tensor<string, []> var_8375_equation_0 = const()[name = tensor<string, []>("op_8375_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8375_cast_fp16 = einsum(equation = var_8375_equation_0, values = (var_8289_cast_fp16_2, var_8352_cast_fp16))[name = tensor<string, []>("op_8375_cast_fp16")];
            tensor<string, []> var_8377_equation_0 = const()[name = tensor<string, []>("op_8377_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8377_cast_fp16 = einsum(equation = var_8377_equation_0, values = (var_8289_cast_fp16_3, var_8353_cast_fp16))[name = tensor<string, []>("op_8377_cast_fp16")];
            tensor<string, []> var_8379_equation_0 = const()[name = tensor<string, []>("op_8379_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8379_cast_fp16 = einsum(equation = var_8379_equation_0, values = (var_8289_cast_fp16_4, var_8354_cast_fp16))[name = tensor<string, []>("op_8379_cast_fp16")];
            tensor<string, []> var_8381_equation_0 = const()[name = tensor<string, []>("op_8381_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8381_cast_fp16 = einsum(equation = var_8381_equation_0, values = (var_8289_cast_fp16_5, var_8355_cast_fp16))[name = tensor<string, []>("op_8381_cast_fp16")];
            tensor<string, []> var_8383_equation_0 = const()[name = tensor<string, []>("op_8383_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8383_cast_fp16 = einsum(equation = var_8383_equation_0, values = (var_8289_cast_fp16_6, var_8356_cast_fp16))[name = tensor<string, []>("op_8383_cast_fp16")];
            tensor<string, []> var_8385_equation_0 = const()[name = tensor<string, []>("op_8385_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8385_cast_fp16 = einsum(equation = var_8385_equation_0, values = (var_8289_cast_fp16_7, var_8357_cast_fp16))[name = tensor<string, []>("op_8385_cast_fp16")];
            tensor<string, []> var_8387_equation_0 = const()[name = tensor<string, []>("op_8387_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8387_cast_fp16 = einsum(equation = var_8387_equation_0, values = (var_8289_cast_fp16_8, var_8358_cast_fp16))[name = tensor<string, []>("op_8387_cast_fp16")];
            tensor<string, []> var_8389_equation_0 = const()[name = tensor<string, []>("op_8389_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8389_cast_fp16 = einsum(equation = var_8389_equation_0, values = (var_8289_cast_fp16_9, var_8359_cast_fp16))[name = tensor<string, []>("op_8389_cast_fp16")];
            tensor<string, []> var_8391_equation_0 = const()[name = tensor<string, []>("op_8391_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8391_cast_fp16 = einsum(equation = var_8391_equation_0, values = (var_8289_cast_fp16_10, var_8360_cast_fp16))[name = tensor<string, []>("op_8391_cast_fp16")];
            tensor<string, []> var_8393_equation_0 = const()[name = tensor<string, []>("op_8393_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8393_cast_fp16 = einsum(equation = var_8393_equation_0, values = (var_8289_cast_fp16_11, var_8361_cast_fp16))[name = tensor<string, []>("op_8393_cast_fp16")];
            tensor<string, []> var_8395_equation_0 = const()[name = tensor<string, []>("op_8395_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8395_cast_fp16 = einsum(equation = var_8395_equation_0, values = (var_8289_cast_fp16_12, var_8362_cast_fp16))[name = tensor<string, []>("op_8395_cast_fp16")];
            tensor<string, []> var_8397_equation_0 = const()[name = tensor<string, []>("op_8397_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8397_cast_fp16 = einsum(equation = var_8397_equation_0, values = (var_8289_cast_fp16_13, var_8363_cast_fp16))[name = tensor<string, []>("op_8397_cast_fp16")];
            tensor<string, []> var_8399_equation_0 = const()[name = tensor<string, []>("op_8399_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8399_cast_fp16 = einsum(equation = var_8399_equation_0, values = (var_8289_cast_fp16_14, var_8364_cast_fp16))[name = tensor<string, []>("op_8399_cast_fp16")];
            tensor<string, []> var_8401_equation_0 = const()[name = tensor<string, []>("op_8401_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8401_cast_fp16 = einsum(equation = var_8401_equation_0, values = (var_8289_cast_fp16_15, var_8365_cast_fp16))[name = tensor<string, []>("op_8401_cast_fp16")];
            tensor<string, []> var_8403_equation_0 = const()[name = tensor<string, []>("op_8403_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8403_cast_fp16 = einsum(equation = var_8403_equation_0, values = (var_8289_cast_fp16_16, var_8366_cast_fp16))[name = tensor<string, []>("op_8403_cast_fp16")];
            tensor<string, []> var_8405_equation_0 = const()[name = tensor<string, []>("op_8405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8405_cast_fp16 = einsum(equation = var_8405_equation_0, values = (var_8289_cast_fp16_17, var_8367_cast_fp16))[name = tensor<string, []>("op_8405_cast_fp16")];
            tensor<string, []> var_8407_equation_0 = const()[name = tensor<string, []>("op_8407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8407_cast_fp16 = einsum(equation = var_8407_equation_0, values = (var_8289_cast_fp16_18, var_8368_cast_fp16))[name = tensor<string, []>("op_8407_cast_fp16")];
            tensor<string, []> var_8409_equation_0 = const()[name = tensor<string, []>("op_8409_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8409_cast_fp16 = einsum(equation = var_8409_equation_0, values = (var_8289_cast_fp16_19, var_8369_cast_fp16))[name = tensor<string, []>("op_8409_cast_fp16")];
            tensor<bool, []> input_305_interleave_0 = const()[name = tensor<string, []>("input_305_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_305_cast_fp16 = concat(axis = var_8194, interleave = input_305_interleave_0, values = (var_8371_cast_fp16, var_8373_cast_fp16, var_8375_cast_fp16, var_8377_cast_fp16, var_8379_cast_fp16, var_8381_cast_fp16, var_8383_cast_fp16, var_8385_cast_fp16, var_8387_cast_fp16, var_8389_cast_fp16, var_8391_cast_fp16, var_8393_cast_fp16, var_8395_cast_fp16, var_8397_cast_fp16, var_8399_cast_fp16, var_8401_cast_fp16, var_8403_cast_fp16, var_8405_cast_fp16, var_8407_cast_fp16, var_8409_cast_fp16))[name = tensor<string, []>("input_305_cast_fp16")];
            tensor<string, []> var_8418_pad_type_0 = const()[name = tensor<string, []>("op_8418_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8418_strides_0 = const()[name = tensor<string, []>("op_8418_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8418_pad_0 = const()[name = tensor<string, []>("op_8418_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8418_dilations_0 = const()[name = tensor<string, []>("op_8418_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8418_groups_0 = const()[name = tensor<string, []>("op_8418_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_30_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_30_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1205098432)))];
            tensor<fp16, [1280]> blocks_30_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_30_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1208375296)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8418_cast_fp16 = conv(bias = blocks_30_attn_out_bias_to_fp16, dilations = var_8418_dilations_0, groups = var_8418_groups_0, pad = var_8418_pad_0, pad_type = var_8418_pad_type_0, strides = var_8418_strides_0, weight = blocks_30_attn_out_weight_to_fp16, x = input_305_cast_fp16)[name = tensor<string, []>("op_8418_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_123_cast_fp16 = add(x = inputs_121_cast_fp16, y = var_8418_cast_fp16)[name = tensor<string, []>("inputs_123_cast_fp16")];
            tensor<int32, [1]> input_307_axes_0 = const()[name = tensor<string, []>("input_307_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_307_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_307_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1208377920)))];
            tensor<fp16, [1280]> input_307_beta_0_to_fp16 = const()[name = tensor<string, []>("input_307_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1208380544)))];
            tensor<fp16, []> var_8428_to_fp16 = const()[name = tensor<string, []>("op_8428_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_307_cast_fp16 = layer_norm(axes = input_307_axes_0, beta = input_307_beta_0_to_fp16, epsilon = var_8428_to_fp16, gamma = input_307_gamma_0_to_fp16, x = inputs_123_cast_fp16)[name = tensor<string, []>("input_307_cast_fp16")];
            tensor<string, []> input_309_pad_type_0 = const()[name = tensor<string, []>("input_309_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_309_strides_0 = const()[name = tensor<string, []>("input_309_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_309_pad_0 = const()[name = tensor<string, []>("input_309_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_309_dilations_0 = const()[name = tensor<string, []>("input_309_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_309_groups_0 = const()[name = tensor<string, []>("input_309_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_30_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_30_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1208383168)))];
            tensor<fp16, [5120]> blocks_30_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_30_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1221490432)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_309_cast_fp16 = conv(bias = blocks_30_mlp_0_bias_to_fp16, dilations = input_309_dilations_0, groups = input_309_groups_0, pad = input_309_pad_0, pad_type = input_309_pad_type_0, strides = input_309_strides_0, weight = blocks_30_mlp_0_weight_to_fp16, x = input_307_cast_fp16)[name = tensor<string, []>("input_309_cast_fp16")];
            tensor<string, []> input_311_mode_0 = const()[name = tensor<string, []>("input_311_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_311_cast_fp16 = gelu(mode = input_311_mode_0, x = input_309_cast_fp16)[name = tensor<string, []>("input_311_cast_fp16")];
            tensor<string, []> var_8454_pad_type_0 = const()[name = tensor<string, []>("op_8454_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8454_strides_0 = const()[name = tensor<string, []>("op_8454_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8454_pad_0 = const()[name = tensor<string, []>("op_8454_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8454_dilations_0 = const()[name = tensor<string, []>("op_8454_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8454_groups_0 = const()[name = tensor<string, []>("op_8454_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_30_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_30_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1221500736)))];
            tensor<fp16, [1280]> blocks_30_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_30_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1234608000)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8454_cast_fp16 = conv(bias = blocks_30_mlp_2_bias_to_fp16, dilations = var_8454_dilations_0, groups = var_8454_groups_0, pad = var_8454_pad_0, pad_type = var_8454_pad_type_0, strides = var_8454_strides_0, weight = blocks_30_mlp_2_weight_to_fp16, x = input_311_cast_fp16)[name = tensor<string, []>("op_8454_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_125_cast_fp16 = add(x = inputs_123_cast_fp16, y = var_8454_cast_fp16)[name = tensor<string, []>("inputs_125_cast_fp16")];
            tensor<int32, []> var_8463 = const()[name = tensor<string, []>("op_8463"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_313_axes_0 = const()[name = tensor<string, []>("input_313_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_313_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_313_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1234610624)))];
            tensor<fp16, [1280]> input_313_beta_0_to_fp16 = const()[name = tensor<string, []>("input_313_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1234613248)))];
            tensor<fp16, []> var_8479_to_fp16 = const()[name = tensor<string, []>("op_8479_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_313_cast_fp16 = layer_norm(axes = input_313_axes_0, beta = input_313_beta_0_to_fp16, epsilon = var_8479_to_fp16, gamma = input_313_gamma_0_to_fp16, x = inputs_125_cast_fp16)[name = tensor<string, []>("input_313_cast_fp16")];
            tensor<string, []> q_pad_type_0 = const()[name = tensor<string, []>("q_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_strides_0 = const()[name = tensor<string, []>("q_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_pad_0 = const()[name = tensor<string, []>("q_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_dilations_0 = const()[name = tensor<string, []>("q_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_groups_0 = const()[name = tensor<string, []>("q_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> var_8514_weight_0_to_fp16 = const()[name = tensor<string, []>("op_8514_weight_0_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1234615872)))];
            tensor<fp16, [1280]> var_8514_bias_0_to_fp16 = const()[name = tensor<string, []>("op_8514_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1237892736)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8514_cast_fp16 = conv(bias = var_8514_bias_0_to_fp16, dilations = q_dilations_0, groups = q_groups_0, pad = q_pad_0, pad_type = q_pad_type_0, strides = q_strides_0, weight = var_8514_weight_0_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("op_8514_cast_fp16")];
            tensor<string, []> k_pad_type_0 = const()[name = tensor<string, []>("k_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_strides_0 = const()[name = tensor<string, []>("k_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_pad_0 = const()[name = tensor<string, []>("k_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_dilations_0 = const()[name = tensor<string, []>("k_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_groups_0 = const()[name = tensor<string, []>("k_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_31_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_31_attn_key_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1237895360)))];
            tensor<fp16, [1, 1280, 1, 1500]> k_cast_fp16 = conv(dilations = k_dilations_0, groups = k_groups_0, pad = k_pad_0, pad_type = k_pad_type_0, strides = k_strides_0, weight = blocks_31_attn_key_weight_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("k_cast_fp16")];
            tensor<string, []> var_8512_pad_type_0 = const()[name = tensor<string, []>("op_8512_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8512_strides_0 = const()[name = tensor<string, []>("op_8512_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8512_pad_0 = const()[name = tensor<string, []>("op_8512_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8512_dilations_0 = const()[name = tensor<string, []>("op_8512_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8512_groups_0 = const()[name = tensor<string, []>("op_8512_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_31_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_31_attn_value_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1241172224)))];
            tensor<fp16, [1280]> blocks_31_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_31_attn_value_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1244449088)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8512_cast_fp16 = conv(bias = blocks_31_attn_value_bias_to_fp16, dilations = var_8512_dilations_0, groups = var_8512_groups_0, pad = var_8512_pad_0, pad_type = var_8512_pad_type_0, strides = var_8512_strides_0, weight = blocks_31_attn_value_weight_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("op_8512_cast_fp16")];
            tensor<int32, [20]> tile_93 = const()[name = tensor<string, []>("tile_93"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8515_axis_0 = const()[name = tensor<string, []>("op_8515_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_8515_cast_fp16_19 = split(axis = var_8515_axis_0, split_sizes = tile_93, x = var_8514_cast_fp16)[name = tensor<string, []>("op_8515_cast_fp16")];
            tensor<int32, [4]> var_8536_perm_0 = const()[name = tensor<string, []>("op_8536_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [20]> tile_94 = const()[name = tensor<string, []>("tile_94"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8537_axis_0 = const()[name = tensor<string, []>("op_8537_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1280]> var_8536_cast_fp16 = transpose(perm = var_8536_perm_0, x = k_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_15, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_16, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_17, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_18, tensor<fp16, [1, 1500, 1, 64]> var_8537_cast_fp16_19 = split(axis = var_8537_axis_0, split_sizes = tile_94, x = var_8536_cast_fp16)[name = tensor<string, []>("op_8537_cast_fp16")];
            tensor<int32, [20]> tile_95 = const()[name = tensor<string, []>("tile_95"), val = tensor<int32, [20]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_8558_axis_0 = const()[name = tensor<string, []>("op_8558_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_15, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_16, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_17, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_18, tensor<fp16, [1, 64, 1, 1500]> var_8558_cast_fp16_19 = split(axis = var_8558_axis_0, split_sizes = tile_95, x = var_8512_cast_fp16)[name = tensor<string, []>("op_8558_cast_fp16")];
            tensor<string, []> aw_1241_equation_0 = const()[name = tensor<string, []>("aw_1241_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1241_cast_fp16 = einsum(equation = aw_1241_equation_0, values = (var_8537_cast_fp16_0, var_8515_cast_fp16_0))[name = tensor<string, []>("aw_1241_cast_fp16")];
            tensor<string, []> aw_1243_equation_0 = const()[name = tensor<string, []>("aw_1243_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1243_cast_fp16 = einsum(equation = aw_1243_equation_0, values = (var_8537_cast_fp16_1, var_8515_cast_fp16_1))[name = tensor<string, []>("aw_1243_cast_fp16")];
            tensor<string, []> aw_1245_equation_0 = const()[name = tensor<string, []>("aw_1245_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1245_cast_fp16 = einsum(equation = aw_1245_equation_0, values = (var_8537_cast_fp16_2, var_8515_cast_fp16_2))[name = tensor<string, []>("aw_1245_cast_fp16")];
            tensor<string, []> aw_1247_equation_0 = const()[name = tensor<string, []>("aw_1247_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1247_cast_fp16 = einsum(equation = aw_1247_equation_0, values = (var_8537_cast_fp16_3, var_8515_cast_fp16_3))[name = tensor<string, []>("aw_1247_cast_fp16")];
            tensor<string, []> aw_1249_equation_0 = const()[name = tensor<string, []>("aw_1249_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1249_cast_fp16 = einsum(equation = aw_1249_equation_0, values = (var_8537_cast_fp16_4, var_8515_cast_fp16_4))[name = tensor<string, []>("aw_1249_cast_fp16")];
            tensor<string, []> aw_1251_equation_0 = const()[name = tensor<string, []>("aw_1251_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1251_cast_fp16 = einsum(equation = aw_1251_equation_0, values = (var_8537_cast_fp16_5, var_8515_cast_fp16_5))[name = tensor<string, []>("aw_1251_cast_fp16")];
            tensor<string, []> aw_1253_equation_0 = const()[name = tensor<string, []>("aw_1253_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1253_cast_fp16 = einsum(equation = aw_1253_equation_0, values = (var_8537_cast_fp16_6, var_8515_cast_fp16_6))[name = tensor<string, []>("aw_1253_cast_fp16")];
            tensor<string, []> aw_1255_equation_0 = const()[name = tensor<string, []>("aw_1255_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1255_cast_fp16 = einsum(equation = aw_1255_equation_0, values = (var_8537_cast_fp16_7, var_8515_cast_fp16_7))[name = tensor<string, []>("aw_1255_cast_fp16")];
            tensor<string, []> aw_1257_equation_0 = const()[name = tensor<string, []>("aw_1257_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1257_cast_fp16 = einsum(equation = aw_1257_equation_0, values = (var_8537_cast_fp16_8, var_8515_cast_fp16_8))[name = tensor<string, []>("aw_1257_cast_fp16")];
            tensor<string, []> aw_1259_equation_0 = const()[name = tensor<string, []>("aw_1259_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1259_cast_fp16 = einsum(equation = aw_1259_equation_0, values = (var_8537_cast_fp16_9, var_8515_cast_fp16_9))[name = tensor<string, []>("aw_1259_cast_fp16")];
            tensor<string, []> aw_1261_equation_0 = const()[name = tensor<string, []>("aw_1261_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1261_cast_fp16 = einsum(equation = aw_1261_equation_0, values = (var_8537_cast_fp16_10, var_8515_cast_fp16_10))[name = tensor<string, []>("aw_1261_cast_fp16")];
            tensor<string, []> aw_1263_equation_0 = const()[name = tensor<string, []>("aw_1263_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1263_cast_fp16 = einsum(equation = aw_1263_equation_0, values = (var_8537_cast_fp16_11, var_8515_cast_fp16_11))[name = tensor<string, []>("aw_1263_cast_fp16")];
            tensor<string, []> aw_1265_equation_0 = const()[name = tensor<string, []>("aw_1265_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1265_cast_fp16 = einsum(equation = aw_1265_equation_0, values = (var_8537_cast_fp16_12, var_8515_cast_fp16_12))[name = tensor<string, []>("aw_1265_cast_fp16")];
            tensor<string, []> aw_1267_equation_0 = const()[name = tensor<string, []>("aw_1267_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1267_cast_fp16 = einsum(equation = aw_1267_equation_0, values = (var_8537_cast_fp16_13, var_8515_cast_fp16_13))[name = tensor<string, []>("aw_1267_cast_fp16")];
            tensor<string, []> aw_1269_equation_0 = const()[name = tensor<string, []>("aw_1269_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1269_cast_fp16 = einsum(equation = aw_1269_equation_0, values = (var_8537_cast_fp16_14, var_8515_cast_fp16_14))[name = tensor<string, []>("aw_1269_cast_fp16")];
            tensor<string, []> aw_1271_equation_0 = const()[name = tensor<string, []>("aw_1271_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1271_cast_fp16 = einsum(equation = aw_1271_equation_0, values = (var_8537_cast_fp16_15, var_8515_cast_fp16_15))[name = tensor<string, []>("aw_1271_cast_fp16")];
            tensor<string, []> aw_1273_equation_0 = const()[name = tensor<string, []>("aw_1273_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1273_cast_fp16 = einsum(equation = aw_1273_equation_0, values = (var_8537_cast_fp16_16, var_8515_cast_fp16_16))[name = tensor<string, []>("aw_1273_cast_fp16")];
            tensor<string, []> aw_1275_equation_0 = const()[name = tensor<string, []>("aw_1275_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1275_cast_fp16 = einsum(equation = aw_1275_equation_0, values = (var_8537_cast_fp16_17, var_8515_cast_fp16_17))[name = tensor<string, []>("aw_1275_cast_fp16")];
            tensor<string, []> aw_1277_equation_0 = const()[name = tensor<string, []>("aw_1277_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1277_cast_fp16 = einsum(equation = aw_1277_equation_0, values = (var_8537_cast_fp16_18, var_8515_cast_fp16_18))[name = tensor<string, []>("aw_1277_cast_fp16")];
            tensor<string, []> aw_equation_0 = const()[name = tensor<string, []>("aw_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_cast_fp16 = einsum(equation = aw_equation_0, values = (var_8537_cast_fp16_19, var_8515_cast_fp16_19))[name = tensor<string, []>("aw_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8619_cast_fp16 = softmax(axis = var_8463, x = aw_1241_cast_fp16)[name = tensor<string, []>("op_8619_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8620_cast_fp16 = softmax(axis = var_8463, x = aw_1243_cast_fp16)[name = tensor<string, []>("op_8620_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8621_cast_fp16 = softmax(axis = var_8463, x = aw_1245_cast_fp16)[name = tensor<string, []>("op_8621_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8622_cast_fp16 = softmax(axis = var_8463, x = aw_1247_cast_fp16)[name = tensor<string, []>("op_8622_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8623_cast_fp16 = softmax(axis = var_8463, x = aw_1249_cast_fp16)[name = tensor<string, []>("op_8623_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8624_cast_fp16 = softmax(axis = var_8463, x = aw_1251_cast_fp16)[name = tensor<string, []>("op_8624_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8625_cast_fp16 = softmax(axis = var_8463, x = aw_1253_cast_fp16)[name = tensor<string, []>("op_8625_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8626_cast_fp16 = softmax(axis = var_8463, x = aw_1255_cast_fp16)[name = tensor<string, []>("op_8626_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8627_cast_fp16 = softmax(axis = var_8463, x = aw_1257_cast_fp16)[name = tensor<string, []>("op_8627_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8628_cast_fp16 = softmax(axis = var_8463, x = aw_1259_cast_fp16)[name = tensor<string, []>("op_8628_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8629_cast_fp16 = softmax(axis = var_8463, x = aw_1261_cast_fp16)[name = tensor<string, []>("op_8629_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8630_cast_fp16 = softmax(axis = var_8463, x = aw_1263_cast_fp16)[name = tensor<string, []>("op_8630_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8631_cast_fp16 = softmax(axis = var_8463, x = aw_1265_cast_fp16)[name = tensor<string, []>("op_8631_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8632_cast_fp16 = softmax(axis = var_8463, x = aw_1267_cast_fp16)[name = tensor<string, []>("op_8632_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8633_cast_fp16 = softmax(axis = var_8463, x = aw_1269_cast_fp16)[name = tensor<string, []>("op_8633_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8634_cast_fp16 = softmax(axis = var_8463, x = aw_1271_cast_fp16)[name = tensor<string, []>("op_8634_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8635_cast_fp16 = softmax(axis = var_8463, x = aw_1273_cast_fp16)[name = tensor<string, []>("op_8635_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8636_cast_fp16 = softmax(axis = var_8463, x = aw_1275_cast_fp16)[name = tensor<string, []>("op_8636_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8637_cast_fp16 = softmax(axis = var_8463, x = aw_1277_cast_fp16)[name = tensor<string, []>("op_8637_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_8638_cast_fp16 = softmax(axis = var_8463, x = aw_cast_fp16)[name = tensor<string, []>("op_8638_cast_fp16")];
            tensor<string, []> var_8640_equation_0 = const()[name = tensor<string, []>("op_8640_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8640_cast_fp16 = einsum(equation = var_8640_equation_0, values = (var_8558_cast_fp16_0, var_8619_cast_fp16))[name = tensor<string, []>("op_8640_cast_fp16")];
            tensor<string, []> var_8642_equation_0 = const()[name = tensor<string, []>("op_8642_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8642_cast_fp16 = einsum(equation = var_8642_equation_0, values = (var_8558_cast_fp16_1, var_8620_cast_fp16))[name = tensor<string, []>("op_8642_cast_fp16")];
            tensor<string, []> var_8644_equation_0 = const()[name = tensor<string, []>("op_8644_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8644_cast_fp16 = einsum(equation = var_8644_equation_0, values = (var_8558_cast_fp16_2, var_8621_cast_fp16))[name = tensor<string, []>("op_8644_cast_fp16")];
            tensor<string, []> var_8646_equation_0 = const()[name = tensor<string, []>("op_8646_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8646_cast_fp16 = einsum(equation = var_8646_equation_0, values = (var_8558_cast_fp16_3, var_8622_cast_fp16))[name = tensor<string, []>("op_8646_cast_fp16")];
            tensor<string, []> var_8648_equation_0 = const()[name = tensor<string, []>("op_8648_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8648_cast_fp16 = einsum(equation = var_8648_equation_0, values = (var_8558_cast_fp16_4, var_8623_cast_fp16))[name = tensor<string, []>("op_8648_cast_fp16")];
            tensor<string, []> var_8650_equation_0 = const()[name = tensor<string, []>("op_8650_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8650_cast_fp16 = einsum(equation = var_8650_equation_0, values = (var_8558_cast_fp16_5, var_8624_cast_fp16))[name = tensor<string, []>("op_8650_cast_fp16")];
            tensor<string, []> var_8652_equation_0 = const()[name = tensor<string, []>("op_8652_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8652_cast_fp16 = einsum(equation = var_8652_equation_0, values = (var_8558_cast_fp16_6, var_8625_cast_fp16))[name = tensor<string, []>("op_8652_cast_fp16")];
            tensor<string, []> var_8654_equation_0 = const()[name = tensor<string, []>("op_8654_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8654_cast_fp16 = einsum(equation = var_8654_equation_0, values = (var_8558_cast_fp16_7, var_8626_cast_fp16))[name = tensor<string, []>("op_8654_cast_fp16")];
            tensor<string, []> var_8656_equation_0 = const()[name = tensor<string, []>("op_8656_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8656_cast_fp16 = einsum(equation = var_8656_equation_0, values = (var_8558_cast_fp16_8, var_8627_cast_fp16))[name = tensor<string, []>("op_8656_cast_fp16")];
            tensor<string, []> var_8658_equation_0 = const()[name = tensor<string, []>("op_8658_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8658_cast_fp16 = einsum(equation = var_8658_equation_0, values = (var_8558_cast_fp16_9, var_8628_cast_fp16))[name = tensor<string, []>("op_8658_cast_fp16")];
            tensor<string, []> var_8660_equation_0 = const()[name = tensor<string, []>("op_8660_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8660_cast_fp16 = einsum(equation = var_8660_equation_0, values = (var_8558_cast_fp16_10, var_8629_cast_fp16))[name = tensor<string, []>("op_8660_cast_fp16")];
            tensor<string, []> var_8662_equation_0 = const()[name = tensor<string, []>("op_8662_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8662_cast_fp16 = einsum(equation = var_8662_equation_0, values = (var_8558_cast_fp16_11, var_8630_cast_fp16))[name = tensor<string, []>("op_8662_cast_fp16")];
            tensor<string, []> var_8664_equation_0 = const()[name = tensor<string, []>("op_8664_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8664_cast_fp16 = einsum(equation = var_8664_equation_0, values = (var_8558_cast_fp16_12, var_8631_cast_fp16))[name = tensor<string, []>("op_8664_cast_fp16")];
            tensor<string, []> var_8666_equation_0 = const()[name = tensor<string, []>("op_8666_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8666_cast_fp16 = einsum(equation = var_8666_equation_0, values = (var_8558_cast_fp16_13, var_8632_cast_fp16))[name = tensor<string, []>("op_8666_cast_fp16")];
            tensor<string, []> var_8668_equation_0 = const()[name = tensor<string, []>("op_8668_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8668_cast_fp16 = einsum(equation = var_8668_equation_0, values = (var_8558_cast_fp16_14, var_8633_cast_fp16))[name = tensor<string, []>("op_8668_cast_fp16")];
            tensor<string, []> var_8670_equation_0 = const()[name = tensor<string, []>("op_8670_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8670_cast_fp16 = einsum(equation = var_8670_equation_0, values = (var_8558_cast_fp16_15, var_8634_cast_fp16))[name = tensor<string, []>("op_8670_cast_fp16")];
            tensor<string, []> var_8672_equation_0 = const()[name = tensor<string, []>("op_8672_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8672_cast_fp16 = einsum(equation = var_8672_equation_0, values = (var_8558_cast_fp16_16, var_8635_cast_fp16))[name = tensor<string, []>("op_8672_cast_fp16")];
            tensor<string, []> var_8674_equation_0 = const()[name = tensor<string, []>("op_8674_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8674_cast_fp16 = einsum(equation = var_8674_equation_0, values = (var_8558_cast_fp16_17, var_8636_cast_fp16))[name = tensor<string, []>("op_8674_cast_fp16")];
            tensor<string, []> var_8676_equation_0 = const()[name = tensor<string, []>("op_8676_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8676_cast_fp16 = einsum(equation = var_8676_equation_0, values = (var_8558_cast_fp16_18, var_8637_cast_fp16))[name = tensor<string, []>("op_8676_cast_fp16")];
            tensor<string, []> var_8678_equation_0 = const()[name = tensor<string, []>("op_8678_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_8678_cast_fp16 = einsum(equation = var_8678_equation_0, values = (var_8558_cast_fp16_19, var_8638_cast_fp16))[name = tensor<string, []>("op_8678_cast_fp16")];
            tensor<bool, []> input_315_interleave_0 = const()[name = tensor<string, []>("input_315_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1280, 1, 1500]> input_315_cast_fp16 = concat(axis = var_8463, interleave = input_315_interleave_0, values = (var_8640_cast_fp16, var_8642_cast_fp16, var_8644_cast_fp16, var_8646_cast_fp16, var_8648_cast_fp16, var_8650_cast_fp16, var_8652_cast_fp16, var_8654_cast_fp16, var_8656_cast_fp16, var_8658_cast_fp16, var_8660_cast_fp16, var_8662_cast_fp16, var_8664_cast_fp16, var_8666_cast_fp16, var_8668_cast_fp16, var_8670_cast_fp16, var_8672_cast_fp16, var_8674_cast_fp16, var_8676_cast_fp16, var_8678_cast_fp16))[name = tensor<string, []>("input_315_cast_fp16")];
            tensor<string, []> var_8687_pad_type_0 = const()[name = tensor<string, []>("op_8687_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8687_strides_0 = const()[name = tensor<string, []>("op_8687_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8687_pad_0 = const()[name = tensor<string, []>("op_8687_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8687_dilations_0 = const()[name = tensor<string, []>("op_8687_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8687_groups_0 = const()[name = tensor<string, []>("op_8687_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 1280, 1, 1]> blocks_31_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_31_attn_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1244451712)))];
            tensor<fp16, [1280]> blocks_31_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_31_attn_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1247728576)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8687_cast_fp16 = conv(bias = blocks_31_attn_out_bias_to_fp16, dilations = var_8687_dilations_0, groups = var_8687_groups_0, pad = var_8687_pad_0, pad_type = var_8687_pad_type_0, strides = var_8687_strides_0, weight = blocks_31_attn_out_weight_to_fp16, x = input_315_cast_fp16)[name = tensor<string, []>("op_8687_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_127_cast_fp16 = add(x = inputs_125_cast_fp16, y = var_8687_cast_fp16)[name = tensor<string, []>("inputs_127_cast_fp16")];
            tensor<int32, [1]> input_317_axes_0 = const()[name = tensor<string, []>("input_317_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> input_317_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_317_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1247731200)))];
            tensor<fp16, [1280]> input_317_beta_0_to_fp16 = const()[name = tensor<string, []>("input_317_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1247733824)))];
            tensor<fp16, []> var_8697_to_fp16 = const()[name = tensor<string, []>("op_8697_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> input_317_cast_fp16 = layer_norm(axes = input_317_axes_0, beta = input_317_beta_0_to_fp16, epsilon = var_8697_to_fp16, gamma = input_317_gamma_0_to_fp16, x = inputs_127_cast_fp16)[name = tensor<string, []>("input_317_cast_fp16")];
            tensor<string, []> input_319_pad_type_0 = const()[name = tensor<string, []>("input_319_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_319_strides_0 = const()[name = tensor<string, []>("input_319_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_319_pad_0 = const()[name = tensor<string, []>("input_319_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_319_dilations_0 = const()[name = tensor<string, []>("input_319_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_319_groups_0 = const()[name = tensor<string, []>("input_319_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [5120, 1280, 1, 1]> blocks_31_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_31_mlp_0_weight_to_fp16"), val = tensor<fp16, [5120, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1247736448)))];
            tensor<fp16, [5120]> blocks_31_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_31_mlp_0_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1260843712)))];
            tensor<fp16, [1, 5120, 1, 1500]> input_319_cast_fp16 = conv(bias = blocks_31_mlp_0_bias_to_fp16, dilations = input_319_dilations_0, groups = input_319_groups_0, pad = input_319_pad_0, pad_type = input_319_pad_type_0, strides = input_319_strides_0, weight = blocks_31_mlp_0_weight_to_fp16, x = input_317_cast_fp16)[name = tensor<string, []>("input_319_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 5120, 1, 1500]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_319_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<string, []> var_8723_pad_type_0 = const()[name = tensor<string, []>("op_8723_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_8723_strides_0 = const()[name = tensor<string, []>("op_8723_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_8723_pad_0 = const()[name = tensor<string, []>("op_8723_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_8723_dilations_0 = const()[name = tensor<string, []>("op_8723_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8723_groups_0 = const()[name = tensor<string, []>("op_8723_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 5120, 1, 1]> blocks_31_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_31_mlp_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1260854016)))];
            tensor<fp16, [1280]> blocks_31_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_31_mlp_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1273961280)))];
            tensor<fp16, [1, 1280, 1, 1500]> var_8723_cast_fp16 = conv(bias = blocks_31_mlp_2_bias_to_fp16, dilations = var_8723_dilations_0, groups = var_8723_groups_0, pad = var_8723_pad_0, pad_type = var_8723_pad_type_0, strides = var_8723_strides_0, weight = blocks_31_mlp_2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_8723_cast_fp16")];
            tensor<fp16, [1, 1280, 1, 1500]> inputs_cast_fp16 = add(x = inputs_127_cast_fp16, y = var_8723_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<int32, [1]> x_axes_0 = const()[name = tensor<string, []>("x_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1280]> x_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1273963904)))];
            tensor<fp16, [1280]> x_beta_0_to_fp16 = const()[name = tensor<string, []>("x_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1273966528)))];
            tensor<fp16, []> var_8737_to_fp16 = const()[name = tensor<string, []>("op_8737_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1280, 1, 1500]> x_cast_fp16 = layer_norm(axes = x_axes_0, beta = x_beta_0_to_fp16, epsilon = var_8737_to_fp16, gamma = x_gamma_0_to_fp16, x = inputs_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<int32, [1]> var_8748_axes_0 = const()[name = tensor<string, []>("op_8748_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1280, 1500]> var_8748_cast_fp16 = squeeze(axes = var_8748_axes_0, x = x_cast_fp16)[name = tensor<string, []>("op_8748_cast_fp16")];
            tensor<int32, [3]> var_8751_perm_0 = const()[name = tensor<string, []>("op_8751_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<string, []> var_8751_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_8751_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, [1, 1500, 1280]> var_8751_cast_fp16 = transpose(perm = var_8751_perm_0, x = var_8748_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp32, [1, 1500, 1280]> output = cast(dtype = var_8751_cast_fp16_to_fp32_dtype_0, x = var_8751_cast_fp16)[name = tensor<string, []>("cast_130")];
        } -> (output);
}